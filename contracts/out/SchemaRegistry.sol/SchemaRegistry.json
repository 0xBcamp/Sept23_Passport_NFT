{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "AlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "registerer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct SchemaRecord",
          "name": "schema",
          "type": "tuple"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        }
      ],
      "name": "getSchema",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            }
          ],
          "internalType": "struct SchemaRecord",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "internalType": "contract ISchemaResolver",
          "name": "resolver",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "revocable",
          "type": "bool"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60e060405234801561001057600080fd5b506001608052600360a052600060c05260805160a05160c0516108fd61004c600039600060fe0152600060d50152600060ac01526108fd6000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d501461004657806360d7a27814610064578063a2ea7c6e14610085575b600080fd5b61004e6100a5565b60405161005b91906105a9565b60405180910390f35b6100776100723660046105c3565b610148565b60405190815260200161005b565b610098610093366004610668565b6102a3565b60405161005b9190610681565b60606100d07f00000000000000000000000000000000000000000000000000000000000000006103ad565b6100f97f00000000000000000000000000000000000000000000000000000000000000006103ad565b6101227f00000000000000000000000000000000000000000000000000000000000000006103ad565b604051602001610134939291906106cc565b604051602081830303815290604052905090565b60008060405180608001604052806000801b8152602001856001600160a01b03168152602001841515815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525092935091506101bd905082610440565b600081815260208190526040902054909150156101ed5760405163119b4fd360e11b815260040160405180910390fd5b808252600081815260208181526040918290208451815590840151600182018054938601511515600160a01b026001600160a81b03199094166001600160a01b0390921691909117929092179091556060830151839190600282019061025390826107c5565b50905050336001600160a01b0316817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e846040516102919190610681565b60405180910390a39695505050505050565b60408051608081018252600080825260208201819052918101919091526060808201526000828152602081815260409182902082516080810184528154815260018201546001600160a01b03811693820193909352600160a01b90920460ff161515928201929092526002820180549192916060840191906103249061073c565b80601f01602080910402602001604051908101604052809291908181526020018280546103509061073c565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b5050505050815250509050919050565b606060006103ba83610480565b600101905060008167ffffffffffffffff8111156103da576103da610726565b6040519080825280601f01601f191660200182016040528015610404576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461040e57509392505050565b600081606001518260200151836040015160405160200161046393929190610885565b604051602081830303815290604052805190602001209050919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106104bf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106104eb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061050957662386f26fc10000830492506010015b6305f5e1008310610521576305f5e100830492506008015b612710831061053557612710830492506004015b60648310610547576064830492506002015b600a8310610553576001015b92915050565b60005b8381101561057457818101518382015260200161055c565b50506000910152565b60008151808452610595816020860160208601610559565b601f01601f19169290920160200192915050565b6020815260006105bc602083018461057d565b9392505050565b600080600080606085870312156105d957600080fd5b843567ffffffffffffffff808211156105f157600080fd5b818701915087601f83011261060557600080fd5b81358181111561061457600080fd5b88602082850101111561062657600080fd5b602092830196509450508501356001600160a01b038116811461064857600080fd5b91506040850135801515811461065d57600080fd5b939692955090935050565b60006020828403121561067a57600080fd5b5035919050565b602081528151602082015260018060a01b036020830151166040820152604082015115156060820152600060608301516080808401526106c460a084018261057d565b949350505050565b600084516106de818460208901610559565b8083019050601760f91b80825285516106fe816001850160208a01610559565b60019201918201528351610719816002840160208801610559565b0160020195945050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061075057607f821691505b60208210810361077057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107c057600081815260208120601f850160051c8101602086101561079d5750805b601f850160051c820191505b818110156107bc578281556001016107a9565b5050505b505050565b815167ffffffffffffffff8111156107df576107df610726565b6107f3816107ed845461073c565b84610776565b602080601f83116001811461082857600084156108105750858301515b600019600386901b1c1916600185901b1785556107bc565b600085815260208120601f198616915b8281101561085757888601518255948401946001909101908401610838565b50858210156108755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008451610897818460208901610559565b60609490941b6bffffffffffffffffffffffff19169190930190815290151560f81b60148201526015019291505056fea2646970667358221220aaabd89a5f11a7377d4046dd725d8889e07cbedc91442c8d07ee25e03797ae0564736f6c63430008150033",
    "sourceMap": "345:1436:4:-:0;;;620:32;;;;;;;;;-1:-1:-1;641:1:4;705:14:5;;644:1:4;729:14:5;;647:1:4;753:13:5;;345:1436:4;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d501461004657806360d7a27814610064578063a2ea7c6e14610085575b600080fd5b61004e6100a5565b60405161005b91906105a9565b60405180910390f35b6100776100723660046105c3565b610148565b60405190815260200161005b565b610098610093366004610668565b6102a3565b60405161005b9190610681565b60606100d07f00000000000000000000000000000000000000000000000000000000000000006103ad565b6100f97f00000000000000000000000000000000000000000000000000000000000000006103ad565b6101227f00000000000000000000000000000000000000000000000000000000000000006103ad565b604051602001610134939291906106cc565b604051602081830303815290604052905090565b60008060405180608001604052806000801b8152602001856001600160a01b03168152602001841515815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525092935091506101bd905082610440565b600081815260208190526040902054909150156101ed5760405163119b4fd360e11b815260040160405180910390fd5b808252600081815260208181526040918290208451815590840151600182018054938601511515600160a01b026001600160a81b03199094166001600160a01b0390921691909117929092179091556060830151839190600282019061025390826107c5565b50905050336001600160a01b0316817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e846040516102919190610681565b60405180910390a39695505050505050565b60408051608081018252600080825260208201819052918101919091526060808201526000828152602081815260409182902082516080810184528154815260018201546001600160a01b03811693820193909352600160a01b90920460ff161515928201929092526002820180549192916060840191906103249061073c565b80601f01602080910402602001604051908101604052809291908181526020018280546103509061073c565b801561039d5780601f106103725761010080835404028352916020019161039d565b820191906000526020600020905b81548152906001019060200180831161038057829003601f168201915b5050505050815250509050919050565b606060006103ba83610480565b600101905060008167ffffffffffffffff8111156103da576103da610726565b6040519080825280601f01601f191660200182016040528015610404576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461040e57509392505050565b600081606001518260200151836040015160405160200161046393929190610885565b604051602081830303815290604052805190602001209050919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106104bf5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106104eb576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061050957662386f26fc10000830492506010015b6305f5e1008310610521576305f5e100830492506008015b612710831061053557612710830492506004015b60648310610547576064830492506002015b600a8310610553576001015b92915050565b60005b8381101561057457818101518382015260200161055c565b50506000910152565b60008151808452610595816020860160208601610559565b601f01601f19169290920160200192915050565b6020815260006105bc602083018461057d565b9392505050565b600080600080606085870312156105d957600080fd5b843567ffffffffffffffff808211156105f157600080fd5b818701915087601f83011261060557600080fd5b81358181111561061457600080fd5b88602082850101111561062657600080fd5b602092830196509450508501356001600160a01b038116811461064857600080fd5b91506040850135801515811461065d57600080fd5b939692955090935050565b60006020828403121561067a57600080fd5b5035919050565b602081528151602082015260018060a01b036020830151166040820152604082015115156060820152600060608301516080808401526106c460a084018261057d565b949350505050565b600084516106de818460208901610559565b8083019050601760f91b80825285516106fe816001850160208a01610559565b60019201918201528351610719816002840160208801610559565b0160020195945050505050565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061075057607f821691505b60208210810361077057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156107c057600081815260208120601f850160051c8101602086101561079d5750805b601f850160051c820191505b818110156107bc578281556001016107a9565b5050505b505050565b815167ffffffffffffffff8111156107df576107df610726565b6107f3816107ed845461073c565b84610776565b602080601f83116001811461082857600084156108105750858301515b600019600386901b1c1916600185901b1785556107bc565b600085815260208120601f198616915b8281101561085757888601518255948401946001909101908401610838565b50858210156108755787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60008451610897818460208901610559565b60609490941b6bffffffffffffffffffffffff19169190930190815290151560f81b60148201526015019291505056fea2646970667358221220aaabd89a5f11a7377d4046dd725d8889e07cbedc91442c8d07ee25e03797ae0564736f6c63430008150033",
    "sourceMap": "345:1436:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;890:234:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;694:598:4;;;;;;:::i;:::-;;:::i;:::-;;;1886:25:58;;;1874:2;1859:18;694:598:4;1740:177:58;1334:114:4;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;890:234:5:-;932:13;1017:24;1034:6;1017:16;:24::i;:::-;1048;1065:6;1048:16;:24::i;:::-;1079:23;1096:5;1079:16;:23::i;:::-;1000:103;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;957:160;;890:234;:::o;694:598:4:-;796:7;815:32;850:146;;;;;;;;138:1:0;882:9:4;;850:146;;;;943:8;-1:-1:-1;;;;;850:146:4;;;;;976:9;850:146;;;;;;913:6;;850:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;850:146:4;;;;-1:-1:-1;815:181:4;;-1:-1:-1;850:146:4;-1:-1:-1;1021:21:4;;-1:-1:-1;815:181:4;1021:7;:21::i;:::-;138:1:0;1056:14:4;;;;;;;;;;:18;1007:35;;-1:-1:-1;1056:31:4;1052:84;;1110:15;;-1:-1:-1;;;1110:15:4;;;;;;;;;;;1052:84;1146:22;;;:16;1178:14;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1178:29:4;-1:-1:-1;;;;;;1178:29:4;;;-1:-1:-1;;;;;1178:29:4;;;;;;;;;;;;;;;;;;1146:12;;1178:14;:29;;;;;;;;:::i;:::-;;;;;1239:10;-1:-1:-1;;;;;1223:41:4;1234:3;1223:41;1251:12;1223:41;;;;;;:::i;:::-;;;;;;;;1282:3;694:598;-1:-1:-1;;;;;;694:598:4:o;1334:114::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1427:9:4;:14;;;;;;;;;;;;1420:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;1420:21:4;;;;;;;;;-1:-1:-1;;;1420:21:4;;;;;;;;;;;;;;;;;;;;;1427:14;1420:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1334:114;;;:::o;637:698:43:-;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:43;-1:-1:-1;794:41:43;-1:-1:-1;955:28:43;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:43;-1:-1:-1;;;1175:2:43;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:43;1010:282;1256:21;-1:-1:-1;1312:6:43;637:698;-1:-1:-1;;;637:698:43:o;1578:201:4:-;1651:7;1704:12;:19;;;1725:12;:21;;;1748:12;:22;;;1687:84;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1677:95;;;;;;1670:102;;1578:201;;;:::o;12214:916:50:-;12267:7;;-1:-1:-1;;;12342:17:50;;12338:103;;-1:-1:-1;;;12379:17:50;;;-1:-1:-1;12424:2:50;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:50;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:50;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:50;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:50;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:50;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13025:66;13117:6;12214:916;-1:-1:-1;;12214:916:50:o;14:250:58:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:58;238:16;;231:27;14:250::o;269:271::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;522:2;501:15;-1:-1:-1;;497:29:58;488:39;;;;529:4;484:50;;269:271;-1:-1:-1;;269:271:58:o;545:220::-;694:2;683:9;676:21;657:4;714:45;755:2;744:9;740:18;732:6;714:45;:::i;:::-;706:53;545:220;-1:-1:-1;;;545:220:58:o;770:965::-;880:6;888;896;904;957:2;945:9;936:7;932:23;928:32;925:52;;;973:1;970;963:12;925:52;1013:9;1000:23;1042:18;1083:2;1075:6;1072:14;1069:34;;;1099:1;1096;1089:12;1069:34;1137:6;1126:9;1122:22;1112:32;;1182:7;1175:4;1171:2;1167:13;1163:27;1153:55;;1204:1;1201;1194:12;1153:55;1244:2;1231:16;1270:2;1262:6;1259:14;1256:34;;;1286:1;1283;1276:12;1256:34;1333:7;1326:4;1317:6;1313:2;1309:15;1305:26;1302:39;1299:59;;;1354:1;1351;1344:12;1299:59;1385:4;1377:13;;;;-1:-1:-1;1409:6:58;-1:-1:-1;;1450:20:58;;1437:34;-1:-1:-1;;;;;1500:31:58;;1490:42;;1480:70;;1546:1;1543;1536:12;1480:70;1569:5;-1:-1:-1;1626:2:58;1611:18;;1598:32;1668:15;;1661:23;1649:36;;1639:64;;1699:1;1696;1689:12;1639:64;770:965;;;;-1:-1:-1;770:965:58;;-1:-1:-1;;770:965:58:o;1922:180::-;1981:6;2034:2;2022:9;2013:7;2009:23;2005:32;2002:52;;;2050:1;2047;2040:12;2002:52;-1:-1:-1;2073:23:58;;1922:180;-1:-1:-1;1922:180:58:o;2107:571::-;2296:2;2285:9;2278:21;2341:6;2335:13;2330:2;2319:9;2315:18;2308:41;2430:1;2426;2421:3;2417:11;2413:19;2407:2;2399:6;2395:15;2389:22;2385:48;2380:2;2369:9;2365:18;2358:76;2502:2;2494:6;2490:15;2484:22;2477:30;2470:38;2465:2;2454:9;2450:18;2443:66;2259:4;2556:2;2548:6;2544:15;2538:22;2598:4;2591;2580:9;2576:20;2569:34;2620:52;2667:3;2656:9;2652:19;2638:12;2620:52;:::i;:::-;2612:60;2107:571;-1:-1:-1;;;;2107:571:58:o;2683:999::-;3112:3;3150:6;3144:13;3166:66;3225:6;3220:3;3213:4;3205:6;3201:17;3166:66;:::i;:::-;3263:6;3258:3;3254:16;3241:29;;-1:-1:-1;;;3315:2:58;3308:5;3301:17;3349:6;3343:13;3365:78;3434:8;3430:1;3423:5;3419:13;3412:4;3404:6;3400:17;3365:78;:::i;:::-;3506:1;3462:20;;3498:10;;;3491:22;3538:13;;3560:75;3538:13;3622:1;3614:10;;3607:4;3595:17;;3560:75;:::i;:::-;3655:17;3674:1;3651:25;;2683:999;-1:-1:-1;;;;;2683:999:58:o;3687:127::-;3748:10;3743:3;3739:20;3736:1;3729:31;3779:4;3776:1;3769:15;3803:4;3800:1;3793:15;3819:380;3898:1;3894:12;;;;3941;;;3962:61;;4016:4;4008:6;4004:17;3994:27;;3962:61;4069:2;4061:6;4058:14;4038:18;4035:38;4032:161;;4115:10;4110:3;4106:20;4103:1;4096:31;4150:4;4147:1;4140:15;4178:4;4175:1;4168:15;4032:161;;3819:380;;;:::o;4330:545::-;4432:2;4427:3;4424:11;4421:448;;;4468:1;4493:5;4489:2;4482:17;4538:4;4534:2;4524:19;4608:2;4596:10;4592:19;4589:1;4585:27;4579:4;4575:38;4644:4;4632:10;4629:20;4626:47;;;-1:-1:-1;4667:4:58;4626:47;4722:2;4717:3;4713:12;4710:1;4706:20;4700:4;4696:31;4686:41;;4777:82;4795:2;4788:5;4785:13;4777:82;;;4840:17;;;4821:1;4810:13;4777:82;;;4781:3;;;4421:448;4330:545;;;:::o;5051:1352::-;5177:3;5171:10;5204:18;5196:6;5193:30;5190:56;;;5226:18;;:::i;:::-;5255:97;5345:6;5305:38;5337:4;5331:11;5305:38;:::i;:::-;5299:4;5255:97;:::i;:::-;5407:4;;5471:2;5460:14;;5488:1;5483:663;;;;6190:1;6207:6;6204:89;;;-1:-1:-1;6259:19:58;;;6253:26;6204:89;-1:-1:-1;;5008:1:58;5004:11;;;5000:24;4996:29;4986:40;5032:1;5028:11;;;4983:57;6306:81;;5453:944;;5483:663;4277:1;4270:14;;;4314:4;4301:18;;-1:-1:-1;;5519:20:58;;;5637:236;5651:7;5648:1;5645:14;5637:236;;;5740:19;;;5734:26;5719:42;;5832:27;;;;5800:1;5788:14;;;;5667:19;;5637:236;;;5641:3;5901:6;5892:7;5889:19;5886:201;;;5962:19;;;5956:26;-1:-1:-1;;6045:1:58;6041:14;;;6057:3;6037:24;6033:37;6029:42;6014:58;5999:74;;5886:201;-1:-1:-1;;;;;6133:1:58;6117:14;;;6113:22;6100:36;;-1:-1:-1;5051:1352:58:o;6540:541::-;6745:3;6783:6;6777:13;6799:66;6858:6;6853:3;6846:4;6838:6;6834:17;6799:66;:::i;:::-;6934:2;6930:15;;;;-1:-1:-1;;6926:53:58;6887:16;;;;6912:68;;;7028:14;;7021:22;7016:3;7012:32;7007:2;6996:14;;6989:56;7072:2;7061:14;;6540:541;-1:-1:-1;;6540:541:58:o",
    "linkReferences": {},
    "immutableReferences": {
      "2511": [
        {
          "start": 172,
          "length": 32
        }
      ],
      "2513": [
        {
          "start": 213,
          "length": 32
        }
      ],
      "2515": [
        {
          "start": 254,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "getSchema(bytes32)": "a2ea7c6e",
    "register(string,address,bool)": "60d7a278",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SchemaRecord\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"params\":{\"registerer\":\"The address of the account used to register the schema.\",\"schema\":\"The schema data.\",\"uid\":\"The schema UID.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Creates a new SchemaRegistry instance.\"},\"getSchema(bytes32)\":{\"params\":{\"uid\":\"The UID of the schema to retrieve.\"},\"returns\":{\"_0\":\"The schema data members.\"}},\"register(string,address,bool)\":{\"params\":{\"resolver\":\"An optional schema resolver.\",\"revocable\":\"Whether the schema allows revocations explicitly.\",\"schema\":\"The schema data schema.\"},\"returns\":{\"_0\":\"The UID of the new schema.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"SchemaRegistry\",\"version\":1},\"userdoc\":{\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"notice\":\"Emitted when a new schema has been registered\"}},\"kind\":\"user\",\"methods\":{\"getSchema(bytes32)\":{\"notice\":\"Returns an existing schema by UID\"},\"register(string,address,bool)\":{\"notice\":\"Submits and reserves a new schema\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The global schema registry.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/eas-contracts/contracts/SchemaRegistry.sol\":\"SchemaRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-attestation-service/=lib/eas-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"lib/eas-contracts/contracts/SchemaRegistry.sol\":{\"keccak256\":\"0x898dff0737ce9c360a5c25742ed80c74fe02f4f66c808b438d48ea46becec6c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59b1b1d40efa94e07b6952edfb8c9c992bd26edbb05733bb9a3f910e41b9ee97\",\"dweb:/ipfs/QmVVa2ADqKfnaFHSVwt6KR5MW69ACQc7z53Z8HgkoYXiEL\"]},\"lib/eas-contracts/contracts/Semver.sol\":{\"keccak256\":\"0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd\",\"dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "registerer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct SchemaRecord",
              "name": "schema",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Registered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "details": "Creates a new SchemaRegistry instance."
          },
          "getSchema(bytes32)": {
            "params": {
              "uid": "The UID of the schema to retrieve."
            },
            "returns": {
              "_0": "The schema data members."
            }
          },
          "register(string,address,bool)": {
            "params": {
              "resolver": "An optional schema resolver.",
              "revocable": "Whether the schema allows revocations explicitly.",
              "schema": "The schema data schema."
            },
            "returns": {
              "_0": "The UID of the new schema."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getSchema(bytes32)": {
            "notice": "Returns an existing schema by UID"
          },
          "register(string,address,bool)": {
            "notice": "Submits and reserves a new schema"
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ethereum-attestation-service/=lib/eas-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eas-contracts/=lib/eas-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "lib/eas-contracts/contracts/SchemaRegistry.sol": "SchemaRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
        "urls": [
          "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
          "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/SchemaRegistry.sol": {
        "keccak256": "0x898dff0737ce9c360a5c25742ed80c74fe02f4f66c808b438d48ea46becec6c8",
        "urls": [
          "bzz-raw://59b1b1d40efa94e07b6952edfb8c9c992bd26edbb05733bb9a3f910e41b9ee97",
          "dweb:/ipfs/QmVVa2ADqKfnaFHSVwt6KR5MW69ACQc7z53Z8HgkoYXiEL"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/Semver.sol": {
        "keccak256": "0x5883c852730b00d73b10475f3b382afce8f30b89f337078ec03a66c463e048a8",
        "urls": [
          "bzz-raw://0ab7f1cf03a19860d07100bd61a8138346c5682bced5dbc569847d35241ba1fd",
          "dweb:/ipfs/QmfTTnWbarxDZuUCCextgxrTcATy1N1XoPBmFYj2nQZJUG"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
        "urls": [
          "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
          "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "lib/eas-contracts/contracts/SchemaRegistry.sol",
    "id": 2505,
    "exportedSymbols": {
      "EMPTY_UID": [
        4
      ],
      "ISchemaRegistry": [
        2372
      ],
      "ISchemaResolver": [
        2957
      ],
      "SchemaRecord": [
        2338
      ],
      "SchemaRegistry": [
        2504
      ],
      "Semver": [
        2567
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:1749:4",
    "nodes": [
      {
        "id": 2374,
        "nodeType": "PragmaDirective",
        "src": "33:24:4",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 2376,
        "nodeType": "ImportDirective",
        "src": "59:65:4",
        "nodes": [],
        "absolutePath": "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol",
        "file": "./resolver/ISchemaResolver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2505,
        "sourceUnit": 2958,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2375,
              "name": "ISchemaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2957,
              "src": "68:15:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2378,
        "nodeType": "ImportDirective",
        "src": "126:41:4",
        "nodes": [],
        "absolutePath": "lib/eas-contracts/contracts/Common.sol",
        "file": "./Common.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2505,
        "sourceUnit": 66,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2377,
              "name": "EMPTY_UID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 4,
              "src": "135:9:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2380,
        "nodeType": "ImportDirective",
        "src": "168:38:4",
        "nodes": [],
        "absolutePath": "lib/eas-contracts/contracts/Semver.sol",
        "file": "./Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2505,
        "sourceUnit": 2568,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2379,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2567,
              "src": "177:6:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2383,
        "nodeType": "ImportDirective",
        "src": "207:70:4",
        "nodes": [],
        "absolutePath": "lib/eas-contracts/contracts/ISchemaRegistry.sol",
        "file": "./ISchemaRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2505,
        "sourceUnit": 2373,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2381,
              "name": "ISchemaRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2372,
              "src": "216:15:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 2382,
              "name": "SchemaRecord",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2338,
              "src": "233:12:4",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2504,
        "nodeType": "ContractDefinition",
        "src": "345:1436:4",
        "nodes": [
          {
            "id": 2390,
            "nodeType": "ErrorDefinition",
            "src": "402:22:4",
            "nodes": [],
            "errorSelector": "23369fa6",
            "name": "AlreadyExists",
            "nameLocation": "408:13:4",
            "parameters": {
              "id": 2389,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "421:2:4"
            }
          },
          {
            "id": 2395,
            "nodeType": "VariableDeclaration",
            "src": "494:67:4",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_registry",
            "nameLocation": "552:9:4",
            "scope": 2504,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$2338_storage_$",
              "typeString": "mapping(bytes32 => struct SchemaRecord)"
            },
            "typeName": {
              "id": 2394,
              "keyName": "uid",
              "keyNameLocation": "510:3:4",
              "keyType": {
                "id": 2391,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "502:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "494:49:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$2338_storage_$",
                "typeString": "mapping(bytes32 => struct SchemaRecord)"
              },
              "valueName": "schemaRecord",
              "valueNameLocation": "530:12:4",
              "valueType": {
                "id": 2393,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 2392,
                  "name": "SchemaRecord",
                  "nameLocations": [
                    "517:12:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2338,
                  "src": "517:12:4"
                },
                "referencedDeclaration": 2338,
                "src": "517:12:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage_ptr",
                  "typeString": "struct SchemaRecord"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 2405,
            "nodeType": "FunctionDefinition",
            "src": "620:32:4",
            "nodes": [],
            "body": {
              "id": 2404,
              "nodeType": "Block",
              "src": "650:2:4",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 2396,
              "nodeType": "StructuredDocumentation",
              "src": "568:47:4",
              "text": "@dev Creates a new SchemaRegistry instance."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 2399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "641:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "33",
                    "id": 2400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "644:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_3_by_1",
                      "typeString": "int_const 3"
                    },
                    "value": "3"
                  },
                  {
                    "hexValue": "30",
                    "id": 2401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "647:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 2402,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2398,
                  "name": "Semver",
                  "nameLocations": [
                    "634:6:4"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2567,
                  "src": "634:6:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "634:15:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2397,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "631:2:4"
            },
            "returnParameters": {
              "id": 2403,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "650:0:4"
            },
            "scope": 2504,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2467,
            "nodeType": "FunctionDefinition",
            "src": "694:598:4",
            "nodes": [],
            "body": {
              "id": 2466,
              "nodeType": "Block",
              "src": "805:487:4",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2420,
                      "mutability": "mutable",
                      "name": "schemaRecord",
                      "nameLocation": "835:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2466,
                      "src": "815:32:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                        "typeString": "struct SchemaRecord"
                      },
                      "typeName": {
                        "id": 2419,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2418,
                          "name": "SchemaRecord",
                          "nameLocations": [
                            "815:12:4"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2338,
                          "src": "815:12:4"
                        },
                        "referencedDeclaration": 2338,
                        "src": "815:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage_ptr",
                          "typeString": "struct SchemaRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2427,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2422,
                        "name": "EMPTY_UID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4,
                        "src": "882:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 2423,
                        "name": "schema",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2408,
                        "src": "913:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 2424,
                        "name": "resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2411,
                        "src": "943:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISchemaResolver_$2957",
                          "typeString": "contract ISchemaResolver"
                        }
                      },
                      {
                        "id": 2425,
                        "name": "revocable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2413,
                        "src": "976:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISchemaResolver_$2957",
                          "typeString": "contract ISchemaResolver"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2421,
                      "name": "SchemaRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2338,
                      "src": "850:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SchemaRecord_$2338_storage_ptr_$",
                        "typeString": "type(struct SchemaRecord storage pointer)"
                      }
                    },
                    "id": 2426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "877:3:4",
                      "905:6:4",
                      "933:8:4",
                      "965:9:4"
                    ],
                    "names": [
                      "uid",
                      "schema",
                      "resolver",
                      "revocable"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "850:146:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                      "typeString": "struct SchemaRecord memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "815:181:4"
                },
                {
                  "assignments": [
                    2429
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2429,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1015:3:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 2466,
                      "src": "1007:11:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2428,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1007:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2433,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 2431,
                        "name": "schemaRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "1029:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      ],
                      "id": 2430,
                      "name": "_getUID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2503,
                      "src": "1021:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_SchemaRecord_$2338_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct SchemaRecord memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1021:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1007:35:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 2439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 2434,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2395,
                          "src": "1056:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$2338_storage_$",
                            "typeString": "mapping(bytes32 => struct SchemaRecord storage ref)"
                          }
                        },
                        "id": 2436,
                        "indexExpression": {
                          "id": 2435,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2429,
                          "src": "1066:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1056:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage",
                          "typeString": "struct SchemaRecord storage ref"
                        }
                      },
                      "id": 2437,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1071:3:4",
                      "memberName": "uid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2330,
                      "src": "1056:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 2438,
                      "name": "EMPTY_UID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4,
                      "src": "1078:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1056:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2444,
                  "nodeType": "IfStatement",
                  "src": "1052:84:4",
                  "trueBody": {
                    "id": 2443,
                    "nodeType": "Block",
                    "src": "1089:47:4",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2440,
                            "name": "AlreadyExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2390,
                            "src": "1110:13:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 2441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1110:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2442,
                        "nodeType": "RevertStatement",
                        "src": "1103:22:4"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 2449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2445,
                        "name": "schemaRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "1146:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      },
                      "id": 2447,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1159:3:4",
                      "memberName": "uid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2330,
                      "src": "1146:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2448,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2429,
                      "src": "1165:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1146:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 2450,
                  "nodeType": "ExpressionStatement",
                  "src": "1146:22:4"
                },
                {
                  "expression": {
                    "id": 2455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2451,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2395,
                        "src": "1178:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$2338_storage_$",
                          "typeString": "mapping(bytes32 => struct SchemaRecord storage ref)"
                        }
                      },
                      "id": 2453,
                      "indexExpression": {
                        "id": 2452,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "1188:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1178:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage",
                        "typeString": "struct SchemaRecord storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2454,
                      "name": "schemaRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2420,
                      "src": "1195:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                        "typeString": "struct SchemaRecord memory"
                      }
                    },
                    "src": "1178:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage",
                      "typeString": "struct SchemaRecord storage ref"
                    }
                  },
                  "id": 2456,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:29:4"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2458,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2429,
                        "src": "1234:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 2459,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1239:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1243:6:4",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1239:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2461,
                        "name": "schemaRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2420,
                        "src": "1251:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      ],
                      "id": 2457,
                      "name": "Registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2349,
                      "src": "1223:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_struct$_SchemaRecord_$2338_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,struct SchemaRecord memory)"
                      }
                    },
                    "id": 2462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2463,
                  "nodeType": "EmitStatement",
                  "src": "1218:46:4"
                },
                {
                  "expression": {
                    "id": 2464,
                    "name": "uid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2429,
                    "src": "1282:3:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2417,
                  "id": 2465,
                  "nodeType": "Return",
                  "src": "1275:10:4"
                }
              ]
            },
            "baseFunctions": [
              2362
            ],
            "documentation": {
              "id": 2406,
              "nodeType": "StructuredDocumentation",
              "src": "658:31:4",
              "text": "@inheritdoc ISchemaRegistry"
            },
            "functionSelector": "60d7a278",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "703:8:4",
            "parameters": {
              "id": 2414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2408,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "728:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "712:22:4",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2407,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "712:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2411,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "752:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "736:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISchemaResolver_$2957",
                    "typeString": "contract ISchemaResolver"
                  },
                  "typeName": {
                    "id": 2410,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2409,
                      "name": "ISchemaResolver",
                      "nameLocations": [
                        "736:15:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2957,
                      "src": "736:15:4"
                    },
                    "referencedDeclaration": 2957,
                    "src": "736:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISchemaResolver_$2957",
                      "typeString": "contract ISchemaResolver"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2413,
                  "mutability": "mutable",
                  "name": "revocable",
                  "nameLocation": "767:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "762:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2412,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "762:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "711:66:4"
            },
            "returnParameters": {
              "id": 2417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2416,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2467,
                  "src": "796:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2415,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "796:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "795:9:4"
            },
            "scope": 2504,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2481,
            "nodeType": "FunctionDefinition",
            "src": "1334:114:4",
            "nodes": [],
            "body": {
              "id": 2480,
              "nodeType": "Block",
              "src": "1410:38:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 2476,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2395,
                      "src": "1427:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$2338_storage_$",
                        "typeString": "mapping(bytes32 => struct SchemaRecord storage ref)"
                      }
                    },
                    "id": 2478,
                    "indexExpression": {
                      "id": 2477,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2470,
                      "src": "1437:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1427:14:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage",
                      "typeString": "struct SchemaRecord storage ref"
                    }
                  },
                  "functionReturnParameters": 2475,
                  "id": 2479,
                  "nodeType": "Return",
                  "src": "1420:21:4"
                }
              ]
            },
            "baseFunctions": [
              2371
            ],
            "documentation": {
              "id": 2468,
              "nodeType": "StructuredDocumentation",
              "src": "1298:31:4",
              "text": "@inheritdoc ISchemaRegistry"
            },
            "functionSelector": "a2ea7c6e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "1343:9:4",
            "parameters": {
              "id": 2471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2470,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "1361:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2481,
                  "src": "1353:11:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2469,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1353:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1352:13:4"
            },
            "returnParameters": {
              "id": 2475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2474,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2481,
                  "src": "1389:19:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                    "typeString": "struct SchemaRecord"
                  },
                  "typeName": {
                    "id": 2473,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2472,
                      "name": "SchemaRecord",
                      "nameLocations": [
                        "1389:12:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2338,
                      "src": "1389:12:4"
                    },
                    "referencedDeclaration": 2338,
                    "src": "1389:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage_ptr",
                      "typeString": "struct SchemaRecord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1388:21:4"
            },
            "scope": 2504,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2503,
            "nodeType": "FunctionDefinition",
            "src": "1578:201:4",
            "nodes": [],
            "body": {
              "id": 2502,
              "nodeType": "Block",
              "src": "1660:119:4",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2493,
                              "name": "schemaRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2485,
                              "src": "1704:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                                "typeString": "struct SchemaRecord memory"
                              }
                            },
                            "id": 2494,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1717:6:4",
                            "memberName": "schema",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2337,
                            "src": "1704:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 2495,
                              "name": "schemaRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2485,
                              "src": "1725:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                                "typeString": "struct SchemaRecord memory"
                              }
                            },
                            "id": 2496,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1738:8:4",
                            "memberName": "resolver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2333,
                            "src": "1725:21:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISchemaResolver_$2957",
                              "typeString": "contract ISchemaResolver"
                            }
                          },
                          {
                            "expression": {
                              "id": 2497,
                              "name": "schemaRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2485,
                              "src": "1748:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                                "typeString": "struct SchemaRecord memory"
                              }
                            },
                            "id": 2498,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1761:9:4",
                            "memberName": "revocable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2335,
                            "src": "1748:22:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISchemaResolver_$2957",
                              "typeString": "contract ISchemaResolver"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 2491,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1687:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2492,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1691:12:4",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1687:16:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1687:84:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 2490,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1677:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 2500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1677:95:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 2489,
                  "id": 2501,
                  "nodeType": "Return",
                  "src": "1670:102:4"
                }
              ]
            },
            "documentation": {
              "id": 2482,
              "nodeType": "StructuredDocumentation",
              "src": "1454:119:4",
              "text": "@dev Calculates a UID for a given schema.\n @param schemaRecord The input schema.\n @return schema UID."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getUID",
            "nameLocation": "1587:7:4",
            "parameters": {
              "id": 2486,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2485,
                  "mutability": "mutable",
                  "name": "schemaRecord",
                  "nameLocation": "1615:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "1595:32:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SchemaRecord_$2338_memory_ptr",
                    "typeString": "struct SchemaRecord"
                  },
                  "typeName": {
                    "id": 2484,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2483,
                      "name": "SchemaRecord",
                      "nameLocations": [
                        "1595:12:4"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2338,
                      "src": "1595:12:4"
                    },
                    "referencedDeclaration": 2338,
                    "src": "1595:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$2338_storage_ptr",
                      "typeString": "struct SchemaRecord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1594:34:4"
            },
            "returnParameters": {
              "id": 2489,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2488,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2503,
                  "src": "1651:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 2487,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1651:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:9:4"
            },
            "scope": 2504,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2385,
              "name": "ISchemaRegistry",
              "nameLocations": [
                "372:15:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2372,
              "src": "372:15:4"
            },
            "id": 2386,
            "nodeType": "InheritanceSpecifier",
            "src": "372:15:4"
          },
          {
            "baseName": {
              "id": 2387,
              "name": "Semver",
              "nameLocations": [
                "389:6:4"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2567,
              "src": "389:6:4"
            },
            "id": 2388,
            "nodeType": "InheritanceSpecifier",
            "src": "389:6:4"
          }
        ],
        "canonicalName": "SchemaRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2384,
          "nodeType": "StructuredDocumentation",
          "src": "279:66:4",
          "text": "@title SchemaRegistry\n @notice The global schema registry."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2504,
          2567,
          2372
        ],
        "name": "SchemaRegistry",
        "nameLocation": "354:14:4",
        "scope": 2505,
        "usedErrors": [
          2390
        ],
        "usedEvents": [
          2349
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 4
}