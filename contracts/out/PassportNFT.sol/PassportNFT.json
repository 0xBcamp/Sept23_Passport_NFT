{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEAS",
          "name": "eas",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "schemaUID",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "initialMembers",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "AlreadyAuthorized",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "AlreadyUnauthorized",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "CannotAuthorizeZeroAddress",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721IncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721InsufficientApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721NonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PassportAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PassportCannotBeTransfered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PassportNotMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "TransferFailed",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PassportCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "authorize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "passportHolder",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_placeOfBirth",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_dateOfBirth",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "createPassport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllAuthorizedMembers",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPassport",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "placeOfBirth",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dateOfBirth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueDate",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPassportId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        }
      ],
      "name": "grantStamp",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "attestationUID",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "isAuthorzedMember",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "schemaUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "member",
          "type": "address"
        }
      ],
      "name": "unauthorize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60c06040523480156200001157600080fd5b50604051620026ae380380620026ae8339810160408190526200003491620001be565b82826040518060400160405280600b81526020016a14185cdcdc1bdc9d13919560aa1b815250604051806040016040528060038152602001624d544b60e81b815250816000908162000087919062000341565b50600162000096828262000341565b5050506080526001600160a01b031660a05260005b815181101562000173576000828281518110620000cc57620000cc6200040d565b6020026020010151905060006001600160a01b0316816001600160a01b031603620000f857506200015e565b6008805460018181019092557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b039093166001600160a01b0319909316831790556000918252600a6020526040909120805460ff191690911790555b806200016a8162000423565b915050620000ab565b505050506200044b565b6001600160a01b03811681146200019357600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b8051620001b9816200017d565b919050565b600080600060608486031215620001d457600080fd5b8351620001e1816200017d565b60208581015160408701519295509350906001600160401b03808211156200020857600080fd5b818701915087601f8301126200021d57600080fd5b81518181111562000232576200023262000196565b8060051b604051601f19603f830116810181811085821117156200025a576200025a62000196565b60405291825284820192508381018501918a8311156200027957600080fd5b938501935b82851015620002a2576200029285620001ac565b845293850193928501926200027e565b8096505050505050509250925092565b600181811c90821680620002c757607f821691505b602082108103620002e857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200033c57600081815260208120601f850160051c81016020861015620003175750805b601f850160051c820191505b81811015620003385782815560010162000323565b5050505b505050565b81516001600160401b038111156200035d576200035d62000196565b62000375816200036e8454620002b2565b84620002ee565b602080601f831160018114620003ad5760008415620003945750858301515b600019600386901b1c1916600185901b17855562000338565b600085815260208120601f198616915b82811015620003de57888601518255948401946001909101908401620003bd565b5085821015620003fd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b6000600182016200044457634e487b7160e01b600052601160045260246000fd5b5060010190565b60805160a0516122366200047860003960006112dd0152600081816104a8015261131701526122366000f3fe6080604052600436106101395760003560e01c806393138b1e116100ab578063c87b56dd1161006f578063c87b56dd14610414578063e985e9c514610434578063efa309ff14610454578063f0b37c0414610476578063f3de050614610496578063ffeacfda146104ca57600080fd5b806393138b1e1461036657806395d89b411461039f578063a22cb465146103b4578063b6a5d7de146103d4578063b88d4fde146103f457600080fd5b806323b872dd116100fd57806323b872dd146102a157806342842e0e146102c15780636352211e146102e157806370a082311461030157806378f7aef0146103215780638eb20b0b1461034157600080fd5b806301ffc9a7146101ae57806306fdde03146101e3578063081812fc14610205578063095ea7b31461023d57806310a943cf1461025d57600080fd5b366101a957604051600090339034908381818185875af1925050503d8060008114610180576040519150601f19603f3d011682016040523d82523d6000602084013e610185565b606091505b50509050806101a7576040516312171d8360e31b815260040160405180910390fd5b005b600080fd5b3480156101ba57600080fd5b506101ce6101c9366004611a03565b6104ea565b60405190151581526020015b60405180910390f35b3480156101ef57600080fd5b506101f86104fb565b6040516101da9190611a70565b34801561021157600080fd5b50610225610220366004611a83565b61058d565b6040516001600160a01b0390911681526020016101da565b34801561024957600080fd5b506101a7610258366004611ab8565b6105b6565b34801561026957600080fd5b50610293610278366004611ae2565b6001600160a01b03166000908152600b602052604090205490565b6040519081526020016101da565b3480156102ad57600080fd5b506101a76102bc366004611afd565b6105c5565b3480156102cd57600080fd5b506101a76102dc366004611afd565b610613565b3480156102ed57600080fd5b506102256102fc366004611a83565b61062e565b34801561030d57600080fd5b5061029361031c366004611ae2565b610639565b34801561032d57600080fd5b506101a761033c366004611c0e565b610686565b34801561034d57600080fd5b50610356610882565b6040516101da9493929190611cd0565b34801561037257600080fd5b506101ce610381366004611ae2565b6001600160a01b03166000908152600a602052604090205460ff1690565b3480156103ab57600080fd5b506101f8610a84565b3480156103c057600080fd5b506101a76103cf366004611d09565b610a93565b3480156103e057600080fd5b506101a76103ef366004611ae2565b610a9e565b34801561040057600080fd5b506101a761040f366004611d45565b610bad565b34801561042057600080fd5b506101f861042f366004611a83565b610bca565b34801561044057600080fd5b506101ce61044f366004611dc1565b610bd5565b34801561046057600080fd5b50610469610c03565b6040516101da9190611df4565b34801561048257600080fd5b506101a7610491366004611ae2565b610c64565b3480156104a257600080fd5b506102937f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d657600080fd5b506102936104e5366004611e41565b610dee565b60006104f582610ea5565b92915050565b60606000805461050a90611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461053690611ec2565b80156105835780601f1061055857610100808354040283529160200191610583565b820191906000526020600020905b81548152906001019060200180831161056657829003601f168201915b5050505050905090565b600061059882610eca565b506000828152600460205260409020546001600160a01b03166104f5565b6105c1828233610f03565b5050565b6001600160a01b038316158015906105e557506001600160a01b03821615155b1561060357604051630b04e6e360e41b815260040160405180910390fd5b61060e838383610f10565b505050565b61060e83838360405180602001604052806000815250610bad565b60006104f582610eca565b60006001600160a01b03821661066a576040516322718ad960e21b8152600060048201526024015b60405180910390fd5b506001600160a01b031660009081526003602052604090205490565b336000818152600a602052604090205460ff166106c15760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b0388166000908152600b6020526040902054156106f8576040516370f9e29b60e11b815260040160405180910390fd5b600060076000815461070990611f12565b91829055506040805160c06020601f8c01819004028201810190925260a081018a81529293509182918b908b9081908501838280828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092018290525093855250505060208083018890524260408085019190915280518381528083018252606090940193909352848252600c905220815181906107c49082611f79565b50602082015160018201906107d99082611f79565b5060408201516002820155606082015160038201556080820151805161080991600484019160209091019061198a565b5050506001600160a01b0389166000908152600b602052604090208190556108318982610f95565b61083b8184610faf565b6040516001600160a01b038a1681527f325b88bc4ac3fed38ad6d226bfb680c4dae1e2be7e3ca7865aff5ebad93ad6cf9060200160405180910390a1505050505050505050565b336000908152600b6020526040812054606091829181908082036108b9576040516383bf443960e01b815260040160405180910390fd5b6000818152600c6020526040808220815160a081019092528054829082906108e090611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461090c90611ec2565b80156109595780601f1061092e57610100808354040283529160200191610959565b820191906000526020600020905b81548152906001019060200180831161093c57829003601f168201915b5050505050815260200160018201805461097290611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461099e90611ec2565b80156109eb5780601f106109c0576101008083540402835291602001916109eb565b820191906000526020600020905b8154815290600101906020018083116109ce57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015610a5757602002820191906000526020600020905b815481526020019060010190808311610a43575b505050919092525050815160208301516040840151606090940151919a9099509297509550909350505050565b60606001805461050a90611ec2565b6105c1338383610fff565b336000818152600a602052604090205460ff16610ad95760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b038216610b005760405163a9d8d06360e01b815260040160405180910390fd5b6001600160a01b0382166000908152600a602052604090205460ff1615610b4557604051637103fd5f60e11b81526001600160a01b0383166004820152602401610661565b506008805460018181019092557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b039093166001600160a01b0319909316831790556000918252600a6020526040909120805460ff19169091179055565b610bb88484846105c5565b610bc48484848461109e565b50505050565b60606104f5826111c7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6060600880548060200260200160405190810160405280929190818152602001828054801561058357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c3d575050505050905090565b336000818152600a602052604090205460ff16610c9f5760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b0382166000908152600a602052604090205460ff16610ce35760405163032cc75b60e21b81526001600160a01b0383166004820152602401610661565b6001600160a01b03821660009081526009602052604081205460088054919291610d0f90600190612039565b81548110610d1f57610d1f61204c565b600091825260209091200154600880546001600160a01b039092169250829184908110610d4e57610d4e61204c565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905591831681526009909152604090208290556008805480610d9857610d98612062565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03959095168152600a85526040808220805460ff19169055600990955293842093909355505050565b336000818152600a602052604081205490919060ff16610e2c5760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b0387166000908152600b602052604081205490819003610e66576040516383bf443960e01b815260040160405180910390fd5b610e743388888888426112d8565b6000918252600c60209081526040832060040180546001810182559084529220909101819055979650505050505050565b60006001600160e01b03198216632483248360e11b14806104f557506104f582611418565b6000818152600260205260408120546001600160a01b0316806104f557604051637e27328960e01b815260048101849052602401610661565b61060e8383836001611468565b6001600160a01b038216610f3a57604051633250574960e11b815260006004820152602401610661565b6000610f4783833361156e565b9050836001600160a01b0316816001600160a01b031614610bc4576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610661565b6105c1828260405180602001604052806000815250611667565b6000828152600660205260409020610fc78282611f79565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b03821661103157604051630b61174360e31b81526001600160a01b0383166004820152602401610661565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610bc457604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906110e0903390889087908790600401612078565b6020604051808303816000875af192505050801561111b575060408051601f3d908101601f19168201909252611118918101906120b5565b60015b611184573d808015611149576040519150601f19603f3d011682016040523d82523d6000602084013e61114e565b606091505b50805160000361117c57604051633250574960e11b81526001600160a01b0385166004820152602401610661565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146111c057604051633250574960e11b81526001600160a01b0385166004820152602401610661565b5050505050565b60606111d282610eca565b50600082815260066020526040812080546111ec90611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461121890611ec2565b80156112655780601f1061123a57610100808354040283529160200191611265565b820191906000526020600020905b81548152906001019060200180831161124857829003601f168201915b50505050509050600061128360408051602081019091526000815290565b90508051600003611295575092915050565b8151156112c75780826040516020016112af9291906120d2565b60405160208183030381529060405292505050919050565b6112d08461167e565b949350505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f17325e760405180604001604052807f000000000000000000000000000000000000000000000000000000000000000081526020016040518060c001604052808d6001600160a01b03168152602001600067ffffffffffffffff1681526020016000151581526020016000801b81526020018c8c8c8c8c60405160200161139195949392919061212a565b604051602081830303815290604052815260200160008152508152506040518263ffffffff1660e01b81526004016113c99190612164565b6020604051808303816000875af11580156113e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140c91906121e7565b98975050505050505050565b60006001600160e01b031982166380ac58cd60e01b148061144957506001600160e01b03198216635b5e139f60e01b145b806104f557506301ffc9a760e01b6001600160e01b03198316146104f5565b808061147c57506001600160a01b03821615155b1561153e57600061148c84610eca565b90506001600160a01b038316158015906114b85750826001600160a01b0316816001600160a01b031614155b80156114cb57506114c98184610bd5565b155b156114f45760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610661565b811561153c5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b039081169083161561159b5761159b8184866116f3565b6001600160a01b038116156115d9576115b8600085600080611468565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611608576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6116718383611757565b61060e600084848461109e565b606061168982610eca565b5060006116a160408051602081019091526000815290565b905060008151116116c157604051806020016040528060008152506116ec565b806116cb846117bc565b6040516020016116dc9291906120d2565b6040516020818303038152906040525b9392505050565b6116fe83838361184f565b61060e576001600160a01b03831661172c57604051637e27328960e01b815260048101829052602401610661565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610661565b6001600160a01b03821661178157604051633250574960e11b815260006004820152602401610661565b600061178f8383600061156e565b90506001600160a01b0381161561060e576040516339e3563760e11b815260006004820152602401610661565b606060006117c9836118b2565b600101905060008167ffffffffffffffff8111156117e9576117e9611b82565b6040519080825280601f01601f191660200182016040528015611813576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461181d57509392505050565b60006001600160a01b038316158015906112d05750826001600160a01b0316846001600160a01b0316148061188957506118898484610bd5565b806112d05750506000908152600460205260409020546001600160a01b03908116911614919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106118f15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061191d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061193b57662386f26fc10000830492506010015b6305f5e1008310611953576305f5e100830492506008015b612710831061196757612710830492506004015b60648310611979576064830492506002015b600a83106104f55760010192915050565b8280548282559060005260206000209081019282156119c5579160200282015b828111156119c55782518255916020019190600101906119aa565b506119d19291506119d5565b5090565b5b808211156119d157600081556001016119d6565b6001600160e01b031981168114611a0057600080fd5b50565b600060208284031215611a1557600080fd5b81356116ec816119ea565b60005b83811015611a3b578181015183820152602001611a23565b50506000910152565b60008151808452611a5c816020860160208601611a20565b601f01601f19169290920160200192915050565b6020815260006116ec6020830184611a44565b600060208284031215611a9557600080fd5b5035919050565b80356001600160a01b0381168114611ab357600080fd5b919050565b60008060408385031215611acb57600080fd5b611ad483611a9c565b946020939093013593505050565b600060208284031215611af457600080fd5b6116ec82611a9c565b600080600060608486031215611b1257600080fd5b611b1b84611a9c565b9250611b2960208501611a9c565b9150604084013590509250925092565b60008083601f840112611b4b57600080fd5b50813567ffffffffffffffff811115611b6357600080fd5b602083019150836020828501011115611b7b57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611bb357611bb3611b82565b604051601f8501601f19908116603f01168101908282118183101715611bdb57611bdb611b82565b81604052809350858152868686011115611bf457600080fd5b858560208301376000602087830101525050509392505050565b600080600080600080600060a0888a031215611c2957600080fd5b611c3288611a9c565b9650602088013567ffffffffffffffff80821115611c4f57600080fd5b611c5b8b838c01611b39565b909850965060408a0135915080821115611c7457600080fd5b611c808b838c01611b39565b909650945060608a0135935060808a0135915080821115611ca057600080fd5b508801601f81018a13611cb257600080fd5b611cc18a823560208401611b98565b91505092959891949750929550565b608081526000611ce36080830187611a44565b8281036020840152611cf58187611a44565b604084019590955250506060015292915050565b60008060408385031215611d1c57600080fd5b611d2583611a9c565b915060208301358015158114611d3a57600080fd5b809150509250929050565b60008060008060808587031215611d5b57600080fd5b611d6485611a9c565b9350611d7260208601611a9c565b925060408501359150606085013567ffffffffffffffff811115611d9557600080fd5b8501601f81018713611da657600080fd5b611db587823560208401611b98565b91505092959194509250565b60008060408385031215611dd457600080fd5b611ddd83611a9c565b9150611deb60208401611a9c565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611e355783516001600160a01b031683529284019291840191600101611e10565b50909695505050505050565b600080600080600060608688031215611e5957600080fd5b611e6286611a9c565b9450602086013567ffffffffffffffff80821115611e7f57600080fd5b611e8b89838a01611b39565b90965094506040880135915080821115611ea457600080fd5b50611eb188828901611b39565b969995985093965092949392505050565b600181811c90821680611ed657607f821691505b602082108103611ef657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611f2457611f24611efc565b5060010190565b601f82111561060e57600081815260208120601f850160051c81016020861015611f525750805b601f850160051c820191505b81811015611f7157828155600101611f5e565b505050505050565b815167ffffffffffffffff811115611f9357611f93611b82565b611fa781611fa18454611ec2565b84611f2b565b602080601f831160018114611fdc5760008415611fc45750858301515b600019600386901b1c1916600185901b178555611f71565b600085815260208120601f198616915b8281101561200b57888601518255948401946001909101908401611fec565b50858210156120295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156104f5576104f5611efc565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120ab90830184611a44565b9695505050505050565b6000602082840312156120c757600080fd5b81516116ec816119ea565b600083516120e4818460208801611a20565b8351908301906120f8818360208801611a20565b01949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600061213e606083018789612101565b8281036020840152612151818688612101565b9150508260408301529695505050505050565b60208152815160208201526000602083015160408084015260018060a01b03815116606084015267ffffffffffffffff60208201511660808401526040810151151560a0840152606081015160c0840152608081015160c060e08501526121cf610120850182611a44565b905060a0820151610100850152809250505092915050565b6000602082840312156121f957600080fd5b505191905056fea2646970667358221220e6d54ab3140d293f057feee28a7b815ce25e17576724708c445e3e9b4af74fb464736f6c63430008150033",
    "sourceMap": "378:10999:53:-:0;;;3685:462;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3832:3;3837:9;1381:113:33;;;;;;;;;;;;;-1:-1:-1;;;1381:113:33;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:33;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:33;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;604:22:54;;-1:-1:-1;;;;;636:10:54;;;3863:9:53::2;3858:283;3882:14;:21;3878:1;:25;3858:283;;;3924:14;3941;3956:1;3941:17;;;;;;;;:::i;:::-;;;;;;;3924:34;;3994:1;-1:-1:-1::0;;;;;3976:20:53::2;:6;-1:-1:-1::0;;;;;3976:20:53::2;::::0;3972:67:::2;;4016:8;;;3972:67;4052:18;:31:::0;;::::2;::::0;;::::2;::::0;;;;::::2;::::0;;-1:-1:-1;;;;;4052:31:53;;::::2;-1:-1:-1::0;;;;;;4052:31:53;;::::2;::::0;::::2;::::0;;-1:-1:-1;4097:26:53;;;:18:::2;4052:31;4097:26:::0;;;;;:33;;-1:-1:-1;;4097:33:53::2;::::0;;::::2;::::0;;3858:283:::2;3905:3:::0;::::2;::::0;::::2;:::i;:::-;;;;3858:283;;;;3685:462:::0;;;378:10999;;14:137:56;-1:-1:-1;;;;;95:31:56;;85:42;;75:70;;141:1;138;131:12;75:70;14:137;:::o;156:127::-;217:10;212:3;208:20;205:1;198:31;248:4;245:1;238:15;272:4;269:1;262:15;288:144;367:13;;389:37;367:13;389:37;:::i;:::-;288:144;;;:::o;437:1337::-;563:6;571;579;632:2;620:9;611:7;607:23;603:32;600:52;;;648:1;645;638:12;600:52;680:9;674:16;699:37;730:5;699:37;:::i;:::-;779:2;806:18;;;800:25;869:2;854:18;;848:25;755:5;;-1:-1:-1;800:25:56;-1:-1:-1;779:2:56;-1:-1:-1;;;;;922:14:56;;;919:34;;;949:1;946;939:12;919:34;987:6;976:9;972:22;962:32;;1032:7;1025:4;1021:2;1017:13;1013:27;1003:55;;1054:1;1051;1044:12;1003:55;1083:2;1077:9;1105:2;1101;1098:10;1095:36;;;1111:18;;:::i;:::-;1157:2;1154:1;1150:10;1189:2;1183:9;1252:2;1248:7;1243:2;1239;1235:11;1231:25;1223:6;1219:38;1307:6;1295:10;1292:22;1287:2;1275:10;1272:18;1269:46;1266:72;;;1318:18;;:::i;:::-;1354:2;1347:22;1404:18;;;1438:15;;;;-1:-1:-1;1480:11:56;;;1476:20;;;1508:19;;;1505:39;;;1540:1;1537;1530:12;1505:39;1564:11;;;;1584:159;1600:6;1595:3;1592:15;1584:159;;;1666:34;1696:3;1666:34;:::i;:::-;1654:47;;1617:12;;;;1721;;;;1584:159;;;1762:6;1752:16;;;;;;;;437:1337;;;;;:::o;1779:380::-;1858:1;1854:12;;;;1901;;;1922:61;;1976:4;1968:6;1964:17;1954:27;;1922:61;2029:2;2021:6;2018:14;1998:18;1995:38;1992:161;;2075:10;2070:3;2066:20;2063:1;2056:31;2110:4;2107:1;2100:15;2138:4;2135:1;2128:15;1992:161;;1779:380;;;:::o;2290:545::-;2392:2;2387:3;2384:11;2381:448;;;2428:1;2453:5;2449:2;2442:17;2498:4;2494:2;2484:19;2568:2;2556:10;2552:19;2549:1;2545:27;2539:4;2535:38;2604:4;2592:10;2589:20;2586:47;;;-1:-1:-1;2627:4:56;2586:47;2682:2;2677:3;2673:12;2670:1;2666:20;2660:4;2656:31;2646:41;;2737:82;2755:2;2748:5;2745:13;2737:82;;;2800:17;;;2781:1;2770:13;2737:82;;;2741:3;;;2381:448;2290:545;;;:::o;3011:1352::-;3131:10;;-1:-1:-1;;;;;3153:30:56;;3150:56;;;3186:18;;:::i;:::-;3215:97;3305:6;3265:38;3297:4;3291:11;3265:38;:::i;:::-;3259:4;3215:97;:::i;:::-;3367:4;;3431:2;3420:14;;3448:1;3443:663;;;;4150:1;4167:6;4164:89;;;-1:-1:-1;4219:19:56;;;4213:26;4164:89;-1:-1:-1;;2968:1:56;2964:11;;;2960:24;2956:29;2946:40;2992:1;2988:11;;;2943:57;4266:81;;3413:944;;3443:663;2237:1;2230:14;;;2274:4;2261:18;;-1:-1:-1;;3479:20:56;;;3597:236;3611:7;3608:1;3605:14;3597:236;;;3700:19;;;3694:26;3679:42;;3792:27;;;;3760:1;3748:14;;;;3627:19;;3597:236;;;3601:3;3861:6;3852:7;3849:19;3846:201;;;3922:19;;;3916:26;-1:-1:-1;;4005:1:56;4001:14;;;4017:3;3997:24;3993:37;3989:42;3974:58;3959:74;;3846:201;-1:-1:-1;;;;;4093:1:56;4077:14;;;4073:22;4060:36;;-1:-1:-1;3011:1352:56:o;4368:127::-;4429:10;4424:3;4420:20;4417:1;4410:31;4460:4;4457:1;4450:15;4484:4;4481:1;4474:15;4500:232;4539:3;4560:17;;;4557:140;;4619:10;4614:3;4610:20;4607:1;4600:31;4654:4;4651:1;4644:15;4682:4;4679:1;4672:15;4557:140;-1:-1:-1;4724:1:56;4713:13;;4500:232::o;:::-;378:10999:53;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101395760003560e01c806393138b1e116100ab578063c87b56dd1161006f578063c87b56dd14610414578063e985e9c514610434578063efa309ff14610454578063f0b37c0414610476578063f3de050614610496578063ffeacfda146104ca57600080fd5b806393138b1e1461036657806395d89b411461039f578063a22cb465146103b4578063b6a5d7de146103d4578063b88d4fde146103f457600080fd5b806323b872dd116100fd57806323b872dd146102a157806342842e0e146102c15780636352211e146102e157806370a082311461030157806378f7aef0146103215780638eb20b0b1461034157600080fd5b806301ffc9a7146101ae57806306fdde03146101e3578063081812fc14610205578063095ea7b31461023d57806310a943cf1461025d57600080fd5b366101a957604051600090339034908381818185875af1925050503d8060008114610180576040519150601f19603f3d011682016040523d82523d6000602084013e610185565b606091505b50509050806101a7576040516312171d8360e31b815260040160405180910390fd5b005b600080fd5b3480156101ba57600080fd5b506101ce6101c9366004611a03565b6104ea565b60405190151581526020015b60405180910390f35b3480156101ef57600080fd5b506101f86104fb565b6040516101da9190611a70565b34801561021157600080fd5b50610225610220366004611a83565b61058d565b6040516001600160a01b0390911681526020016101da565b34801561024957600080fd5b506101a7610258366004611ab8565b6105b6565b34801561026957600080fd5b50610293610278366004611ae2565b6001600160a01b03166000908152600b602052604090205490565b6040519081526020016101da565b3480156102ad57600080fd5b506101a76102bc366004611afd565b6105c5565b3480156102cd57600080fd5b506101a76102dc366004611afd565b610613565b3480156102ed57600080fd5b506102256102fc366004611a83565b61062e565b34801561030d57600080fd5b5061029361031c366004611ae2565b610639565b34801561032d57600080fd5b506101a761033c366004611c0e565b610686565b34801561034d57600080fd5b50610356610882565b6040516101da9493929190611cd0565b34801561037257600080fd5b506101ce610381366004611ae2565b6001600160a01b03166000908152600a602052604090205460ff1690565b3480156103ab57600080fd5b506101f8610a84565b3480156103c057600080fd5b506101a76103cf366004611d09565b610a93565b3480156103e057600080fd5b506101a76103ef366004611ae2565b610a9e565b34801561040057600080fd5b506101a761040f366004611d45565b610bad565b34801561042057600080fd5b506101f861042f366004611a83565b610bca565b34801561044057600080fd5b506101ce61044f366004611dc1565b610bd5565b34801561046057600080fd5b50610469610c03565b6040516101da9190611df4565b34801561048257600080fd5b506101a7610491366004611ae2565b610c64565b3480156104a257600080fd5b506102937f000000000000000000000000000000000000000000000000000000000000000081565b3480156104d657600080fd5b506102936104e5366004611e41565b610dee565b60006104f582610ea5565b92915050565b60606000805461050a90611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461053690611ec2565b80156105835780601f1061055857610100808354040283529160200191610583565b820191906000526020600020905b81548152906001019060200180831161056657829003601f168201915b5050505050905090565b600061059882610eca565b506000828152600460205260409020546001600160a01b03166104f5565b6105c1828233610f03565b5050565b6001600160a01b038316158015906105e557506001600160a01b03821615155b1561060357604051630b04e6e360e41b815260040160405180910390fd5b61060e838383610f10565b505050565b61060e83838360405180602001604052806000815250610bad565b60006104f582610eca565b60006001600160a01b03821661066a576040516322718ad960e21b8152600060048201526024015b60405180910390fd5b506001600160a01b031660009081526003602052604090205490565b336000818152600a602052604090205460ff166106c15760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b0388166000908152600b6020526040902054156106f8576040516370f9e29b60e11b815260040160405180910390fd5b600060076000815461070990611f12565b91829055506040805160c06020601f8c01819004028201810190925260a081018a81529293509182918b908b9081908501838280828437600092019190915250505090825250604080516020601f8a0181900481028201810190925288815291810191908990899081908401838280828437600092018290525093855250505060208083018890524260408085019190915280518381528083018252606090940193909352848252600c905220815181906107c49082611f79565b50602082015160018201906107d99082611f79565b5060408201516002820155606082015160038201556080820151805161080991600484019160209091019061198a565b5050506001600160a01b0389166000908152600b602052604090208190556108318982610f95565b61083b8184610faf565b6040516001600160a01b038a1681527f325b88bc4ac3fed38ad6d226bfb680c4dae1e2be7e3ca7865aff5ebad93ad6cf9060200160405180910390a1505050505050505050565b336000908152600b6020526040812054606091829181908082036108b9576040516383bf443960e01b815260040160405180910390fd5b6000818152600c6020526040808220815160a081019092528054829082906108e090611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461090c90611ec2565b80156109595780601f1061092e57610100808354040283529160200191610959565b820191906000526020600020905b81548152906001019060200180831161093c57829003601f168201915b5050505050815260200160018201805461097290611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461099e90611ec2565b80156109eb5780601f106109c0576101008083540402835291602001916109eb565b820191906000526020600020905b8154815290600101906020018083116109ce57829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201805480602002602001604051908101604052809291908181526020018280548015610a5757602002820191906000526020600020905b815481526020019060010190808311610a43575b505050919092525050815160208301516040840151606090940151919a9099509297509550909350505050565b60606001805461050a90611ec2565b6105c1338383610fff565b336000818152600a602052604090205460ff16610ad95760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b038216610b005760405163a9d8d06360e01b815260040160405180910390fd5b6001600160a01b0382166000908152600a602052604090205460ff1615610b4557604051637103fd5f60e11b81526001600160a01b0383166004820152602401610661565b506008805460018181019092557ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30180546001600160a01b039093166001600160a01b0319909316831790556000918252600a6020526040909120805460ff19169091179055565b610bb88484846105c5565b610bc48484848461109e565b50505050565b60606104f5826111c7565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6060600880548060200260200160405190810160405280929190818152602001828054801561058357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c3d575050505050905090565b336000818152600a602052604090205460ff16610c9f5760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b0382166000908152600a602052604090205460ff16610ce35760405163032cc75b60e21b81526001600160a01b0383166004820152602401610661565b6001600160a01b03821660009081526009602052604081205460088054919291610d0f90600190612039565b81548110610d1f57610d1f61204c565b600091825260209091200154600880546001600160a01b039092169250829184908110610d4e57610d4e61204c565b600091825260208083209190910180546001600160a01b0319166001600160a01b0394851617905591831681526009909152604090208290556008805480610d9857610d98612062565b60008281526020808220830160001990810180546001600160a01b03191690559092019092556001600160a01b03959095168152600a85526040808220805460ff19169055600990955293842093909355505050565b336000818152600a602052604081205490919060ff16610e2c5760405163472511eb60e11b81526001600160a01b0382166004820152602401610661565b6001600160a01b0387166000908152600b602052604081205490819003610e66576040516383bf443960e01b815260040160405180910390fd5b610e743388888888426112d8565b6000918252600c60209081526040832060040180546001810182559084529220909101819055979650505050505050565b60006001600160e01b03198216632483248360e11b14806104f557506104f582611418565b6000818152600260205260408120546001600160a01b0316806104f557604051637e27328960e01b815260048101849052602401610661565b61060e8383836001611468565b6001600160a01b038216610f3a57604051633250574960e11b815260006004820152602401610661565b6000610f4783833361156e565b9050836001600160a01b0316816001600160a01b031614610bc4576040516364283d7b60e01b81526001600160a01b0380861660048301526024820184905282166044820152606401610661565b6105c1828260405180602001604052806000815250611667565b6000828152600660205260409020610fc78282611f79565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b03821661103157604051630b61174360e31b81526001600160a01b0383166004820152602401610661565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0383163b15610bc457604051630a85bd0160e11b81526001600160a01b0384169063150b7a02906110e0903390889087908790600401612078565b6020604051808303816000875af192505050801561111b575060408051601f3d908101601f19168201909252611118918101906120b5565b60015b611184573d808015611149576040519150601f19603f3d011682016040523d82523d6000602084013e61114e565b606091505b50805160000361117c57604051633250574960e11b81526001600160a01b0385166004820152602401610661565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b146111c057604051633250574960e11b81526001600160a01b0385166004820152602401610661565b5050505050565b60606111d282610eca565b50600082815260066020526040812080546111ec90611ec2565b80601f016020809104026020016040519081016040528092919081815260200182805461121890611ec2565b80156112655780601f1061123a57610100808354040283529160200191611265565b820191906000526020600020905b81548152906001019060200180831161124857829003601f168201915b50505050509050600061128360408051602081019091526000815290565b90508051600003611295575092915050565b8151156112c75780826040516020016112af9291906120d2565b60405160208183030381529060405292505050919050565b6112d08461167e565b949350505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f17325e760405180604001604052807f000000000000000000000000000000000000000000000000000000000000000081526020016040518060c001604052808d6001600160a01b03168152602001600067ffffffffffffffff1681526020016000151581526020016000801b81526020018c8c8c8c8c60405160200161139195949392919061212a565b604051602081830303815290604052815260200160008152508152506040518263ffffffff1660e01b81526004016113c99190612164565b6020604051808303816000875af11580156113e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140c91906121e7565b98975050505050505050565b60006001600160e01b031982166380ac58cd60e01b148061144957506001600160e01b03198216635b5e139f60e01b145b806104f557506301ffc9a760e01b6001600160e01b03198316146104f5565b808061147c57506001600160a01b03821615155b1561153e57600061148c84610eca565b90506001600160a01b038316158015906114b85750826001600160a01b0316816001600160a01b031614155b80156114cb57506114c98184610bd5565b155b156114f45760405163a9fbf51f60e01b81526001600160a01b0384166004820152602401610661565b811561153c5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b039081169083161561159b5761159b8184866116f3565b6001600160a01b038116156115d9576115b8600085600080611468565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b03851615611608576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b6116718383611757565b61060e600084848461109e565b606061168982610eca565b5060006116a160408051602081019091526000815290565b905060008151116116c157604051806020016040528060008152506116ec565b806116cb846117bc565b6040516020016116dc9291906120d2565b6040516020818303038152906040525b9392505050565b6116fe83838361184f565b61060e576001600160a01b03831661172c57604051637e27328960e01b815260048101829052602401610661565b60405163177e802f60e01b81526001600160a01b038316600482015260248101829052604401610661565b6001600160a01b03821661178157604051633250574960e11b815260006004820152602401610661565b600061178f8383600061156e565b90506001600160a01b0381161561060e576040516339e3563760e11b815260006004820152602401610661565b606060006117c9836118b2565b600101905060008167ffffffffffffffff8111156117e9576117e9611b82565b6040519080825280601f01601f191660200182016040528015611813576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461181d57509392505050565b60006001600160a01b038316158015906112d05750826001600160a01b0316846001600160a01b0316148061188957506118898484610bd5565b806112d05750506000908152600460205260409020546001600160a01b03908116911614919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106118f15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061191d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061193b57662386f26fc10000830492506010015b6305f5e1008310611953576305f5e100830492506008015b612710831061196757612710830492506004015b60648310611979576064830492506002015b600a83106104f55760010192915050565b8280548282559060005260206000209081019282156119c5579160200282015b828111156119c55782518255916020019190600101906119aa565b506119d19291506119d5565b5090565b5b808211156119d157600081556001016119d6565b6001600160e01b031981168114611a0057600080fd5b50565b600060208284031215611a1557600080fd5b81356116ec816119ea565b60005b83811015611a3b578181015183820152602001611a23565b50506000910152565b60008151808452611a5c816020860160208601611a20565b601f01601f19169290920160200192915050565b6020815260006116ec6020830184611a44565b600060208284031215611a9557600080fd5b5035919050565b80356001600160a01b0381168114611ab357600080fd5b919050565b60008060408385031215611acb57600080fd5b611ad483611a9c565b946020939093013593505050565b600060208284031215611af457600080fd5b6116ec82611a9c565b600080600060608486031215611b1257600080fd5b611b1b84611a9c565b9250611b2960208501611a9c565b9150604084013590509250925092565b60008083601f840112611b4b57600080fd5b50813567ffffffffffffffff811115611b6357600080fd5b602083019150836020828501011115611b7b57600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611bb357611bb3611b82565b604051601f8501601f19908116603f01168101908282118183101715611bdb57611bdb611b82565b81604052809350858152868686011115611bf457600080fd5b858560208301376000602087830101525050509392505050565b600080600080600080600060a0888a031215611c2957600080fd5b611c3288611a9c565b9650602088013567ffffffffffffffff80821115611c4f57600080fd5b611c5b8b838c01611b39565b909850965060408a0135915080821115611c7457600080fd5b611c808b838c01611b39565b909650945060608a0135935060808a0135915080821115611ca057600080fd5b508801601f81018a13611cb257600080fd5b611cc18a823560208401611b98565b91505092959891949750929550565b608081526000611ce36080830187611a44565b8281036020840152611cf58187611a44565b604084019590955250506060015292915050565b60008060408385031215611d1c57600080fd5b611d2583611a9c565b915060208301358015158114611d3a57600080fd5b809150509250929050565b60008060008060808587031215611d5b57600080fd5b611d6485611a9c565b9350611d7260208601611a9c565b925060408501359150606085013567ffffffffffffffff811115611d9557600080fd5b8501601f81018713611da657600080fd5b611db587823560208401611b98565b91505092959194509250565b60008060408385031215611dd457600080fd5b611ddd83611a9c565b9150611deb60208401611a9c565b90509250929050565b6020808252825182820181905260009190848201906040850190845b81811015611e355783516001600160a01b031683529284019291840191600101611e10565b50909695505050505050565b600080600080600060608688031215611e5957600080fd5b611e6286611a9c565b9450602086013567ffffffffffffffff80821115611e7f57600080fd5b611e8b89838a01611b39565b90965094506040880135915080821115611ea457600080fd5b50611eb188828901611b39565b969995985093965092949392505050565b600181811c90821680611ed657607f821691505b602082108103611ef657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600060018201611f2457611f24611efc565b5060010190565b601f82111561060e57600081815260208120601f850160051c81016020861015611f525750805b601f850160051c820191505b81811015611f7157828155600101611f5e565b505050505050565b815167ffffffffffffffff811115611f9357611f93611b82565b611fa781611fa18454611ec2565b84611f2b565b602080601f831160018114611fdc5760008415611fc45750858301515b600019600386901b1c1916600185901b178555611f71565b600085815260208120601f198616915b8281101561200b57888601518255948401946001909101908401611fec565b50858210156120295787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b818103818111156104f5576104f5611efc565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fd5b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906120ab90830184611a44565b9695505050505050565b6000602082840312156120c757600080fd5b81516116ec816119ea565b600083516120e4818460208801611a20565b8351908301906120f8818360208801611a20565b01949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60608152600061213e606083018789612101565b8281036020840152612151818688612101565b9150508260408301529695505050505050565b60208152815160208201526000602083015160408084015260018060a01b03815116606084015267ffffffffffffffff60208201511660808401526040810151151560a0840152606081015160c0840152608081015160c060e08501526121cf610120850182611a44565b905060a0820151610100850152809250505092915050565b6000602082840312156121f957600080fd5b505191905056fea2646970667358221220e6d54ab3140d293f057feee28a7b815ce25e17576724708c445e3e9b4af74fb464736f6c63430008150033",
    "sourceMap": "378:10999:53:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4326:37;;4308:12;;4326:10;;4349:9;;4308:12;4326:37;4308:12;4326:37;4349:9;4326:10;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4307:56;;;4378:7;4373:62;;4408:16;;-1:-1:-1;;;4408:16:53;;;;;;;;;;;4373:62;4297:144;378:10999;;;;11192:183;;;;;;;;;;-1:-1:-1;11192:183:53;;;;;:::i;:::-;;:::i;:::-;;;775:14:56;;768:22;750:41;;738:2;723:18;11192:183:53;;;;;;;;2365:89:33;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;;;;;-1:-1:-1;3497:154:33;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1907:32:56;;;1889:51;;1877:2;1862:18;3497:154:33;1743:203:56;3323:113:33;;;;;;;;;;-1:-1:-1;3323:113:33;;;;;:::i;:::-;;:::i;7429:115:53:-;;;;;;;;;;-1:-1:-1;7429:115:53;;;;;:::i;:::-;-1:-1:-1;;;;;7515:22:53;7489:7;7515:22;;;:16;:22;;;;;;;7429:115;;;;2725:25:56;;;2713:2;2698:18;7429:115:53;2579:177:56;10230:295:53;;;;;;;;;;-1:-1:-1;10230:295:53;;;;;:::i;:::-;;:::i;4787:132:33:-;;;;;;;;;;-1:-1:-1;4787:132:33;;;;;:::i;:::-;;:::i;2185:118::-;;;;;;;;;;-1:-1:-1;2185:118:33;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;;;;;-1:-1:-1;1920:208:33;;;;;:::i;:::-;;:::i;8017:808:53:-;;;;;;;;;;-1:-1:-1;8017:808:53;;;;;:::i;:::-;;:::i;6676:592::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;6168:122::-;;;;;;;;;;-1:-1:-1;6168:122:53;;;;;:::i;:::-;-1:-1:-1;;;;;6257:26:53;6234:4;6257:26;;;:18;:26;;;;;;;;;6168:122;2518:93:33;;;;;;;;;;;;;:::i;3718:144::-;;;;;;;;;;-1:-1:-1;3718:144:33;;;;;:::i;:::-;;:::i;4588:356:53:-;;;;;;;;;;-1:-1:-1;4588:356:53;;;;;:::i;:::-;;:::i;4985:208:33:-;;;;;;;;;;-1:-1:-1;4985:208:33;;;;;:::i;:::-;;:::i;10747:167:53:-;;;;;;;;;;-1:-1:-1;10747:167:53;;;;;:::i;:::-;;:::i;3928:153:33:-;;;;;;;;;;-1:-1:-1;3928:153:33;;;;;:::i;:::-;;:::i;5788:146:53:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5097:537::-;;;;;;;;;;-1:-1:-1;5097:537:53;;;;;:::i;:::-;;:::i;478:34:54:-;;;;;;;;;;;;;;;9171:544:53;;;;;;;;;;-1:-1:-1;9171:544:53;;;;;:::i;:::-;;:::i;11192:183::-;11309:4;11332:36;11356:11;11332:23;:36::i;:::-;11325:43;11192:183;-1:-1:-1;;11192:183:53:o;2365:89:33:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:33;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:33;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:39;3394:8:33;:35::i;:::-;3323:113;;:::o;10230:295:53:-;-1:-1:-1;;;;;10372:18:53;;;;;;:38;;-1:-1:-1;;;;;;10394:16:53;;;;10372:38;10368:104;;;10433:28;;-1:-1:-1;;;10433:28:53;;;;;;;;;;;10368:104;10481:37;10500:4;10506:2;10510:7;10481:18;:37::i;:::-;10230:295;;;:::o;4787:132:33:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:33;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:33;;2075:1;2048:30;;;1889:51:56;1862:18;;2048:30:33;;;;;;;;2002:87;-1:-1:-1;;;;;;2105:16:33;;;;;:9;:16;;;;;;;1920:208::o;8017:808:53:-;8228:10;3582:26;;;;:18;:26;;;;;;;;3577:85;;3631:20;;-1:-1:-1;;;3631:20:53;;-1:-1:-1;;;;;1907:32:56;;3631:20:53;;;1889:51:56;1862:18;;3631:20:53;1743:203:56;3577:85:53;-1:-1:-1;;;;;8254:32:53;::::1;;::::0;;;:16:::1;:32;::::0;;;;;:37;8250:98:::1;;8314:23;;-1:-1:-1::0;;;8314:23:53::1;;;;;;;;;;;8250:98;8358:15;8378:12;;8376:14;;;;;:::i;:::-;::::0;;;;-1:-1:-1;8428:212:53::1;::::0;;;::::1;;::::0;::::1;::::0;;::::1;;::::0;;;;;;;::::1;::::0;::::1;::::0;;;8376:14;;-1:-1:-1;8428:212:53;;;8457:5;;;;;;8428:212;;8457:5;;;;8428:212;::::1;;::::0;::::1;::::0;;;;-1:-1:-1;;;8428:212:53;;;-1:-1:-1;8428:212:53::1;::::0;;::::1;;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;;;;::::1;::::0;;8490:13;;;;;;8428:212;::::1;8490:13:::0;;;;8428:212;::::1;;::::0;::::1;::::0;;;-1:-1:-1;8428:212:53;;;-1:-1:-1;;;8428:212:53::1;::::0;;::::1;::::0;;;8567:15:::1;8428:212:::0;;;;;;;;8613:16;;;;;;;::::1;::::0;;8428:212;;;;;;;;8400:25;;;:16:::1;:25:::0;;;:240;;:25;;:240:::1;::::0;:25;:240:::1;:::i;:::-;-1:-1:-1::0;8400:240:53::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;8400:240:53::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;;;8650:32:53;::::1;;::::0;;;:16:::1;:32;::::0;;;;:42;;;8702:34:::1;8667:14:::0;8685:7;8702:9:::1;:34::i;:::-;8746:26;8759:7;8768:3;8746:12;:26::i;:::-;8787:31;::::0;-1:-1:-1;;;;;1907:32:56;;1889:51;;8787:31:53::1;::::0;1877:2:56;1862:18;8787:31:53::1;;;;;;;8240:585;8017:808:::0;;;;;;;;:::o;6676:592::-;6944:10;6831:19;6927:28;;;:16;:28;;;;;;6759:18;;;;6831:19;;6969:15;;;6965:72;;7007:19;;-1:-1:-1;;;7007:19:53;;;;;;;;;;;6965:72;7046:24;7073:28;;;:16;:28;;;;;;7046:55;;;;;;;;;;;;7073:28;;7046:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;7046:55:53;;;;-1:-1:-1;;7118:13:53;;7156:21;;;;7201:20;;;;7243:18;;;;;7118:13;;7156:21;;-1:-1:-1;7201:20:53;;-1:-1:-1;7243:18:53;-1:-1:-1;6676:592:53;;-1:-1:-1;;;;6676:592:53:o;2518:93:33:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:39;3836:8:33;3846;3803:18;:52::i;4588:356:53:-;4647:10;3582:26;;;;:18;:26;;;;;;;;3577:85;;3631:20;;-1:-1:-1;;;3631:20:53;;-1:-1:-1;;;;;1907:32:56;;3631:20:53;;;1889:51:56;1862:18;;3631:20:53;1743:203:56;3577:85:53;-1:-1:-1;;;;;4673:20:53;::::1;4669:86;;4716:28;;-1:-1:-1::0;;;4716:28:53::1;;;;;;;;;;;4669:86;-1:-1:-1::0;;;;;4768:26:53;::::1;;::::0;;;:18:::1;:26;::::0;;;;;::::1;;4764:89;;;4817:25;::::0;-1:-1:-1;;;4817:25:53;;-1:-1:-1;;;;;1907:32:56;;4817:25:53::1;::::0;::::1;1889:51:56::0;1862:18;;4817:25:53::1;1743:203:56::0;4764:89:53::1;-1:-1:-1::0;4863:18:53::1;:31:::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;;;;4863:31:53;;::::1;-1:-1:-1::0;;;;;;4863:31:53;;::::1;::::0;::::1;::::0;;-1:-1:-1;4904:26:53;;;:18:::1;4863:31;4904:26:::0;;;;;:33;;-1:-1:-1;;4904:33:53::1;::::0;;::::1;::::0;;4588:356::o;4985:208:33:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;10747:167:53:-;10852:13;10884:23;10899:7;10884:14;:23::i;3928:153:33:-;-1:-1:-1;;;;;4039:25:33;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;5788:146:53:-;5870:16;5909:18;5902:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5902:25:53;;;;;;;;;;;;;;;;;;;;;;5788:146;:::o;5097:537::-;5158:10;3582:26;;;;:18;:26;;;;;;;;3577:85;;3631:20;;-1:-1:-1;;;3631:20:53;;-1:-1:-1;;;;;1907:32:56;;3631:20:53;;;1889:51:56;1862:18;;3631:20:53;1743:203:56;3577:85:53;-1:-1:-1;;;;;5185:26:53;::::1;;::::0;;;:18:::1;:26;::::0;;;;;::::1;;5180:92;;5234:27;::::0;-1:-1:-1;;;5234:27:53;;-1:-1:-1;;;;;1907:32:56;;5234:27:53::1;::::0;::::1;1889:51:56::0;1862:18;;5234:27:53::1;1743:203:56::0;5180:92:53::1;-1:-1:-1::0;;;;;5305:20:53;::::1;5281:21;5305:20:::0;;;:12:::1;:20;::::0;;;;;5356:18:::1;5375:25:::0;;5305:20;;5281:21;5375:29:::1;::::0;5403:1:::1;::::0;5375:29:::1;:::i;:::-;5356:49;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;5416:18:::1;:33:::0;;-1:-1:-1;;;;;5356:49:53;;::::1;::::0;-1:-1:-1;5356:49:53;;5435:13;;5416:33;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;;::::1;:46:::0;;-1:-1:-1;;;;;;5416:46:53::1;-1:-1:-1::0;;;;;5416:46:53;;::::1;;::::0;;5472:24;;::::1;::::0;;:12:::1;:24:::0;;;;;;:40;;;5523:18:::1;:24:::0;;;::::1;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;;-1:-1:-1;;5523:24:53;;;;;-1:-1:-1;;;;;;5523:24:53::1;::::0;;;;;;;;-1:-1:-1;;;;;5564:26:53;;;::::1;::::0;;:18:::1;:26:::0;;;;;;5557:33;;-1:-1:-1;;5557:33:53::1;::::0;;5607:12:::1;:20:::0;;;;;;5600:27;;;;-1:-1:-1;;;5097:537:53:o;9171:544::-;9309:10;9330:22;3582:26;;;:18;:26;;;;;;9330:22;;9309:10;3582:26;;3577:85;;3631:20;;-1:-1:-1;;;3631:20:53;;-1:-1:-1;;;;;1907:32:56;;3631:20:53;;;1889:51:56;1862:18;;3631:20:53;1743:203:56;3577:85:53;-1:-1:-1;;;;;9385:27:53;::::1;9364:18;9385:27:::0;;;:16:::1;:27;::::0;;;;;;9426:15;;;9422:72:::1;;9464:19;;-1:-1:-1::0;;;9464:19:53::1;;;;;;;;;;;9422:72;9520:113;9545:10;9569:4;;9587:7;;9608:15;9520:11;:113::i;:::-;9643:28;::::0;;;:16:::1;:28;::::0;;;;;;:44:::1;;:65:::0;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;;;9503:130;9171:544;-1:-1:-1;;;;;;;9171:544:53:o;937:207:36:-;1039:4;-1:-1:-1;;;;;;1062:35:36;;-1:-1:-1;;;1062:35:36;;:75;;;1101:36;1125:11;1101:23;:36::i;16138:241:33:-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:33;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:33;;;;;2725:25:56;;;2698:18;;16309:31:33;2579:177:56;14418:120:33;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;4143:578::-;-1:-1:-1;;;;;4237:16:33;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:33;;4306:1;4276:33;;;1889:51:56;1862:18;;4276:33:33;1743:203:56;4233:87:33;4538:21;4562:34;4570:2;4574:7;735:10:39;4562:7:33;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:33;:13;-1:-1:-1;;;;;4610:21:33;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:33;;-1:-1:-1;;;;;12397:15:56;;;4654:50:33;;;12379:34:56;12429:18;;;12422:34;;;12492:15;;12472:18;;;12465:43;12314:18;;4654:50:33;12139:375:56;10633:100:33;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;1922:167:36:-;2013:19;;;;:10;:19;;;;;:31;2035:9;2013:19;:31;:::i;:::-;-1:-1:-1;2059:23:36;;2725:25:56;;;2059:23:36;;2713:2:56;2698:18;2059:23:36;;;;;;;1922:167;;:::o;15591:312:33:-;-1:-1:-1;;;;;15698:22:33;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:33;;-1:-1:-1;;;;;1907:32:56;;15743:31:33;;;1889:51:56;1862:18;;15743:31:33;1743:203:56;15694:91:33;-1:-1:-1;;;;;15794:25:33;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:33;;;;;;;;;;15855:41;;750::56;;;15855::33;;723:18:56;15855:41:33;;;;;;;15591:312;;;:::o;16918:782::-;-1:-1:-1;;;;;17034:14:33;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:33;;-1:-1:-1;;;;;17072:36:33;;;;;:71;;735:10:39;;17123:4:33;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:33;;;;;;;;-1:-1:-1;;17072:71:33;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:33;;-1:-1:-1;;;;;1907:32:56;;17430:25:33;;;1889:51:56;1862:18;;17430:25:33;1743:203:56;17377:293:33;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:33;;-1:-1:-1;;;17190:51:33;17186:130;;17272:25;;-1:-1:-1;;;17272:25:33;;-1:-1:-1;;;;;1907:32:56;;17272:25:33;;;1889:51:56;1862:18;;17272:25:33;1743:203:56;17186:130:33;17144:186;16918:782;;;;:::o;1210:593:36:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:36;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3250:9:33;;;;;;;;;-1:-1:-1;3250:9:33;;;3174:92;1417:10:36;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:36;1210:593;-1:-1:-1;;1210:593:36:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;1210:593;-1:-1:-1;;;;1210:593:36:o;1079:685:54:-;1242:7;1261:22;1286:4;-1:-1:-1;;;;;1286:11:54;;1311:405;;;;;;;;1356:9;1311:405;;;;1389:312;;;;;;;;1445:10;-1:-1:-1;;;;;1389:312:54;;;;;240:1:0;1389:312:54;;;;;;1544:5;1389:312;;;;;;138:1:0;1579:9:54;;1389:312;;;;1627:4;;1633:7;;1642:9;1616:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1389:312;;;;1681:1;1389:312;;;1311:405;;;1286:440;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1261:465;1079:685;-1:-1:-1;;;;;;;;1079:685:54:o;1561:300:33:-;1663:4;-1:-1:-1;;;;;;1698:40:33;;-1:-1:-1;;;1698:40:33;;:104;;-1:-1:-1;;;;;;;1754:48:33;;-1:-1:-1;;;1754:48:33;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:47;;;1818:36:33;762:146:47;14720:662:33;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:33;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:33;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:33;:5;-1:-1:-1;;;;;15115:13:33;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:33;;-1:-1:-1;;;;;1907:32:56;;15189:27:33;;;1889:51:56;1862:18;;15189:27:33;1743:203:56;15089:142:33;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:33;15292:5;-1:-1:-1;;;;;15283:28:33;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:33;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:33;-1:-1:-1;;;;;15346:29:33;;;;;;;;;;14720:662::o;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:33;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:33;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:33;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:33;;;9157:256;-1:-1:-1;;;;;9427:16:33;;;9423:107;;-1:-1:-1;;;;;9487:13:33;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:33;-1:-1:-1;;;;;9540:21:33;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:33:o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:33;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:33:o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:33;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:33;;;;;2725:25:56;;;2698:18;;7298:31:33;2579:177:56;7248:186:33;7375:44;;-1:-1:-1;;;7375:44:33;;-1:-1:-1;;;;;15886:32:56;;7375:44:33;;;15868:51:56;15935:18;;;15928:34;;;15841:18;;7375:44:33;15694:274:56;9955:327:33;-1:-1:-1;;;;;10022:16:33;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:33;;10091:1;10061:33;;;1889:51:56;1862:18;;10061:33:33;1743:203:56;10018:87:33;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:33;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:33;;10262:1;10234:31;;;1889:51:56;1862:18;;10234:31:33;1743:203:56;637:698:42;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:42;-1:-1:-1;794:41:42;-1:-1:-1;955:28:42;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:42;-1:-1:-1;;;1175:2:42;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:42;1010:282;1256:21;-1:-1:-1;1312:6:42;637:698;-1:-1:-1;;;637:698:42:o;6376:272:33:-;6479:4;-1:-1:-1;;;;;6514:21:33;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:33;:5;-1:-1:-1;;;;;6552:16:33;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:33;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:33;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:33:o;12214:916:49:-;12267:7;;-1:-1:-1;;;12342:17:49;;12338:103;;-1:-1:-1;;;12379:17:49;;;-1:-1:-1;12424:2:49;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:49;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:49;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:49;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:49;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:49;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:49:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;224:131:56;-1:-1:-1;;;;;;298:32:56;;288:43;;278:71;;345:1;342;335:12;278:71;224:131;:::o;360:245::-;418:6;471:2;459:9;450:7;446:23;442:32;439:52;;;487:1;484;477:12;439:52;526:9;513:23;545:30;569:5;545:30;:::i;802:250::-;887:1;897:113;911:6;908:1;905:13;897:113;;;987:11;;;981:18;968:11;;;961:39;933:2;926:10;897:113;;;-1:-1:-1;;1044:1:56;1026:16;;1019:27;802:250::o;1057:271::-;1099:3;1137:5;1131:12;1164:6;1159:3;1152:19;1180:76;1249:6;1242:4;1237:3;1233:14;1226:4;1219:5;1215:16;1180:76;:::i;:::-;1310:2;1289:15;-1:-1:-1;;1285:29:56;1276:39;;;;1317:4;1272:50;;1057:271;-1:-1:-1;;1057:271:56:o;1333:220::-;1482:2;1471:9;1464:21;1445:4;1502:45;1543:2;1532:9;1528:18;1520:6;1502:45;:::i;1558:180::-;1617:6;1670:2;1658:9;1649:7;1645:23;1641:32;1638:52;;;1686:1;1683;1676:12;1638:52;-1:-1:-1;1709:23:56;;1558:180;-1:-1:-1;1558:180:56:o;1951:173::-;2019:20;;-1:-1:-1;;;;;2068:31:56;;2058:42;;2048:70;;2114:1;2111;2104:12;2048:70;1951:173;;;:::o;2129:254::-;2197:6;2205;2258:2;2246:9;2237:7;2233:23;2229:32;2226:52;;;2274:1;2271;2264:12;2226:52;2297:29;2316:9;2297:29;:::i;:::-;2287:39;2373:2;2358:18;;;;2345:32;;-1:-1:-1;;;2129:254:56:o;2388:186::-;2447:6;2500:2;2488:9;2479:7;2475:23;2471:32;2468:52;;;2516:1;2513;2506:12;2468:52;2539:29;2558:9;2539:29;:::i;2761:328::-;2838:6;2846;2854;2907:2;2895:9;2886:7;2882:23;2878:32;2875:52;;;2923:1;2920;2913:12;2875:52;2946:29;2965:9;2946:29;:::i;:::-;2936:39;;2994:38;3028:2;3017:9;3013:18;2994:38;:::i;:::-;2984:48;;3079:2;3068:9;3064:18;3051:32;3041:42;;2761:328;;;;;:::o;3094:348::-;3146:8;3156:6;3210:3;3203:4;3195:6;3191:17;3187:27;3177:55;;3228:1;3225;3218:12;3177:55;-1:-1:-1;3251:20:56;;3294:18;3283:30;;3280:50;;;3326:1;3323;3316:12;3280:50;3363:4;3355:6;3351:17;3339:29;;3415:3;3408:4;3399:6;3391;3387:19;3383:30;3380:39;3377:59;;;3432:1;3429;3422:12;3377:59;3094:348;;;;;:::o;3447:127::-;3508:10;3503:3;3499:20;3496:1;3489:31;3539:4;3536:1;3529:15;3563:4;3560:1;3553:15;3579:632;3644:5;3674:18;3715:2;3707:6;3704:14;3701:40;;;3721:18;;:::i;:::-;3796:2;3790:9;3764:2;3850:15;;-1:-1:-1;;3846:24:56;;;3872:2;3842:33;3838:42;3826:55;;;3896:18;;;3916:22;;;3893:46;3890:72;;;3942:18;;:::i;:::-;3982:10;3978:2;3971:22;4011:6;4002:15;;4041:6;4033;4026:22;4081:3;4072:6;4067:3;4063:16;4060:25;4057:45;;;4098:1;4095;4088:12;4057:45;4148:6;4143:3;4136:4;4128:6;4124:17;4111:44;4203:1;4196:4;4187:6;4179;4175:19;4171:30;4164:41;;;;3579:632;;;;;:::o;4216:1194::-;4345:6;4353;4361;4369;4377;4385;4393;4446:3;4434:9;4425:7;4421:23;4417:33;4414:53;;;4463:1;4460;4453:12;4414:53;4486:29;4505:9;4486:29;:::i;:::-;4476:39;;4566:2;4555:9;4551:18;4538:32;4589:18;4630:2;4622:6;4619:14;4616:34;;;4646:1;4643;4636:12;4616:34;4685:59;4736:7;4727:6;4716:9;4712:22;4685:59;:::i;:::-;4763:8;;-1:-1:-1;4659:85:56;-1:-1:-1;4851:2:56;4836:18;;4823:32;;-1:-1:-1;4867:16:56;;;4864:36;;;4896:1;4893;4886:12;4864:36;4935:61;4988:7;4977:8;4966:9;4962:24;4935:61;:::i;:::-;5015:8;;-1:-1:-1;4909:87:56;-1:-1:-1;5097:2:56;5082:18;;5069:32;;-1:-1:-1;5154:3:56;5139:19;;5126:33;;-1:-1:-1;5171:16:56;;;5168:36;;;5200:1;5197;5190:12;5168:36;-1:-1:-1;5223:24:56;;5278:4;5270:13;;5266:27;-1:-1:-1;5256:55:56;;5307:1;5304;5297:12;5256:55;5330:74;5396:7;5391:2;5378:16;5373:2;5369;5365:11;5330:74;:::i;:::-;5320:84;;;4216:1194;;;;;;;;;;:::o;5415:527::-;5668:3;5657:9;5650:22;5631:4;5695:46;5736:3;5725:9;5721:19;5713:6;5695:46;:::i;:::-;5789:9;5781:6;5777:22;5772:2;5761:9;5757:18;5750:50;5817:33;5843:6;5835;5817:33;:::i;:::-;5881:2;5866:18;;5859:34;;;;-1:-1:-1;;5924:2:56;5909:18;5902:34;5809:41;5415:527;-1:-1:-1;;5415:527:56:o;5947:347::-;6012:6;6020;6073:2;6061:9;6052:7;6048:23;6044:32;6041:52;;;6089:1;6086;6079:12;6041:52;6112:29;6131:9;6112:29;:::i;:::-;6102:39;;6191:2;6180:9;6176:18;6163:32;6238:5;6231:13;6224:21;6217:5;6214:32;6204:60;;6260:1;6257;6250:12;6204:60;6283:5;6273:15;;;5947:347;;;;;:::o;6299:667::-;6394:6;6402;6410;6418;6471:3;6459:9;6450:7;6446:23;6442:33;6439:53;;;6488:1;6485;6478:12;6439:53;6511:29;6530:9;6511:29;:::i;:::-;6501:39;;6559:38;6593:2;6582:9;6578:18;6559:38;:::i;:::-;6549:48;;6644:2;6633:9;6629:18;6616:32;6606:42;;6699:2;6688:9;6684:18;6671:32;6726:18;6718:6;6715:30;6712:50;;;6758:1;6755;6748:12;6712:50;6781:22;;6834:4;6826:13;;6822:27;-1:-1:-1;6812:55:56;;6863:1;6860;6853:12;6812:55;6886:74;6952:7;6947:2;6934:16;6929:2;6925;6921:11;6886:74;:::i;:::-;6876:84;;;6299:667;;;;;;;:::o;6971:260::-;7039:6;7047;7100:2;7088:9;7079:7;7075:23;7071:32;7068:52;;;7116:1;7113;7106:12;7068:52;7139:29;7158:9;7139:29;:::i;:::-;7129:39;;7187:38;7221:2;7210:9;7206:18;7187:38;:::i;:::-;7177:48;;6971:260;;;;;:::o;7236:658::-;7407:2;7459:21;;;7529:13;;7432:18;;;7551:22;;;7378:4;;7407:2;7630:15;;;;7604:2;7589:18;;;7378:4;7673:195;7687:6;7684:1;7681:13;7673:195;;;7752:13;;-1:-1:-1;;;;;7748:39:56;7736:52;;7843:15;;;;7808:12;;;;7784:1;7702:9;7673:195;;;-1:-1:-1;7885:3:56;;7236:658;-1:-1:-1;;;;;;7236:658:56:o;8081:795::-;8182:6;8190;8198;8206;8214;8267:2;8255:9;8246:7;8242:23;8238:32;8235:52;;;8283:1;8280;8273:12;8235:52;8306:29;8325:9;8306:29;:::i;:::-;8296:39;;8386:2;8375:9;8371:18;8358:32;8409:18;8450:2;8442:6;8439:14;8436:34;;;8466:1;8463;8456:12;8436:34;8505:59;8556:7;8547:6;8536:9;8532:22;8505:59;:::i;:::-;8583:8;;-1:-1:-1;8479:85:56;-1:-1:-1;8671:2:56;8656:18;;8643:32;;-1:-1:-1;8687:16:56;;;8684:36;;;8716:1;8713;8706:12;8684:36;;8755:61;8808:7;8797:8;8786:9;8782:24;8755:61;:::i;:::-;8081:795;;;;-1:-1:-1;8081:795:56;;-1:-1:-1;8835:8:56;;8729:87;8081:795;-1:-1:-1;;;8081:795:56:o;8881:380::-;8960:1;8956:12;;;;9003;;;9024:61;;9078:4;9070:6;9066:17;9056:27;;9024:61;9131:2;9123:6;9120:14;9100:18;9097:38;9094:161;;9177:10;9172:3;9168:20;9165:1;9158:31;9212:4;9209:1;9202:15;9240:4;9237:1;9230:15;9094:161;;8881:380;;;:::o;9266:127::-;9327:10;9322:3;9318:20;9315:1;9308:31;9358:4;9355:1;9348:15;9382:4;9379:1;9372:15;9398:135;9437:3;9458:17;;;9455:43;;9478:18;;:::i;:::-;-1:-1:-1;9525:1:56;9514:13;;9398:135::o;9664:545::-;9766:2;9761:3;9758:11;9755:448;;;9802:1;9827:5;9823:2;9816:17;9872:4;9868:2;9858:19;9942:2;9930:10;9926:19;9923:1;9919:27;9913:4;9909:38;9978:4;9966:10;9963:20;9960:47;;;-1:-1:-1;10001:4:56;9960:47;10056:2;10051:3;10047:12;10044:1;10040:20;10034:4;10030:31;10020:41;;10111:82;10129:2;10122:5;10119:13;10111:82;;;10174:17;;;10155:1;10144:13;10111:82;;;10115:3;;;9664:545;;;:::o;10385:1352::-;10511:3;10505:10;10538:18;10530:6;10527:30;10524:56;;;10560:18;;:::i;:::-;10589:97;10679:6;10639:38;10671:4;10665:11;10639:38;:::i;:::-;10633:4;10589:97;:::i;:::-;10741:4;;10805:2;10794:14;;10822:1;10817:663;;;;11524:1;11541:6;11538:89;;;-1:-1:-1;11593:19:56;;;11587:26;11538:89;-1:-1:-1;;10342:1:56;10338:11;;;10334:24;10330:29;10320:40;10366:1;10362:11;;;10317:57;11640:81;;10787:944;;10817:663;9611:1;9604:14;;;9648:4;9635:18;;-1:-1:-1;;10853:20:56;;;10971:236;10985:7;10982:1;10979:14;10971:236;;;11074:19;;;11068:26;11053:42;;11166:27;;;;11134:1;11122:14;;;;11001:19;;10971:236;;;10975:3;11235:6;11226:7;11223:19;11220:201;;;11296:19;;;11290:26;-1:-1:-1;;11379:1:56;11375:14;;;11391:3;11371:24;11367:37;11363:42;11348:58;11333:74;;11220:201;-1:-1:-1;;;;;11467:1:56;11451:14;;;11447:22;11434:36;;-1:-1:-1;10385:1352:56:o;11742:128::-;11809:9;;;11830:11;;;11827:37;;;11844:18;;:::i;11875:127::-;11936:10;11931:3;11927:20;11924:1;11917:31;11967:4;11964:1;11957:15;11991:4;11988:1;11981:15;12007:127;12068:10;12063:3;12059:20;12056:1;12049:31;12099:4;12096:1;12089:15;12123:4;12120:1;12113:15;12519:489;-1:-1:-1;;;;;12788:15:56;;;12770:34;;12840:15;;12835:2;12820:18;;12813:43;12887:2;12872:18;;12865:34;;;12935:3;12930:2;12915:18;;12908:31;;;12713:4;;12956:46;;12982:19;;12974:6;12956:46;:::i;:::-;12948:54;12519:489;-1:-1:-1;;;;;;12519:489:56:o;13013:249::-;13082:6;13135:2;13123:9;13114:7;13110:23;13106:32;13103:52;;;13151:1;13148;13141:12;13103:52;13183:9;13177:16;13202:30;13226:5;13202:30;:::i;13267:496::-;13446:3;13484:6;13478:13;13500:66;13559:6;13554:3;13547:4;13539:6;13535:17;13500:66;:::i;:::-;13629:13;;13588:16;;;;13651:70;13629:13;13588:16;13698:4;13686:17;;13651:70;:::i;:::-;13737:20;;13267:496;-1:-1:-1;;;;13267:496:56:o;13768:267::-;13857:6;13852:3;13845:19;13909:6;13902:5;13895:4;13890:3;13886:14;13873:43;-1:-1:-1;13961:1:56;13936:16;;;13954:4;13932:27;;;13925:38;;;;14017:2;13996:15;;;-1:-1:-1;;13992:29:56;13983:39;;;13979:50;;13768:267::o;14040:508::-;14285:2;14274:9;14267:21;14248:4;14311:62;14369:2;14358:9;14354:18;14346:6;14338;14311:62;:::i;:::-;14421:9;14413:6;14409:22;14404:2;14393:9;14389:18;14382:50;14449;14492:6;14484;14476;14449:50;:::i;:::-;14441:58;;;14535:6;14530:2;14519:9;14515:18;14508:34;14040:508;;;;;;;;:::o;14553:947::-;14754:2;14743:9;14736:21;14799:6;14793:13;14788:2;14777:9;14773:18;14766:41;14717:4;14854:2;14846:6;14842:15;14836:22;14896:4;14889;14878:9;14874:20;14867:34;14979:1;14975;14970:3;14966:11;14962:19;14947:12;14941:19;14937:45;14932:2;14921:9;14917:18;14910:73;15054:18;15048:2;15034:12;15030:21;15024:28;15020:53;15014:3;15003:9;14999:19;14992:82;15149:4;15135:12;15131:23;15125:30;15118:38;15111:46;15105:3;15094:9;15090:19;15083:75;15220:2;15206:12;15202:21;15196:28;15189:4;15178:9;15174:20;15167:58;15280:3;15266:12;15262:22;15256:29;15322:4;15316:3;15305:9;15301:19;15294:33;15350:54;15399:3;15388:9;15384:19;15368:14;15350:54;:::i;:::-;15336:68;;15465:3;15451:12;15447:22;15441:29;15435:3;15424:9;15420:19;15413:58;15488:6;15480:14;;;;14553:947;;;;:::o;15505:184::-;15575:6;15628:2;15616:9;15607:7;15603:23;15599:32;15596:52;;;15644:1;15641;15634:12;15596:52;-1:-1:-1;15667:16:56;;15505:184;-1:-1:-1;15505:184:56:o",
    "linkReferences": {},
    "immutableReferences": {
      "51613": [
        {
          "start": 1192,
          "length": 32
        },
        {
          "start": 4887,
          "length": 32
        }
      ],
      "51616": [
        {
          "start": 4829,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "authorize(address)": "b6a5d7de",
    "balanceOf(address)": "70a08231",
    "createPassport(address,string,string,uint256,string)": "78f7aef0",
    "getAllAuthorizedMembers()": "efa309ff",
    "getApproved(uint256)": "081812fc",
    "getPassport()": "8eb20b0b",
    "getPassportId(address)": "10a943cf",
    "grantStamp(address,string,string)": "ffeacfda",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isAuthorzedMember(address)": "93138b1e",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "schemaUID()": "f3de0506",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "unauthorize(address)": "f0b37c04"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEAS\",\"name\":\"eas\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"initialMembers\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"AlreadyAuthorized\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"AlreadyUnauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CannotAuthorizeZeroAddress\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PassportAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PassportCannotBeTransfered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PassportNotMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFailed\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PassportCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"passportHolder\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_placeOfBirth\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"createPassport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllAuthorizedMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPassport\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"placeOfBirth\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPassportId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"name\":\"grantStamp\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"attestationUID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"isAuthorzedMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"member\",\"type\":\"address\"}],\"name\":\"unauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AlreadyAuthorized(address)\":[{\"details\":\"A member cannot be authorized more than once.\"}],\"AlreadyUnauthorized(address)\":[{\"details\":\"A member cannot be unauthorized if it's already not an authorized member.\"}],\"CannotAuthorizeZeroAddress()\":[{\"details\":\"The zero address cannot be authorized.\"}],\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"PassportAlreadyMinted()\":[{\"details\":\"A passport cannot be minted more than once for the same address.\"}],\"PassportCannotBeTransfered()\":[{\"details\":\"Passports cannot be transferred.\"}],\"PassportNotMinted()\":[{\"details\":\"A passport must be minted before it can be used.\"}],\"TransferFailed()\":[{\"details\":\"Any ETH amount sent directly to the contract is automatically sent back\"}],\"Unauthorized(address)\":[{\"details\":\"The sender must be authorized to perform this operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"PassportCreated(address)\":{\"params\":{\"user\":\"The user address for which the passport is created\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"authorize(address)\":{\"params\":{\"member\":\"The address of the member to be authorized.\"}},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"createPassport(address,string,string,uint256,string)\":{\"details\":\"Only allows creating a passport if the sender has not created one before.\",\"params\":{\"_dateOfBirth\":\"Date of birth of the passport holder.\",\"_name\":\"Name of the passport holder.\",\"_placeOfBirth\":\"Place of birth of the passport holder.\",\"passportHolder\":\"The address of the passport holder (owner)\",\"uri\":\"Token URI for the new passport NFT.\"}},\"getAllAuthorizedMembers()\":{\"returns\":{\"_0\":\"An array of addresses of all authorized members.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPassport()\":{\"details\":\"Reverts if the user does not have a passport.\",\"returns\":{\"dateOfBirth\":\"The date of birth of the passport holder.\",\"issueDate\":\"The issue date of the passport.\",\"name\":\"The name of the passport holder.\",\"placeOfBirth\":\"The place of birth of the passport holder.\"}},\"getPassportId(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The passport ID.\"}},\"grantStamp(address,string,string)\":{\"details\":\"Reverts if the user does not have a passport or if the details do not match.\",\"params\":{\"country\":\"Country where the passport holder is visiting.\",\"name\":\"Name of the passport holder.\"},\"returns\":{\"attestationUID\":\"The UID of the stamp attestation.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isAuthorzedMember(address)\":{\"params\":{\"member\":\"The address of the member to be checked.\"},\"returns\":{\"_0\":\"A boolean indicating whether the member is authorized or not.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"Overrides the supportsInterface function in the ERC721 contract.\",\"params\":{\"interfaceId\":\"The ID of the interface.\"},\"returns\":{\"_0\":\"A boolean indicating if the interface is supported.\"}},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Overrides the tokenURI function in the ERC721 contract.\",\"params\":{\"tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token URI.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Overrides the transferFrom function in the ERC721 contract. Reverts if the sender and recipient are not the zero address.This function is making sure that the Passport cannot be transfered from one address to another after it is minted.\",\"params\":{\"from\":\"The address to transfer the token from.\",\"to\":\"The address to transfer the token to.\",\"tokenId\":\"The ID of the token to transfer.\"}},\"unauthorize(address)\":{\"params\":{\"member\":\"The address of the member to be removed.\"}}},\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyAuthorized(address)\":[{\"notice\":\"This error is emitted when the member is already authorized.\"}],\"AlreadyUnauthorized(address)\":[{\"notice\":\"This error is emitted when the member is already not authorized.\"}],\"CannotAuthorizeZeroAddress()\":[{\"notice\":\"This error is emitted when an attempt is made to authorize the zero address.\"}],\"PassportAlreadyMinted()\":[{\"notice\":\"This error is emitted when an attempt is made to mint a passport for an address that has already been minted.\"}],\"PassportCannotBeTransfered()\":[{\"notice\":\"This error is emitted when a transfer of a Passport NFT is attempted.\"}],\"PassportNotMinted()\":[{\"notice\":\"This error is emitted when an operation is attempted on a Passport NFT that hasn't been minted yet.\"}],\"TransferFailed()\":[{\"notice\":\"This error is emitted when the transfer of ether fails\"}],\"Unauthorized(address)\":[{\"notice\":\"This error is emitted when the sender is not authorized.\"}]},\"events\":{\"PassportCreated(address)\":{\"notice\":\"This event is emitted when a new Passport is created.\"}},\"kind\":\"user\",\"methods\":{\"authorize(address)\":{\"notice\":\"This function is used to authorize a member.\"},\"createPassport(address,string,string,uint256,string)\":{\"notice\":\"Creates a new Passport NFT for the sender.\"},\"getAllAuthorizedMembers()\":{\"notice\":\"This function is used to get all authorized members.\"},\"getPassport()\":{\"notice\":\"Returns the passport details for a user.\"},\"getPassportId(address)\":{\"notice\":\"Returns the passport ID associated with a user.\"},\"grantStamp(address,string,string)\":{\"notice\":\"Grants a stamp to the passport holder.\"},\"isAuthorzedMember(address)\":{\"notice\":\"This function is used to check if a member is authorized.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if the contract supports an interface.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the token URI for a given token ID.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers a token from one address to another.\"},\"unauthorize(address)\":{\"notice\":\"This function is used to remove a member's authority.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PassportNFT.sol\":\"PassportNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-attestation-service/=lib/eas-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/PassportNFT.sol\":{\"keccak256\":\"0x98544977faecb7e28be2d3120e03a61c6bbfd06c22c4f3a3360eef153bc37293\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2868ca7c55976d2f9907aae5c1e8c9d16d21c169e82c44094fedb8b395f28a5c\",\"dweb:/ipfs/QmQMWbLR6mwhvnSNAWJRwrzSiYnj4hXT8Jq2r9U7PNczT2\"]},\"src/StampAttester.sol\":{\"keccak256\":\"0xab05888d2a8cb6bd4800f84e980f4f0bd3a7bb8441c136df88d63d4e28d96659\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53775ea20212cf43c72058c30e1b7653989d6e7b9945f6eb4adfb0ab56962ab6\",\"dweb:/ipfs/QmZXXdqZ3Gvve79Xi5SQPGrKrkkyJetUGnN2xF6PerYjxG\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEAS",
              "name": "eas",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "schemaUID",
              "type": "bytes32"
            },
            {
              "internalType": "address[]",
              "name": "initialMembers",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AlreadyAuthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AlreadyUnauthorized"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "CannotAuthorizeZeroAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PassportAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PassportCannotBeTransfered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PassportNotMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "TransferFailed"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "Unauthorized"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PassportCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "authorize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "passportHolder",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_placeOfBirth",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_dateOfBirth",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPassport"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllAuthorizedMembers",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPassport",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "placeOfBirth",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dateOfBirth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issueDate",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPassportId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "grantStamp",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "attestationUID",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isAuthorzedMember",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "schemaUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "member",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unauthorize"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "authorize(address)": {
            "params": {
              "member": "The address of the member to be authorized."
            }
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "createPassport(address,string,string,uint256,string)": {
            "details": "Only allows creating a passport if the sender has not created one before.",
            "params": {
              "_dateOfBirth": "Date of birth of the passport holder.",
              "_name": "Name of the passport holder.",
              "_placeOfBirth": "Place of birth of the passport holder.",
              "passportHolder": "The address of the passport holder (owner)",
              "uri": "Token URI for the new passport NFT."
            }
          },
          "getAllAuthorizedMembers()": {
            "returns": {
              "_0": "An array of addresses of all authorized members."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getPassport()": {
            "details": "Reverts if the user does not have a passport.",
            "returns": {
              "dateOfBirth": "The date of birth of the passport holder.",
              "issueDate": "The issue date of the passport.",
              "name": "The name of the passport holder.",
              "placeOfBirth": "The place of birth of the passport holder."
            }
          },
          "getPassportId(address)": {
            "params": {
              "user": "The address of the user."
            },
            "returns": {
              "_0": "The passport ID."
            }
          },
          "grantStamp(address,string,string)": {
            "details": "Reverts if the user does not have a passport or if the details do not match.",
            "params": {
              "country": "Country where the passport holder is visiting.",
              "name": "Name of the passport holder."
            },
            "returns": {
              "attestationUID": "The UID of the stamp attestation."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "isAuthorzedMember(address)": {
            "params": {
              "member": "The address of the member to be checked."
            },
            "returns": {
              "_0": "A boolean indicating whether the member is authorized or not."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "Overrides the supportsInterface function in the ERC721 contract.",
            "params": {
              "interfaceId": "The ID of the interface."
            },
            "returns": {
              "_0": "A boolean indicating if the interface is supported."
            }
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Overrides the tokenURI function in the ERC721 contract.",
            "params": {
              "tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token URI."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Overrides the transferFrom function in the ERC721 contract. Reverts if the sender and recipient are not the zero address.This function is making sure that the Passport cannot be transfered from one address to another after it is minted.",
            "params": {
              "from": "The address to transfer the token from.",
              "to": "The address to transfer the token to.",
              "tokenId": "The ID of the token to transfer."
            }
          },
          "unauthorize(address)": {
            "params": {
              "member": "The address of the member to be removed."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "authorize(address)": {
            "notice": "This function is used to authorize a member."
          },
          "createPassport(address,string,string,uint256,string)": {
            "notice": "Creates a new Passport NFT for the sender."
          },
          "getAllAuthorizedMembers()": {
            "notice": "This function is used to get all authorized members."
          },
          "getPassport()": {
            "notice": "Returns the passport details for a user."
          },
          "getPassportId(address)": {
            "notice": "Returns the passport ID associated with a user."
          },
          "grantStamp(address,string,string)": {
            "notice": "Grants a stamp to the passport holder."
          },
          "isAuthorzedMember(address)": {
            "notice": "This function is used to check if a member is authorized."
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if the contract supports an interface."
          },
          "tokenURI(uint256)": {
            "notice": "Returns the token URI for a given token ID."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Transfers a token from one address to another."
          },
          "unauthorize(address)": {
            "notice": "This function is used to remove a member's authority."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ethereum-attestation-service/=lib/eas-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eas-contracts/=lib/eas-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PassportNFT.sol": "PassportNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        "keccak256": "0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036",
        "urls": [
          "bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1",
          "dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
        "urls": [
          "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
          "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
        "urls": [
          "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
          "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
        "urls": [
          "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
          "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670",
        "urls": [
          "bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96",
          "dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "src/PassportNFT.sol": {
        "keccak256": "0x98544977faecb7e28be2d3120e03a61c6bbfd06c22c4f3a3360eef153bc37293",
        "urls": [
          "bzz-raw://2868ca7c55976d2f9907aae5c1e8c9d16d21c169e82c44094fedb8b395f28a5c",
          "dweb:/ipfs/QmQMWbLR6mwhvnSNAWJRwrzSiYnj4hXT8Jq2r9U7PNczT2"
        ],
        "license": "MIT"
      },
      "src/StampAttester.sol": {
        "keccak256": "0xab05888d2a8cb6bd4800f84e980f4f0bd3a7bb8441c136df88d63d4e28d96659",
        "urls": [
          "bzz-raw://53775ea20212cf43c72058c30e1b7653989d6e7b9945f6eb4adfb0ab56962ab6",
          "dweb:/ipfs/QmZXXdqZ3Gvve79Xi5SQPGrKrkkyJetUGnN2xF6PerYjxG"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PassportNFT.sol",
    "id": 51601,
    "exportedSymbols": {
      "Attestation": [
        49
      ],
      "ERC721": [
        47639
      ],
      "ERC721URIStorage": [
        47900
      ],
      "IEAS": [
        2323
      ],
      "IERC721": [
        47756
      ],
      "PassportNFT": [
        51600
      ],
      "StampAttester": [
        51719
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11346:53",
    "nodes": [
      {
        "id": 51015,
        "nodeType": "PragmaDirective",
        "src": "32:24:53",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".18"
        ]
      },
      {
        "id": 51018,
        "nodeType": "ImportDirective",
        "src": "58:83:53",
        "nodes": [],
        "absolutePath": "lib/eas-contracts/contracts/IEAS.sol",
        "file": "@ethereum-attestation-service/contracts/IEAS.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51601,
        "sourceUnit": 2324,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51016,
              "name": "IEAS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2323,
              "src": "66:4:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51017,
              "name": "Attestation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49,
              "src": "72:11:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51021,
        "nodeType": "ImportDirective",
        "src": "142:80:53",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51601,
        "sourceUnit": 47640,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51019,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47639,
              "src": "150:6:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51020,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47756,
              "src": "158:7:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51023,
        "nodeType": "ImportDirective",
        "src": "223:102:53",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51601,
        "sourceUnit": 47901,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51022,
              "name": "ERC721URIStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47900,
              "src": "231:16:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51025,
        "nodeType": "ImportDirective",
        "src": "326:50:53",
        "nodes": [],
        "absolutePath": "src/StampAttester.sol",
        "file": "./StampAttester.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51601,
        "sourceUnit": 51720,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51024,
              "name": "StampAttester",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51719,
              "src": "334:13:53",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51600,
        "nodeType": "ContractDefinition",
        "src": "378:10999:53",
        "nodes": [
          {
            "id": 51044,
            "nodeType": "StructDefinition",
            "src": "508:337:53",
            "nodes": [],
            "canonicalName": "PassportNFT.Passport",
            "documentation": {
              "id": 51032,
              "nodeType": "StructuredDocumentation",
              "src": "448:55:53",
              "text": "@dev This struct is used to store passport details."
            },
            "members": [
              {
                "constant": false,
                "id": 51034,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "541:4:53",
                "nodeType": "VariableDeclaration",
                "scope": 51044,
                "src": "534:11:53",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51033,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "534:6:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51036,
                "mutability": "mutable",
                "name": "placeOfBirth",
                "nameLocation": "593:12:53",
                "nodeType": "VariableDeclaration",
                "scope": 51044,
                "src": "586:19:53",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51035,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "586:6:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51038,
                "mutability": "mutable",
                "name": "dateOfBirth",
                "nameLocation": "664:11:53",
                "nodeType": "VariableDeclaration",
                "scope": 51044,
                "src": "656:19:53",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51037,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "656:7:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51040,
                "mutability": "mutable",
                "name": "issueDate",
                "nameLocation": "733:9:53",
                "nodeType": "VariableDeclaration",
                "scope": 51044,
                "src": "725:17:53",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51039,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "725:7:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51043,
                "mutability": "mutable",
                "name": "stampAttestions",
                "nameLocation": "792:15:53",
                "nodeType": "VariableDeclaration",
                "scope": 51044,
                "src": "782:25:53",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 51041,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 51042,
                  "nodeType": "ArrayTypeName",
                  "src": "782:9:53",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Passport",
            "nameLocation": "515:8:53",
            "scope": 51600,
            "visibility": "public"
          },
          {
            "id": 51049,
            "nodeType": "EventDefinition",
            "src": "992:36:53",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 51045,
              "nodeType": "StructuredDocumentation",
              "src": "851:136:53",
              "text": "@param user The user address for which the passport is created\n @notice This event is emitted when a new Passport is created."
            },
            "eventSelector": "325b88bc4ac3fed38ad6d226bfb680c4dae1e2be7e3ca7865aff5ebad93ad6cf",
            "name": "PassportCreated",
            "nameLocation": "998:15:53",
            "parameters": {
              "id": 51048,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51047,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1022:4:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51049,
                  "src": "1014:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1014:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1013:14:53"
            }
          },
          {
            "id": 51052,
            "nodeType": "ErrorDefinition",
            "src": "1166:35:53",
            "nodes": [],
            "documentation": {
              "id": 51050,
              "nodeType": "StructuredDocumentation",
              "src": "1034:127:53",
              "text": "@notice This error is emitted when a transfer of a Passport NFT is attempted.\n @dev Passports cannot be transferred."
            },
            "errorSelector": "b04e6e30",
            "name": "PassportCannotBeTransfered",
            "nameLocation": "1172:26:53",
            "parameters": {
              "id": 51051,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1198:2:53"
            }
          },
          {
            "id": 51057,
            "nodeType": "ErrorDefinition",
            "src": "1350:28:53",
            "nodes": [],
            "documentation": {
              "id": 51053,
              "nodeType": "StructuredDocumentation",
              "src": "1207:138:53",
              "text": "@notice This error is emitted when the sender is not authorized.\n @dev The sender must be authorized to perform this operation."
            },
            "errorSelector": "8e4a23d6",
            "name": "Unauthorized",
            "nameLocation": "1356:12:53",
            "parameters": {
              "id": 51056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51055,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51057,
                  "src": "1369:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51054,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1369:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1368:9:53"
            }
          },
          {
            "id": 51062,
            "nodeType": "ErrorDefinition",
            "src": "1520:33:53",
            "nodes": [],
            "documentation": {
              "id": 51058,
              "nodeType": "StructuredDocumentation",
              "src": "1384:131:53",
              "text": "@notice This error is emitted when the member is already authorized.\n @dev A member cannot be authorized more than once."
            },
            "errorSelector": "e207fabe",
            "name": "AlreadyAuthorized",
            "nameLocation": "1526:17:53",
            "parameters": {
              "id": 51061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51060,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51062,
                  "src": "1544:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51059,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1544:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1543:9:53"
            }
          },
          {
            "id": 51067,
            "nodeType": "ErrorDefinition",
            "src": "1727:35:53",
            "nodes": [],
            "documentation": {
              "id": 51063,
              "nodeType": "StructuredDocumentation",
              "src": "1559:163:53",
              "text": "@notice This error is emitted when the member is already not authorized.\n @dev A member cannot be unauthorized if it's already not an authorized member."
            },
            "errorSelector": "0cb31d6c",
            "name": "AlreadyUnauthorized",
            "nameLocation": "1733:19:53",
            "parameters": {
              "id": 51066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51067,
                  "src": "1753:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1753:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1752:9:53"
            }
          },
          {
            "id": 51070,
            "nodeType": "ErrorDefinition",
            "src": "1913:35:53",
            "nodes": [],
            "documentation": {
              "id": 51068,
              "nodeType": "StructuredDocumentation",
              "src": "1768:140:53",
              "text": "@notice This error is emitted when an attempt is made to authorize the zero address.\n @dev The zero address cannot be authorized."
            },
            "errorSelector": "a9d8d063",
            "name": "CannotAuthorizeZeroAddress",
            "nameLocation": "1919:26:53",
            "parameters": {
              "id": 51069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1945:2:53"
            }
          },
          {
            "id": 51073,
            "nodeType": "ErrorDefinition",
            "src": "2132:26:53",
            "nodes": [],
            "documentation": {
              "id": 51071,
              "nodeType": "StructuredDocumentation",
              "src": "1954:173:53",
              "text": "@notice This error is emitted when an operation is attempted on a Passport NFT that hasn't been minted yet.\n @dev A passport must be minted before it can be used."
            },
            "errorSelector": "83bf4439",
            "name": "PassportNotMinted",
            "nameLocation": "2138:17:53",
            "parameters": {
              "id": 51072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2155:2:53"
            }
          },
          {
            "id": 51076,
            "nodeType": "ErrorDefinition",
            "src": "2368:30:53",
            "nodes": [],
            "documentation": {
              "id": 51074,
              "nodeType": "StructuredDocumentation",
              "src": "2164:199:53",
              "text": "@notice This error is emitted when an attempt is made to mint a passport for an address that has already been minted.\n @dev A passport cannot be minted more than once for the same address."
            },
            "errorSelector": "e1f3c536",
            "name": "PassportAlreadyMinted",
            "nameLocation": "2374:21:53",
            "parameters": {
              "id": 51075,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2395:2:53"
            }
          },
          {
            "id": 51079,
            "nodeType": "ErrorDefinition",
            "src": "2560:23:53",
            "nodes": [],
            "documentation": {
              "id": 51077,
              "nodeType": "StructuredDocumentation",
              "src": "2404:151:53",
              "text": "@notice This error is emitted when the transfer of ether fails\n @dev Any ETH amount sent directly to the contract is automatically sent back"
            },
            "errorSelector": "90b8ec18",
            "name": "TransferFailed",
            "nameLocation": "2566:14:53",
            "parameters": {
              "id": 51078,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2580:2:53"
            }
          },
          {
            "id": 51082,
            "nodeType": "VariableDeclaration",
            "src": "2691:28:53",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51080,
              "nodeType": "StructuredDocumentation",
              "src": "2589:97:53",
              "text": "@notice This variable stores the ID to be assigned to the next Passport NFT that gets minted."
            },
            "mutability": "mutable",
            "name": "_nextTokenId",
            "nameLocation": "2707:12:53",
            "scope": 51600,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51081,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2691:7:53",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 51086,
            "nodeType": "VariableDeclaration",
            "src": "2803:36:53",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51083,
              "nodeType": "StructuredDocumentation",
              "src": "2725:73:53",
              "text": "@notice This variable stores the addresses of all authorized members."
            },
            "mutability": "mutable",
            "name": "_authorizedMembers",
            "nameLocation": "2821:18:53",
            "scope": 51600,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 51084,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2803:7:53",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 51085,
              "nodeType": "ArrayTypeName",
              "src": "2803:9:53",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 51091,
            "nodeType": "VariableDeclaration",
            "src": "2939:58:53",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51087,
              "nodeType": "StructuredDocumentation",
              "src": "2845:89:53",
              "text": "@notice This mapping stores the index of each member in the authorized members array."
            },
            "mutability": "mutable",
            "name": "_memberIndex",
            "nameLocation": "2985:12:53",
            "scope": 51600,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 51090,
              "keyName": "member",
              "keyNameLocation": "2955:6:53",
              "keyType": {
                "id": 51088,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2947:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2939:37:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "id",
              "valueNameLocation": "2973:2:53",
              "valueType": {
                "id": 51089,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2965:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 51096,
            "nodeType": "VariableDeclaration",
            "src": "3081:69:53",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51092,
              "nodeType": "StructuredDocumentation",
              "src": "3003:73:53",
              "text": "@notice This mapping stores whether each member is authorized or not."
            },
            "mutability": "mutable",
            "name": "_isAuthorzedMember",
            "nameLocation": "3132:18:53",
            "scope": 51600,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 51095,
              "keyName": "member",
              "keyNameLocation": "3097:6:53",
              "keyType": {
                "id": 51093,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3089:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3081:42:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "authorzied",
              "valueNameLocation": "3112:10:53",
              "valueType": {
                "id": 51094,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3107:4:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 51101,
            "nodeType": "VariableDeclaration",
            "src": "3243:56:53",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51097,
              "nodeType": "StructuredDocumentation",
              "src": "3156:82:53",
              "text": "@notice This mapping stores the Passport ID associated with each user address."
            },
            "mutability": "mutable",
            "name": "userToPassportId",
            "nameLocation": "3283:16:53",
            "scope": 51600,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 51100,
              "keyName": "user",
              "keyNameLocation": "3259:4:53",
              "keyType": {
                "id": 51098,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3251:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3243:39:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "userId",
              "valueNameLocation": "3275:6:53",
              "valueType": {
                "id": 51099,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3267:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51107,
            "nodeType": "VariableDeclaration",
            "src": "3396:61:53",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51102,
              "nodeType": "StructuredDocumentation",
              "src": "3305:86:53",
              "text": "@notice This mapping stores the Passport details associated with each Passport ID."
            },
            "mutability": "mutable",
            "name": "passportIdToUser",
            "nameLocation": "3441:16:53",
            "scope": 51600,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51044_storage_$",
              "typeString": "mapping(uint256 => struct PassportNFT.Passport)"
            },
            "typeName": {
              "id": 51106,
              "keyName": "userId",
              "keyNameLocation": "3412:6:53",
              "keyType": {
                "id": 51103,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3404:7:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3396:44:53",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51044_storage_$",
                "typeString": "mapping(uint256 => struct PassportNFT.Passport)"
              },
              "valueName": "passport",
              "valueNameLocation": "3431:8:53",
              "valueType": {
                "id": 51105,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 51104,
                  "name": "Passport",
                  "nameLocations": [
                    "3422:8:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51044,
                  "src": "3422:8:53"
                },
                "referencedDeclaration": 51044,
                "src": "3422:8:53",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Passport_$51044_storage_ptr",
                  "typeString": "struct PassportNFT.Passport"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51124,
            "nodeType": "ModifierDefinition",
            "src": "3527:152:53",
            "nodes": [],
            "body": {
              "id": 51123,
              "nodeType": "Block",
              "src": "3567:112:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 51115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "3581:27:53",
                    "subExpression": {
                      "baseExpression": {
                        "id": 51112,
                        "name": "_isAuthorzedMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51096,
                        "src": "3582:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 51114,
                      "indexExpression": {
                        "id": 51113,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51110,
                        "src": "3601:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3582:26:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51121,
                  "nodeType": "IfStatement",
                  "src": "3577:85:53",
                  "trueBody": {
                    "id": 51120,
                    "nodeType": "Block",
                    "src": "3610:52:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 51117,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51110,
                              "src": "3644:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51116,
                            "name": "Unauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51057,
                            "src": "3631:12:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 51118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3631:20:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51119,
                        "nodeType": "RevertStatement",
                        "src": "3624:27:53"
                      }
                    ]
                  }
                },
                {
                  "id": 51122,
                  "nodeType": "PlaceholderStatement",
                  "src": "3671:1:53"
                }
              ]
            },
            "documentation": {
              "id": 51108,
              "nodeType": "StructuredDocumentation",
              "src": "3464:58:53",
              "text": "@dev This modifier checks if the member is authorized."
            },
            "name": "onlyAuthorized",
            "nameLocation": "3536:14:53",
            "parameters": {
              "id": 51111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51110,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "3559:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51124,
                  "src": "3551:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3550:16:53"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51184,
            "nodeType": "FunctionDefinition",
            "src": "3685:462:53",
            "nodes": [],
            "body": {
              "id": 51183,
              "nodeType": "Block",
              "src": "3848:299:53",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 51181,
                    "nodeType": "Block",
                    "src": "3910:231:53",
                    "statements": [
                      {
                        "assignments": [
                          51155
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 51155,
                            "mutability": "mutable",
                            "name": "member",
                            "nameLocation": "3932:6:53",
                            "nodeType": "VariableDeclaration",
                            "scope": 51181,
                            "src": "3924:14:53",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 51154,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3924:7:53",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 51159,
                        "initialValue": {
                          "baseExpression": {
                            "id": 51156,
                            "name": "initialMembers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51132,
                            "src": "3941:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 51158,
                          "indexExpression": {
                            "id": 51157,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51144,
                            "src": "3956:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3941:17:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3924:34:53"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 51165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 51160,
                            "name": "member",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51155,
                            "src": "3976:6:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 51163,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3994:1:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 51162,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3986:7:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 51161,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3986:7:53",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51164,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3986:10:53",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3976:20:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 51168,
                        "nodeType": "IfStatement",
                        "src": "3972:67:53",
                        "trueBody": {
                          "id": 51167,
                          "nodeType": "Block",
                          "src": "3998:41:53",
                          "statements": [
                            {
                              "id": 51166,
                              "nodeType": "Continue",
                              "src": "4016:8:53"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 51172,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51155,
                              "src": "4076:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 51169,
                              "name": "_authorizedMembers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51086,
                              "src": "4052:18:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 51171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4071:4:53",
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "4052:23:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 51173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4052:31:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51174,
                        "nodeType": "ExpressionStatement",
                        "src": "4052:31:53"
                      },
                      {
                        "expression": {
                          "id": 51179,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 51175,
                              "name": "_isAuthorzedMember",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51096,
                              "src": "4097:18:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 51177,
                            "indexExpression": {
                              "id": 51176,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51155,
                              "src": "4116:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4097:26:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 51178,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4126:4:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4097:33:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 51180,
                        "nodeType": "ExpressionStatement",
                        "src": "4097:33:53"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51147,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51144,
                      "src": "3878:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 51148,
                        "name": "initialMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51132,
                        "src": "3882:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 51149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3897:6:53",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3882:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3878:25:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51182,
                  "initializationExpression": {
                    "assignments": [
                      51144
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 51144,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3871:1:53",
                        "nodeType": "VariableDeclaration",
                        "scope": 51182,
                        "src": "3863:9:53",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 51143,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3863:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 51146,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 51145,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3875:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3863:13:53"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 51152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3905:3:53",
                      "subExpression": {
                        "id": 51151,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51144,
                        "src": "3905:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51153,
                    "nodeType": "ExpressionStatement",
                    "src": "3905:3:53"
                  },
                  "nodeType": "ForStatement",
                  "src": "3858:283:53"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50617373706f72744e4654",
                    "id": 51135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3796:13:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2be034a237f4277654fa73956ffc3bd848174197ad28f00e4baf114130d75b92",
                      "typeString": "literal_string \"PassportNFT\""
                    },
                    "value": "PassportNFT"
                  },
                  {
                    "hexValue": "4d544b",
                    "id": 51136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3811:5:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                      "typeString": "literal_string \"MTK\""
                    },
                    "value": "MTK"
                  }
                ],
                "id": 51137,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51134,
                  "name": "ERC721",
                  "nameLocations": [
                    "3789:6:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "3789:6:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "3789:28:53"
              },
              {
                "arguments": [
                  {
                    "id": 51139,
                    "name": "eas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51127,
                    "src": "3832:3:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEAS_$2323",
                      "typeString": "contract IEAS"
                    }
                  },
                  {
                    "id": 51140,
                    "name": "schemaUID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51129,
                    "src": "3837:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 51141,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51138,
                  "name": "StampAttester",
                  "nameLocations": [
                    "3818:13:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51719,
                  "src": "3818:13:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "3818:29:53"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51127,
                  "mutability": "mutable",
                  "name": "eas",
                  "nameLocation": "3711:3:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51184,
                  "src": "3706:8:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEAS_$2323",
                    "typeString": "contract IEAS"
                  },
                  "typeName": {
                    "id": 51126,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51125,
                      "name": "IEAS",
                      "nameLocations": [
                        "3706:4:53"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2323,
                      "src": "3706:4:53"
                    },
                    "referencedDeclaration": 2323,
                    "src": "3706:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEAS_$2323",
                      "typeString": "contract IEAS"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51129,
                  "mutability": "mutable",
                  "name": "schemaUID",
                  "nameLocation": "3732:9:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51184,
                  "src": "3724:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51128,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3724:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51132,
                  "mutability": "mutable",
                  "name": "initialMembers",
                  "nameLocation": "3768:14:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51184,
                  "src": "3751:31:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51130,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3751:7:53",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 51131,
                    "nodeType": "ArrayTypeName",
                    "src": "3751:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3696:92:53"
            },
            "returnParameters": {
              "id": 51142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3848:0:53"
            },
            "scope": 51600,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51207,
            "nodeType": "FunctionDefinition",
            "src": "4270:171:53",
            "nodes": [],
            "body": {
              "id": 51206,
              "nodeType": "Block",
              "src": "4297:144:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51189,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51189,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4313:7:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51206,
                      "src": "4308:12:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 51188,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4308:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 51198,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 51196,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4360:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "expression": {
                            "id": 51190,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4326:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4330:6:53",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4326:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 51192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4337:4:53",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4326:15:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 51195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 51193,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4349:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51194,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4353:5:53",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4349:9:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4326:33:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 51197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4326:37:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4307:56:53"
                },
                {
                  "condition": {
                    "id": 51200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "4377:8:53",
                    "subExpression": {
                      "id": 51199,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51189,
                      "src": "4378:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51205,
                  "nodeType": "IfStatement",
                  "src": "4373:62:53",
                  "trueBody": {
                    "id": 51204,
                    "nodeType": "Block",
                    "src": "4387:48:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51201,
                            "name": "TransferFailed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51079,
                            "src": "4408:14:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4408:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51203,
                        "nodeType": "RevertStatement",
                        "src": "4401:23:53"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 51185,
              "nodeType": "StructuredDocumentation",
              "src": "4153:112:53",
              "text": " @dev ETH callback.\n @dev Overrides the receive function in the SchemaResolver contract."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4277:2:53"
            },
            "returnParameters": {
              "id": 51187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4297:0:53"
            },
            "scope": 51600,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51250,
            "nodeType": "FunctionDefinition",
            "src": "4588:356:53",
            "nodes": [],
            "body": {
              "id": 51249,
              "nodeType": "Block",
              "src": "4659:285:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 51222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51217,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51210,
                      "src": "4673:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 51220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4691:1:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 51219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4683:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 51218,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4683:7:53",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 51221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4683:10:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4673:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51227,
                  "nodeType": "IfStatement",
                  "src": "4669:86:53",
                  "trueBody": {
                    "id": 51226,
                    "nodeType": "Block",
                    "src": "4695:60:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51223,
                            "name": "CannotAuthorizeZeroAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51070,
                            "src": "4716:26:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4716:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51225,
                        "nodeType": "RevertStatement",
                        "src": "4709:35:53"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 51228,
                      "name": "_isAuthorzedMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51096,
                      "src": "4768:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 51230,
                    "indexExpression": {
                      "id": 51229,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51210,
                      "src": "4787:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4768:26:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51236,
                  "nodeType": "IfStatement",
                  "src": "4764:89:53",
                  "trueBody": {
                    "id": 51235,
                    "nodeType": "Block",
                    "src": "4796:57:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 51232,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51210,
                              "src": "4835:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51231,
                            "name": "AlreadyAuthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51062,
                            "src": "4817:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 51233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4817:25:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51234,
                        "nodeType": "RevertStatement",
                        "src": "4810:32:53"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51240,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51210,
                        "src": "4887:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 51237,
                        "name": "_authorizedMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51086,
                        "src": "4863:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 51239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4882:4:53",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4863:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 51241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4863:31:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51242,
                  "nodeType": "ExpressionStatement",
                  "src": "4863:31:53"
                },
                {
                  "expression": {
                    "id": 51247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51243,
                        "name": "_isAuthorzedMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51096,
                        "src": "4904:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 51245,
                      "indexExpression": {
                        "id": 51244,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51210,
                        "src": "4923:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4904:26:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 51246,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4933:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4904:33:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51248,
                  "nodeType": "ExpressionStatement",
                  "src": "4904:33:53"
                }
              ]
            },
            "documentation": {
              "id": 51208,
              "nodeType": "StructuredDocumentation",
              "src": "4447:136:53",
              "text": " @notice This function is used to authorize a member.\n @param member The address of the member to be authorized."
            },
            "functionSelector": "b6a5d7de",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 51213,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "4647:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 51214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4651:6:53",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "4647:10:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 51215,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51212,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "4632:14:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51124,
                  "src": "4632:14:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "4632:26:53"
              }
            ],
            "name": "authorize",
            "nameLocation": "4597:9:53",
            "parameters": {
              "id": 51211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51210,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "4615:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51250,
                  "src": "4607:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4607:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4606:16:53"
            },
            "returnParameters": {
              "id": 51216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4659:0:53"
            },
            "scope": 51600,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51313,
            "nodeType": "FunctionDefinition",
            "src": "5097:537:53",
            "nodes": [],
            "body": {
              "id": 51312,
              "nodeType": "Block",
              "src": "5170:464:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 51263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "5184:27:53",
                    "subExpression": {
                      "baseExpression": {
                        "id": 51260,
                        "name": "_isAuthorzedMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51096,
                        "src": "5185:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 51262,
                      "indexExpression": {
                        "id": 51261,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51253,
                        "src": "5204:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5185:26:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51269,
                  "nodeType": "IfStatement",
                  "src": "5180:92:53",
                  "trueBody": {
                    "id": 51268,
                    "nodeType": "Block",
                    "src": "5213:59:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [
                            {
                              "id": 51265,
                              "name": "member",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51253,
                              "src": "5254:6:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 51264,
                            "name": "AlreadyUnauthorized",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51067,
                            "src": "5234:19:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                              "typeString": "function (address) pure"
                            }
                          },
                          "id": 51266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5234:27:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51267,
                        "nodeType": "RevertStatement",
                        "src": "5227:34:53"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    51271
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51271,
                      "mutability": "mutable",
                      "name": "indexToRemove",
                      "nameLocation": "5289:13:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51312,
                      "src": "5281:21:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51270,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5281:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51275,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51272,
                      "name": "_memberIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51091,
                      "src": "5305:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51274,
                    "indexExpression": {
                      "id": 51273,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51253,
                      "src": "5318:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5305:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5281:44:53"
                },
                {
                  "assignments": [
                    51277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51277,
                      "mutability": "mutable",
                      "name": "lastMember",
                      "nameLocation": "5343:10:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51312,
                      "src": "5335:18:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 51276,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5335:7:53",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51284,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51278,
                      "name": "_authorizedMembers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51086,
                      "src": "5356:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 51283,
                    "indexExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 51282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 51279,
                          "name": "_authorizedMembers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51086,
                          "src": "5375:18:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 51280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5394:6:53",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5375:25:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 51281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5403:1:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5375:29:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5356:49:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5335:70:53"
                },
                {
                  "expression": {
                    "id": 51289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51285,
                        "name": "_authorizedMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51086,
                        "src": "5416:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 51287,
                      "indexExpression": {
                        "id": 51286,
                        "name": "indexToRemove",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51271,
                        "src": "5435:13:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5416:33:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51288,
                      "name": "lastMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51277,
                      "src": "5452:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5416:46:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 51290,
                  "nodeType": "ExpressionStatement",
                  "src": "5416:46:53"
                },
                {
                  "expression": {
                    "id": 51295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51291,
                        "name": "_memberIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51091,
                        "src": "5472:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51293,
                      "indexExpression": {
                        "id": 51292,
                        "name": "lastMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51277,
                        "src": "5485:10:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5472:24:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51294,
                      "name": "indexToRemove",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51271,
                      "src": "5499:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5472:40:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51296,
                  "nodeType": "ExpressionStatement",
                  "src": "5472:40:53"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 51297,
                        "name": "_authorizedMembers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51086,
                        "src": "5523:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 51299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5542:3:53",
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "5523:22:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer)"
                      }
                    },
                    "id": 51300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5523:24:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51301,
                  "nodeType": "ExpressionStatement",
                  "src": "5523:24:53"
                },
                {
                  "expression": {
                    "id": 51305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5557:33:53",
                    "subExpression": {
                      "baseExpression": {
                        "id": 51302,
                        "name": "_isAuthorzedMember",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51096,
                        "src": "5564:18:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 51304,
                      "indexExpression": {
                        "id": 51303,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51253,
                        "src": "5583:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5564:26:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51306,
                  "nodeType": "ExpressionStatement",
                  "src": "5557:33:53"
                },
                {
                  "expression": {
                    "id": 51310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5600:27:53",
                    "subExpression": {
                      "baseExpression": {
                        "id": 51307,
                        "name": "_memberIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51091,
                        "src": "5607:12:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51309,
                      "indexExpression": {
                        "id": 51308,
                        "name": "member",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51253,
                        "src": "5620:6:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5607:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51311,
                  "nodeType": "ExpressionStatement",
                  "src": "5600:27:53"
                }
              ]
            },
            "documentation": {
              "id": 51251,
              "nodeType": "StructuredDocumentation",
              "src": "4950:142:53",
              "text": " @notice This function is used to remove a member's authority.\n @param member The address of the member to be removed."
            },
            "functionSelector": "f0b37c04",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 51256,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "5158:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 51257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5162:6:53",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "5158:10:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 51258,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51255,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "5143:14:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51124,
                  "src": "5143:14:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "5143:26:53"
              }
            ],
            "name": "unauthorize",
            "nameLocation": "5106:11:53",
            "parameters": {
              "id": 51254,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51253,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "5126:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51313,
                  "src": "5118:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5118:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5117:16:53"
            },
            "returnParameters": {
              "id": 51259,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5170:0:53"
            },
            "scope": 51600,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51323,
            "nodeType": "FunctionDefinition",
            "src": "5788:146:53",
            "nodes": [],
            "body": {
              "id": 51322,
              "nodeType": "Block",
              "src": "5892:42:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 51320,
                    "name": "_authorizedMembers",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51086,
                    "src": "5909:18:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 51319,
                  "id": 51321,
                  "nodeType": "Return",
                  "src": "5902:25:53"
                }
              ]
            },
            "documentation": {
              "id": 51314,
              "nodeType": "StructuredDocumentation",
              "src": "5640:143:53",
              "text": " @notice This function is used to get all authorized members.\n @return An array of addresses of all authorized members."
            },
            "functionSelector": "efa309ff",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllAuthorizedMembers",
            "nameLocation": "5797:23:53",
            "parameters": {
              "id": 51315,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5820:2:53"
            },
            "returnParameters": {
              "id": 51319,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51318,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51323,
                  "src": "5870:16:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51316,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5870:7:53",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 51317,
                    "nodeType": "ArrayTypeName",
                    "src": "5870:9:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5869:18:53"
            },
            "scope": 51600,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51336,
            "nodeType": "FunctionDefinition",
            "src": "6168:122:53",
            "nodes": [],
            "body": {
              "id": 51335,
              "nodeType": "Block",
              "src": "6240:50:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 51331,
                      "name": "_isAuthorzedMember",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51096,
                      "src": "6257:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 51333,
                    "indexExpression": {
                      "id": 51332,
                      "name": "member",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51326,
                      "src": "6276:6:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6257:26:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51330,
                  "id": 51334,
                  "nodeType": "Return",
                  "src": "6250:33:53"
                }
              ]
            },
            "documentation": {
              "id": 51324,
              "nodeType": "StructuredDocumentation",
              "src": "5940:223:53",
              "text": " @notice This function is used to check if a member is authorized.\n @param member The address of the member to be checked.\n @return A boolean indicating whether the member is authorized or not."
            },
            "functionSelector": "93138b1e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAuthorzedMember",
            "nameLocation": "6177:17:53",
            "parameters": {
              "id": 51327,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51326,
                  "mutability": "mutable",
                  "name": "member",
                  "nameLocation": "6203:6:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51336,
                  "src": "6195:14:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51325,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6195:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6194:16:53"
            },
            "returnParameters": {
              "id": 51330,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51329,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51336,
                  "src": "6234:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51328,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6234:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6233:6:53"
            },
            "scope": 51600,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51391,
            "nodeType": "FunctionDefinition",
            "src": "6676:592:53",
            "nodes": [],
            "body": {
              "id": 51390,
              "nodeType": "Block",
              "src": "6896:372:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51349
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51349,
                      "mutability": "mutable",
                      "name": "passportId",
                      "nameLocation": "6914:10:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51390,
                      "src": "6906:18:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51348,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6906:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51354,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51350,
                      "name": "userToPassportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51101,
                      "src": "6927:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51353,
                    "indexExpression": {
                      "expression": {
                        "id": 51351,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6944:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51352,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6948:6:53",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6944:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6927:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6906:49:53"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51355,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51349,
                      "src": "6969:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6983:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6969:15:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51362,
                  "nodeType": "IfStatement",
                  "src": "6965:72:53",
                  "trueBody": {
                    "id": 51361,
                    "nodeType": "Block",
                    "src": "6986:51:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51358,
                            "name": "PassportNotMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51073,
                            "src": "7007:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7007:19:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51360,
                        "nodeType": "RevertStatement",
                        "src": "7000:26:53"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    51365
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51365,
                      "mutability": "mutable",
                      "name": "passport",
                      "nameLocation": "7062:8:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51390,
                      "src": "7046:24:53",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51044_memory_ptr",
                        "typeString": "struct PassportNFT.Passport"
                      },
                      "typeName": {
                        "id": 51364,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51363,
                          "name": "Passport",
                          "nameLocations": [
                            "7046:8:53"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51044,
                          "src": "7046:8:53"
                        },
                        "referencedDeclaration": 51044,
                        "src": "7046:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51044_storage_ptr",
                          "typeString": "struct PassportNFT.Passport"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51369,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51366,
                      "name": "passportIdToUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51107,
                      "src": "7073:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51044_storage_$",
                        "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                      }
                    },
                    "id": 51368,
                    "indexExpression": {
                      "id": 51367,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51349,
                      "src": "7090:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7073:28:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Passport_$51044_storage",
                      "typeString": "struct PassportNFT.Passport storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7046:55:53"
                },
                {
                  "expression": {
                    "id": 51373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51370,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51340,
                      "src": "7111:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51371,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51365,
                        "src": "7118:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51044_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51372,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7127:4:53",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51034,
                      "src": "7118:13:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7111:20:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 51374,
                  "nodeType": "ExpressionStatement",
                  "src": "7111:20:53"
                },
                {
                  "expression": {
                    "id": 51378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51375,
                      "name": "placeOfBirth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51342,
                      "src": "7141:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51376,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51365,
                        "src": "7156:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51044_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51377,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7165:12:53",
                      "memberName": "placeOfBirth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51036,
                      "src": "7156:21:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "7141:36:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 51379,
                  "nodeType": "ExpressionStatement",
                  "src": "7141:36:53"
                },
                {
                  "expression": {
                    "id": 51383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51380,
                      "name": "dateOfBirth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51344,
                      "src": "7187:11:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51381,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51365,
                        "src": "7201:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51044_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51382,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7210:11:53",
                      "memberName": "dateOfBirth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51038,
                      "src": "7201:20:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7187:34:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51384,
                  "nodeType": "ExpressionStatement",
                  "src": "7187:34:53"
                },
                {
                  "expression": {
                    "id": 51388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51385,
                      "name": "issueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51346,
                      "src": "7231:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51386,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51365,
                        "src": "7243:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51044_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51387,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7252:9:53",
                      "memberName": "issueDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51040,
                      "src": "7243:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7231:30:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51389,
                  "nodeType": "ExpressionStatement",
                  "src": "7231:30:53"
                }
              ]
            },
            "documentation": {
              "id": 51337,
              "nodeType": "StructuredDocumentation",
              "src": "6296:375:53",
              "text": " @notice Returns the passport details for a user.\n @dev Reverts if the user does not have a passport.\n @return name The name of the passport holder.\n @return placeOfBirth The place of birth of the passport holder.\n @return dateOfBirth The date of birth of the passport holder.\n @return issueDate The issue date of the passport."
            },
            "functionSelector": "8eb20b0b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPassport",
            "nameLocation": "6685:11:53",
            "parameters": {
              "id": 51338,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6696:2:53"
            },
            "returnParameters": {
              "id": 51347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51340,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "6773:4:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51391,
                  "src": "6759:18:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51339,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6759:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51342,
                  "mutability": "mutable",
                  "name": "placeOfBirth",
                  "nameLocation": "6805:12:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51391,
                  "src": "6791:26:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51341,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6791:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51344,
                  "mutability": "mutable",
                  "name": "dateOfBirth",
                  "nameLocation": "6839:11:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51391,
                  "src": "6831:19:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51343,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6831:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51346,
                  "mutability": "mutable",
                  "name": "issueDate",
                  "nameLocation": "6872:9:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51391,
                  "src": "6864:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51345,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6864:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6745:146:53"
            },
            "scope": 51600,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51404,
            "nodeType": "FunctionDefinition",
            "src": "7429:115:53",
            "nodes": [],
            "body": {
              "id": 51403,
              "nodeType": "Block",
              "src": "7498:46:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 51399,
                      "name": "userToPassportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51101,
                      "src": "7515:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51401,
                    "indexExpression": {
                      "id": 51400,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51394,
                      "src": "7532:4:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "7515:22:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 51398,
                  "id": 51402,
                  "nodeType": "Return",
                  "src": "7508:29:53"
                }
              ]
            },
            "documentation": {
              "id": 51392,
              "nodeType": "StructuredDocumentation",
              "src": "7274:150:53",
              "text": " @notice Returns the passport ID associated with a user.\n @param user The address of the user.\n @return The passport ID."
            },
            "functionSelector": "10a943cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPassportId",
            "nameLocation": "7438:13:53",
            "parameters": {
              "id": 51395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51394,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "7460:4:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51404,
                  "src": "7452:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51393,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7452:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7451:14:53"
            },
            "returnParameters": {
              "id": 51398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51397,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51404,
                  "src": "7489:7:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7489:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7488:9:53"
            },
            "scope": 51600,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51475,
            "nodeType": "FunctionDefinition",
            "src": "8017:808:53",
            "nodes": [],
            "body": {
              "id": 51474,
              "nodeType": "Block",
              "src": "8240:585:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 51422,
                        "name": "userToPassportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51101,
                        "src": "8254:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51424,
                      "indexExpression": {
                        "id": 51423,
                        "name": "passportHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51407,
                        "src": "8271:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8254:32:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51425,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8290:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8254:37:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51431,
                  "nodeType": "IfStatement",
                  "src": "8250:98:53",
                  "trueBody": {
                    "id": 51430,
                    "nodeType": "Block",
                    "src": "8293:55:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51427,
                            "name": "PassportAlreadyMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51076,
                            "src": "8314:21:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51428,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8314:23:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51429,
                        "nodeType": "RevertStatement",
                        "src": "8307:30:53"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    51433
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51433,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "8366:7:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51474,
                      "src": "8358:15:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51432,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8358:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51436,
                  "initialValue": {
                    "id": 51435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "8376:14:53",
                    "subExpression": {
                      "id": 51434,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51082,
                      "src": "8378:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8358:32:53"
                },
                {
                  "expression": {
                    "id": 51452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51437,
                        "name": "passportIdToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51107,
                        "src": "8400:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51044_storage_$",
                          "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                        }
                      },
                      "id": 51439,
                      "indexExpression": {
                        "id": 51438,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51433,
                        "src": "8417:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8400:25:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51044_storage",
                        "typeString": "struct PassportNFT.Passport storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51441,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51409,
                          "src": "8457:5:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 51442,
                          "name": "_placeOfBirth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51411,
                          "src": "8490:13:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 51443,
                          "name": "_dateOfBirth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51413,
                          "src": "8530:12:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 51444,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8567:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "8573:9:53",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8567:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8627:1:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51448,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8613:13:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 51446,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "8617:7:53",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 51447,
                              "nodeType": "ArrayTypeName",
                              "src": "8617:9:53",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 51450,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8613:16:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "id": 51440,
                        "name": "Passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51044,
                        "src": "8428:8:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Passport_$51044_storage_ptr_$",
                          "typeString": "type(struct PassportNFT.Passport storage pointer)"
                        }
                      },
                      "id": 51451,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "8451:4:53",
                        "8476:12:53",
                        "8517:11:53",
                        "8556:9:53",
                        "8596:15:53"
                      ],
                      "names": [
                        "name",
                        "placeOfBirth",
                        "dateOfBirth",
                        "issueDate",
                        "stampAttestions"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "8428:212:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51044_memory_ptr",
                        "typeString": "struct PassportNFT.Passport memory"
                      }
                    },
                    "src": "8400:240:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Passport_$51044_storage",
                      "typeString": "struct PassportNFT.Passport storage ref"
                    }
                  },
                  "id": 51453,
                  "nodeType": "ExpressionStatement",
                  "src": "8400:240:53"
                },
                {
                  "expression": {
                    "id": 51458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51454,
                        "name": "userToPassportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51101,
                        "src": "8650:16:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51456,
                      "indexExpression": {
                        "id": 51455,
                        "name": "passportHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51407,
                        "src": "8667:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8650:32:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51457,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51433,
                      "src": "8685:7:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8650:42:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51459,
                  "nodeType": "ExpressionStatement",
                  "src": "8650:42:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51461,
                        "name": "passportHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51407,
                        "src": "8712:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51462,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51433,
                        "src": "8728:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51460,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47261,
                        47287
                      ],
                      "referencedDeclaration": 47261,
                      "src": "8702:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8702:34:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51464,
                  "nodeType": "ExpressionStatement",
                  "src": "8702:34:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51466,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51433,
                        "src": "8759:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 51467,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51415,
                        "src": "8768:3:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 51465,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47899,
                      "src": "8746:12:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 51468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8746:26:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51469,
                  "nodeType": "ExpressionStatement",
                  "src": "8746:26:53"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 51471,
                        "name": "passportHolder",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51407,
                        "src": "8803:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51470,
                      "name": "PassportCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51049,
                      "src": "8787:15:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8787:31:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51473,
                  "nodeType": "EmitStatement",
                  "src": "8782:36:53"
                }
              ]
            },
            "documentation": {
              "id": 51405,
              "nodeType": "StructuredDocumentation",
              "src": "7550:462:53",
              "text": " @notice Creates a new Passport NFT for the sender.\n @dev Only allows creating a passport if the sender has not created one before.\n @param passportHolder The address of the passport holder (owner)\n @param _name Name of the passport holder.\n @param _placeOfBirth Place of birth of the passport holder.\n @param _dateOfBirth Date of birth of the passport holder.\n @param uri Token URI for the new passport NFT."
            },
            "functionSelector": "78f7aef0",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 51418,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "8228:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 51419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "8232:6:53",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "8228:10:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 51420,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51417,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "8213:14:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51124,
                  "src": "8213:14:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "8213:26:53"
              }
            ],
            "name": "createPassport",
            "nameLocation": "8026:14:53",
            "parameters": {
              "id": 51416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51407,
                  "mutability": "mutable",
                  "name": "passportHolder",
                  "nameLocation": "8058:14:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "8050:22:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51406,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8050:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51409,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8098:5:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "8082:21:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51408,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8082:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51411,
                  "mutability": "mutable",
                  "name": "_placeOfBirth",
                  "nameLocation": "8129:13:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "8113:29:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51410,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8113:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51413,
                  "mutability": "mutable",
                  "name": "_dateOfBirth",
                  "nameLocation": "8160:12:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "8152:20:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51412,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8152:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51415,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "8196:3:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51475,
                  "src": "8182:17:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51414,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8182:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8040:165:53"
            },
            "returnParameters": {
              "id": 51421,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8240:0:53"
            },
            "scope": 51600,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51525,
            "nodeType": "FunctionDefinition",
            "src": "9171:544:53",
            "nodes": [],
            "body": {
              "id": 51524,
              "nodeType": "Block",
              "src": "9354:361:53",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51492
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51492,
                      "mutability": "mutable",
                      "name": "passportId",
                      "nameLocation": "9372:10:53",
                      "nodeType": "VariableDeclaration",
                      "scope": 51524,
                      "src": "9364:18:53",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51491,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9364:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51496,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51493,
                      "name": "userToPassportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51101,
                      "src": "9385:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51495,
                    "indexExpression": {
                      "id": 51494,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51478,
                      "src": "9402:9:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "9385:27:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9364:48:53"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51497,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51492,
                      "src": "9426:10:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9440:1:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9426:15:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51504,
                  "nodeType": "IfStatement",
                  "src": "9422:72:53",
                  "trueBody": {
                    "id": 51503,
                    "nodeType": "Block",
                    "src": "9443:51:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51500,
                            "name": "PassportNotMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51073,
                            "src": "9464:17:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9464:19:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51502,
                        "nodeType": "RevertStatement",
                        "src": "9457:26:53"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 51514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51505,
                      "name": "attestationUID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51489,
                      "src": "9503:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 51507,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9545:3:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9549:6:53",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9545:10:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 51509,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51480,
                          "src": "9569:4:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 51510,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51482,
                          "src": "9587:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "expression": {
                            "id": 51511,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "9608:5:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "9614:9:53",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "9608:15:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 51506,
                        "name": "attestStamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51672,
                        "src": "9520:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (address,string calldata,string calldata,uint256) returns (bytes32)"
                        }
                      },
                      "id": 51513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9520:113:53",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "9503:130:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 51515,
                  "nodeType": "ExpressionStatement",
                  "src": "9503:130:53"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51521,
                        "name": "attestationUID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51489,
                        "src": "9693:14:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 51516,
                            "name": "passportIdToUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51107,
                            "src": "9643:16:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51044_storage_$",
                              "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                            }
                          },
                          "id": 51518,
                          "indexExpression": {
                            "id": 51517,
                            "name": "passportId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51492,
                            "src": "9660:10:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9643:28:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Passport_$51044_storage",
                            "typeString": "struct PassportNFT.Passport storage ref"
                          }
                        },
                        "id": 51519,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9672:15:53",
                        "memberName": "stampAttestions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51043,
                        "src": "9643:44:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 51520,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9688:4:53",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "9643:49:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 51522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9643:65:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51523,
                  "nodeType": "ExpressionStatement",
                  "src": "9643:65:53"
                }
              ]
            },
            "documentation": {
              "id": 51476,
              "nodeType": "StructuredDocumentation",
              "src": "8831:335:53",
              "text": " @notice Grants a stamp to the passport holder.\n @dev Reverts if the user does not have a passport or if the details do not match.\n @param name Name of the passport holder.\n @param country Country where the passport holder is visiting.\n @return attestationUID The UID of the stamp attestation."
            },
            "functionSelector": "ffeacfda",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 51485,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "9309:3:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 51486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "9313:6:53",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "9309:10:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 51487,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 51484,
                  "name": "onlyAuthorized",
                  "nameLocations": [
                    "9294:14:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51124,
                  "src": "9294:14:53"
                },
                "nodeType": "ModifierInvocation",
                "src": "9294:26:53"
              }
            ],
            "name": "grantStamp",
            "nameLocation": "9180:10:53",
            "parameters": {
              "id": 51483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51478,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "9208:9:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51525,
                  "src": "9200:17:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9200:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51480,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "9243:4:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51525,
                  "src": "9227:20:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51479,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9227:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51482,
                  "mutability": "mutable",
                  "name": "country",
                  "nameLocation": "9273:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51525,
                  "src": "9257:23:53",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51481,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "9257:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9190:96:53"
            },
            "returnParameters": {
              "id": 51490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51489,
                  "mutability": "mutable",
                  "name": "attestationUID",
                  "nameLocation": "9338:14:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51525,
                  "src": "9330:22:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51488,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9330:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9329:24:53"
            },
            "scope": 51600,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51565,
            "nodeType": "FunctionDefinition",
            "src": "10230:295:53",
            "nodes": [],
            "body": {
              "id": 51564,
              "nodeType": "Block",
              "src": "10358:167:53",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 51550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 51543,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 51538,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51528,
                        "src": "10372:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 51541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10388:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10380:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51539,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10380:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10380:10:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "10372:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 51549,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 51544,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51530,
                        "src": "10394:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 51547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10408:1:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10400:7:53",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51545,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10400:7:53",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10400:10:53",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "10394:16:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10372:38:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51555,
                  "nodeType": "IfStatement",
                  "src": "10368:104:53",
                  "trueBody": {
                    "id": 51554,
                    "nodeType": "Block",
                    "src": "10412:60:53",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51551,
                            "name": "PassportCannotBeTransfered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51052,
                            "src": "10433:26:53",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10433:28:53",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51553,
                        "nodeType": "RevertStatement",
                        "src": "10426:35:53"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51559,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51528,
                        "src": "10500:4:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51560,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51530,
                        "src": "10506:2:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51561,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51532,
                        "src": "10510:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 51556,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10481:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PassportNFT_$51600_$",
                          "typeString": "type(contract super PassportNFT)"
                        }
                      },
                      "id": 51558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10487:12:53",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46947,
                      "src": "10481:18:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 51562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10481:37:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51563,
                  "nodeType": "ExpressionStatement",
                  "src": "10481:37:53"
                }
              ]
            },
            "baseFunctions": [
              46947,
              47721
            ],
            "documentation": {
              "id": 51526,
              "nodeType": "StructuredDocumentation",
              "src": "9721:504:53",
              "text": " @notice Transfers a token from one address to another.\n @dev Overrides the transferFrom function in the ERC721 contract. Reverts if the sender and recipient are not the zero address.\n @dev This function is making sure that the Passport cannot be transfered from one address to another after it is minted.\n @param from The address to transfer the token from.\n @param to The address to transfer the token to.\n @param tokenId The ID of the token to transfer."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "10239:12:53",
            "overrides": {
              "id": 51536,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 51534,
                  "name": "ERC721",
                  "nameLocations": [
                    "10341:6:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "10341:6:53"
                },
                {
                  "id": 51535,
                  "name": "IERC721",
                  "nameLocations": [
                    "10349:7:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47756,
                  "src": "10349:7:53"
                }
              ],
              "src": "10332:25:53"
            },
            "parameters": {
              "id": 51533,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51528,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "10269:4:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51565,
                  "src": "10261:12:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10261:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51530,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "10291:2:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51565,
                  "src": "10283:10:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51529,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10283:7:53",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51532,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10311:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51565,
                  "src": "10303:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51531,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10303:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10251:73:53"
            },
            "returnParameters": {
              "id": 51537,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10358:0:53"
            },
            "scope": 51600,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51582,
            "nodeType": "FunctionDefinition",
            "src": "10747:167:53",
            "nodes": [],
            "body": {
              "id": 51581,
              "nodeType": "Block",
              "src": "10867:47:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51578,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51568,
                        "src": "10899:7:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 51576,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10884:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PassportNFT_$51600_$",
                          "typeString": "type(contract super PassportNFT)"
                        }
                      },
                      "id": 51577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10890:8:53",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47880,
                      "src": "10884:14:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 51579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10884:23:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 51575,
                  "id": 51580,
                  "nodeType": "Return",
                  "src": "10877:30:53"
                }
              ]
            },
            "baseFunctions": [
              46826,
              47880
            ],
            "documentation": {
              "id": 51566,
              "nodeType": "StructuredDocumentation",
              "src": "10531:211:53",
              "text": " @notice Returns the token URI for a given token ID.\n @dev Overrides the tokenURI function in the ERC721 contract.\n @param tokenId The ID of the token.\n @return The token URI."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "10756:8:53",
            "overrides": {
              "id": 51572,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 51570,
                  "name": "ERC721",
                  "nameLocations": [
                    "10817:6:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "10817:6:53"
                },
                {
                  "id": 51571,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "10825:16:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47900,
                  "src": "10825:16:53"
                }
              ],
              "src": "10808:34:53"
            },
            "parameters": {
              "id": 51569,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51568,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10782:7:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51582,
                  "src": "10774:15:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51567,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10774:7:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10764:31:53"
            },
            "returnParameters": {
              "id": 51575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51574,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51582,
                  "src": "10852:13:53",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51573,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10852:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10851:15:53"
            },
            "scope": 51600,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51599,
            "nodeType": "FunctionDefinition",
            "src": "11192:183:53",
            "nodes": [],
            "body": {
              "id": 51598,
              "nodeType": "Block",
              "src": "11315:60:53",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51595,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51585,
                        "src": "11356:11:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 51593,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11332:5:53",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PassportNFT_$51600_$",
                          "typeString": "type(contract super PassportNFT)"
                        }
                      },
                      "id": 51594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "11338:17:53",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47823,
                      "src": "11332:23:53",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 51596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11332:36:53",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51592,
                  "id": 51597,
                  "nodeType": "Return",
                  "src": "11325:43:53"
                }
              ]
            },
            "baseFunctions": [
              46731,
              47823
            ],
            "documentation": {
              "id": 51583,
              "nodeType": "StructuredDocumentation",
              "src": "10920:267:53",
              "text": " @notice Checks if the contract supports an interface.\n @dev Overrides the supportsInterface function in the ERC721 contract.\n @param interfaceId The ID of the interface.\n @return A boolean indicating if the interface is supported."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "11201:17:53",
            "overrides": {
              "id": 51589,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 51587,
                  "name": "ERC721",
                  "nameLocations": [
                    "11274:6:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "11274:6:53"
                },
                {
                  "id": 51588,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "11282:16:53"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47900,
                  "src": "11282:16:53"
                }
              ],
              "src": "11265:34:53"
            },
            "parameters": {
              "id": 51586,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51585,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "11235:11:53",
                  "nodeType": "VariableDeclaration",
                  "scope": 51599,
                  "src": "11228:18:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 51584,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "11228:6:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11218:34:53"
            },
            "returnParameters": {
              "id": 51592,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51591,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51599,
                  "src": "11309:4:53",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51590,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11309:4:53",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11308:6:53"
            },
            "scope": 51600,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51026,
              "name": "ERC721",
              "nameLocations": [
                "402:6:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47639,
              "src": "402:6:53"
            },
            "id": 51027,
            "nodeType": "InheritanceSpecifier",
            "src": "402:6:53"
          },
          {
            "baseName": {
              "id": 51028,
              "name": "ERC721URIStorage",
              "nameLocations": [
                "410:16:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47900,
              "src": "410:16:53"
            },
            "id": 51029,
            "nodeType": "InheritanceSpecifier",
            "src": "410:16:53"
          },
          {
            "baseName": {
              "id": 51030,
              "name": "StampAttester",
              "nameLocations": [
                "428:13:53"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51719,
              "src": "428:13:53"
            },
            "id": 51031,
            "nodeType": "InheritanceSpecifier",
            "src": "428:13:53"
          }
        ],
        "canonicalName": "PassportNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51600,
          51719,
          47900,
          47639,
          46583,
          47928,
          46464,
          47756,
          49559,
          49571,
          48203
        ],
        "name": "PassportNFT",
        "nameLocation": "387:11:53",
        "scope": 51601,
        "usedErrors": [
          46541,
          46546,
          46555,
          46560,
          46565,
          46572,
          46577,
          46582,
          51052,
          51057,
          51062,
          51067,
          51070,
          51073,
          51076,
          51079
        ],
        "usedEvents": [
          46456,
          46463,
          47655,
          47664,
          47673,
          51049
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 53
}