{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "eas",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "schemaUID",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721IncorrectOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721InsufficientApproval",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOperator",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC721InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ERC721NonexistentToken",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PassportNFT__DetailsMismatch",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PassportNFT__PassportAlreadyMinted",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PassportNFT__PassportCannotBeTransfered",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PassportNFT__PassportNotMinted",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fromTokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_toTokenId",
          "type": "uint256"
        }
      ],
      "name": "BatchMetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "MetadataUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "PassportCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_placeOfBirth",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_dateOfBirth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_socialSecurityNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_driversLicenceNumber",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "createPassport",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "country",
          "type": "string"
        }
      ],
      "name": "createStamp",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "attestationUID",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPassport",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "placeOfBirth",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "dateOfBirth",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "issueDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "socialSecurityNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "driversLicenceNumber",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getPassportId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getStamps",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "stamps",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "schemaUID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "479:8437:54:-:0;;;2485:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2592:3;2597:9;1381:113:33;;;;;;;;;;;;;-1:-1:-1;;;1381:113:33;;;;;;;;;;;;;;;;-1:-1:-1;;;1381:113:33;;;1455:5;1447;:13;;;;;;:::i;:::-;-1:-1:-1;1470:7:33;:17;1480:7;1470;:17;:::i;:::-;-1:-1:-1;;;603:22:53;;-1:-1:-1;;;;;635:16:53;;;-1:-1:-1;479:8437:54;;-1:-1:-1;479:8437:54;14:351:56;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:56;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:56:o;370:127::-;431:10;426:3;422:20;419:1;412:31;462:4;459:1;452:15;486:4;483:1;476:15;502:380;581:1;577:12;;;;624;;;645:61;;699:4;691:6;687:17;677:27;;645:61;752:2;744:6;741:14;721:18;718:38;715:161;;798:10;793:3;789:20;786:1;779:31;833:4;830:1;823:15;861:4;858:1;851:15;715:161;;502:380;;;:::o;1013:545::-;1115:2;1110:3;1107:11;1104:448;;;1151:1;1176:5;1172:2;1165:17;1221:4;1217:2;1207:19;1291:2;1279:10;1275:19;1272:1;1268:27;1262:4;1258:38;1327:4;1315:10;1312:20;1309:47;;;-1:-1:-1;1350:4:56;1309:47;1405:2;1400:3;1396:12;1393:1;1389:20;1383:4;1379:31;1369:41;;1460:82;1478:2;1471:5;1468:13;1460:82;;;1523:17;;;1504:1;1493:13;1460:82;;;1464:3;;;1104:448;1013:545;;;:::o;1734:1352::-;1854:10;;-1:-1:-1;;;;;1876:30:56;;1873:56;;;1909:18;;:::i;:::-;1938:97;2028:6;1988:38;2020:4;2014:11;1988:38;:::i;:::-;1982:4;1938:97;:::i;:::-;2090:4;;2154:2;2143:14;;2171:1;2166:663;;;;2873:1;2890:6;2887:89;;;-1:-1:-1;2942:19:56;;;2936:26;2887:89;-1:-1:-1;;1691:1:56;1687:11;;;1683:24;1679:29;1669:40;1715:1;1711:11;;;1666:57;2989:81;;2136:944;;2166:663;960:1;953:14;;;997:4;984:18;;-1:-1:-1;;2202:20:56;;;2320:236;2334:7;2331:1;2328:14;2320:236;;;2423:19;;;2417:26;2402:42;;2515:27;;;;2483:1;2471:14;;;;2350:19;;2320:236;;;2324:3;2584:6;2575:7;2572:19;2569:201;;;2645:19;;;2639:26;-1:-1:-1;;2728:1:56;2724:14;;;2740:3;2720:24;2716:37;2712:42;2697:58;2682:74;;2569:201;-1:-1:-1;;;;;2816:1:56;2800:14;;;2796:22;2783:36;;-1:-1:-1;1734:1352:56:o;:::-;479:8437:54;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad578063b88d4fde11610071578063b88d4fde1461028e578063c87b56dd146102a1578063e201100d146102b4578063e985e9c5146102c7578063f3de0506146102da57600080fd5b806370a08231146102335780638eb20b0b1461024657806395d89b4114610260578063a22cb46514610268578063b05e51581461027b57600080fd5b806310a943cf116100f457806310a943cf146101a35780631a371932146101da57806323b872dd146101fa57806342842e0e1461020d5780636352211e1461022057600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b6101396101343660046118c1565b610301565b60405190151581526020015b60405180910390f35b610156610312565b604051610145919061192e565b610176610171366004611941565b6103a4565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611976565b6103cd565b005b6101cc6101b13660046119a0565b6001600160a01b031660009081526007602052604090205490565b604051908152602001610145565b6101ed6101e83660046119a0565b6103dc565b60405161014591906119bb565b6101a16102083660046119ff565b6105c2565b6101a161021b3660046119ff565b610610565b61017661022e366004611941565b61062b565b6101cc6102413660046119a0565b610636565b61024e610683565b60405161014596959493929190611a3b565b6101566108ac565b6101a1610276366004611a86565b6108bb565b6101a1610289366004611b97565b6108c6565b6101a161029c366004611c5b565b610a8f565b6101566102af366004611941565b610aac565b6101cc6102c2366004611cd7565b610ab7565b6101396102d5366004611d43565b610d35565b6101cc7f000000000000000000000000000000000000000000000000000000000000000081565b600061030c82610d63565b92915050565b60606000805461032190611d76565b80601f016020809104026020016040519081016040528092919081815260200182805461034d90611d76565b801561039a5780601f1061036f5761010080835404028352916020019161039a565b820191906000526020600020905b81548152906001019060200180831161037d57829003601f168201915b5050505050905090565b60006103af82610d88565b506000828152600460205260409020546001600160a01b031661030c565b6103d8828233610dc1565b5050565b6001600160a01b0381166000908152600760209081526040808320548084526008909252808320815160e0810190925280546060949291908290829061042190611d76565b80601f016020809104026020016040519081016040528092919081815260200182805461044d90611d76565b801561049a5780601f1061046f5761010080835404028352916020019161049a565b820191906000526020600020905b81548152906001019060200180831161047d57829003601f168201915b505050505081526020016001820180546104b390611d76565b80601f01602080910402602001604051908101604052809291908181526020018280546104df90611d76565b801561052c5780601f106105015761010080835404028352916020019161052c565b820191906000526020600020905b81548152906001019060200180831161050f57829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682018054806020026020016040519081016040528092919081815260200182805480156105ac57602002820191906000526020600020905b815481526020019060010190808311610598575b5050509190925250505060c00151949350505050565b6001600160a01b038316158015906105e257506001600160a01b03821615155b1561060057604051630a515b3360e31b815260040160405180910390fd5b61060b838383610dce565b505050565b61060b83838360405180602001604052806000815250610a8f565b600061030c82610d88565b60006001600160a01b038216610667576040516322718ad960e21b8152600060048201526024015b60405180910390fd5b506001600160a01b031660009081526003602052604090205490565b3360009081526007602052604081205460609182918190819081908082036106be57604051630bc48fd160e21b815260040160405180910390fd5b600081815260086020526040808220815160e081019092528054829082906106e590611d76565b80601f016020809104026020016040519081016040528092919081815260200182805461071190611d76565b801561075e5780601f106107335761010080835404028352916020019161075e565b820191906000526020600020905b81548152906001019060200180831161074157829003601f168201915b5050505050815260200160018201805461077790611d76565b80601f01602080910402602001604051908101604052809291908181526020018280546107a390611d76565b80156107f05780601f106107c5576101008083540402835291602001916107f0565b820191906000526020600020905b8154815290600101906020018083116107d357829003601f168201915b50505050508152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561087057602002820191906000526020600020905b81548152602001906001019080831161085c575b5050509190925250508151602083015160408401516060850151608086015160a090960151939e929d50909b5099509297509550909350505050565b60606001805461032190611d76565b6103d8338383610e53565b33600090815260076020526040902054156108f45760405163844e958360e01b815260040160405180910390fd5b600060096000815461090590611db0565b9182905550604080516101006020601f8d01819004028201810190925260e081018b81529293509182918c908c9081908501838280828437600092019190915250505090825250604080516020601f8b0181900481028201810190925289815291810191908a908a9081908401838280828437600092018290525093855250505060208083018990524260408085019190915260608401899052608084018890528051838152808301825260a0909401939093528482526008905220815181906109cf9082611e25565b50602082015160018201906109e49082611e25565b5060408201516002820155606082015160038201556080820151600482015560a0820151600582015560c08201518051610a28916006840191602090910190611848565b5050336000818152600760205260409020839055610a47915082610ef2565b610a518183610f0c565b6040513381527f325b88bc4ac3fed38ad6d226bfb680c4dae1e2be7e3ca7865aff5ebad93ad6cf9060200160405180910390a1505050505050505050565b610a9a8484846105c2565b610aa684848484610f5c565b50505050565b606061030c82611085565b336000908152600760209081526040808320548084526008909252808320815160e0810190925280548492919082908290610af190611d76565b80601f0160208091040260200160405190810160405280929190818152602001828054610b1d90611d76565b8015610b6a5780601f10610b3f57610100808354040283529160200191610b6a565b820191906000526020600020905b815481529060010190602001808311610b4d57829003601f168201915b50505050508152602001600182018054610b8390611d76565b80601f0160208091040260200160405190810160405280929190818152602001828054610baf90611d76565b8015610bfc5780601f10610bd157610100808354040283529160200191610bfc565b820191906000526020600020905b815481529060010190602001808311610bdf57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482015481526020016005820154815260200160068201805480602002602001604051908101604052809291908181526020018280548015610c7c57602002820191906000526020600020905b815481526020019060010190808311610c68575b505050505081525050905081600003610ca857604051630bc48fd160e21b815260040160405180910390fd5b80515186141580610cd9575080518051602090910120604051610cce9089908990611ee5565b604051809103902014155b15610cf7576040516323add05560e21b815260040160405180910390fd5b610d05338888888842611196565b60009283526008602090815260408420600601805460018101825590855293209092018290555095945050505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b03198216632483248360e11b148061030c575061030c826112d6565b6000818152600260205260408120546001600160a01b03168061030c57604051637e27328960e01b81526004810184905260240161065e565b61060b8383836001611326565b6001600160a01b038216610df857604051633250574960e11b81526000600482015260240161065e565b6000610e0583833361142c565b9050836001600160a01b0316816001600160a01b031614610aa6576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161065e565b6001600160a01b038216610e8557604051630b61174360e31b81526001600160a01b038316600482015260240161065e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6103d8828260405180602001604052806000815250611525565b6000828152600660205260409020610f248282611e25565b506040518281527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200160405180910390a15050565b6001600160a01b0383163b15610aa657604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290610f9e903390889087908790600401611ef5565b6020604051808303816000875af1925050508015610fd9575060408051601f3d908101601f19168201909252610fd691810190611f32565b60015b611042573d808015611007576040519150601f19603f3d011682016040523d82523d6000602084013e61100c565b606091505b50805160000361103a57604051633250574960e11b81526001600160a01b038516600482015260240161065e565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461107e57604051633250574960e11b81526001600160a01b038516600482015260240161065e565b5050505050565b606061109082610d88565b50600082815260066020526040812080546110aa90611d76565b80601f01602080910402602001604051908101604052809291908181526020018280546110d690611d76565b80156111235780601f106110f857610100808354040283529160200191611123565b820191906000526020600020905b81548152906001019060200180831161110657829003601f168201915b50505050509050600061114160408051602081019091526000815290565b90508051600003611153575092915050565b81511561118557808260405160200161116d929190611f4f565b60405160208183030381529060405292505050919050565b61118e8461153c565b949350505050565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663f17325e760405180604001604052807f000000000000000000000000000000000000000000000000000000000000000081526020016040518060c001604052808d6001600160a01b03168152602001600067ffffffffffffffff1681526020016000151581526020016000801b81526020018c8c8c8c8c60405160200161124f959493929190611fa7565b604051602081830303815290604052815260200160008152508152506040518263ffffffff1660e01b81526004016112879190611fe1565b6020604051808303816000875af11580156112a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ca9190612064565b98975050505050505050565b60006001600160e01b031982166380ac58cd60e01b148061130757506001600160e01b03198216635b5e139f60e01b145b8061030c57506301ffc9a760e01b6001600160e01b031983161461030c565b808061133a57506001600160a01b03821615155b156113fc57600061134a84610d88565b90506001600160a01b038316158015906113765750826001600160a01b0316816001600160a01b031614155b801561138957506113878184610d35565b155b156113b25760405163a9fbf51f60e01b81526001600160a01b038416600482015260240161065e565b81156113fa5783856001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b5050600090815260046020526040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000828152600260205260408120546001600160a01b0390811690831615611459576114598184866115b1565b6001600160a01b0381161561149757611476600085600080611326565b6001600160a01b038116600090815260036020526040902080546000190190555b6001600160a01b038516156114c6576001600160a01b0385166000908152600360205260409020805460010190555b60008481526002602052604080822080546001600160a01b0319166001600160a01b0389811691821790925591518793918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4949350505050565b61152f8383611615565b61060b6000848484610f5c565b606061154782610d88565b50600061155f60408051602081019091526000815290565b9050600081511161157f57604051806020016040528060008152506115aa565b806115898461167a565b60405160200161159a929190611f4f565b6040516020818303038152906040525b9392505050565b6115bc83838361170d565b61060b576001600160a01b0383166115ea57604051637e27328960e01b81526004810182905260240161065e565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161065e565b6001600160a01b03821661163f57604051633250574960e11b81526000600482015260240161065e565b600061164d8383600061142c565b90506001600160a01b0381161561060b576040516339e3563760e11b81526000600482015260240161065e565b6060600061168783611770565b600101905060008167ffffffffffffffff8111156116a7576116a7611b0b565b6040519080825280601f01601f1916602001820160405280156116d1576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846116db57509392505050565b60006001600160a01b0383161580159061118e5750826001600160a01b0316846001600160a01b0316148061174757506117478484610d35565b8061118e5750506000908152600460205260409020546001600160a01b03908116911614919050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117af5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117db576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117f957662386f26fc10000830492506010015b6305f5e1008310611811576305f5e100830492506008015b612710831061182557612710830492506004015b60648310611837576064830492506002015b600a831061030c5760010192915050565b828054828255906000526020600020908101928215611883579160200282015b82811115611883578251825591602001919060010190611868565b5061188f929150611893565b5090565b5b8082111561188f5760008155600101611894565b6001600160e01b0319811681146118be57600080fd5b50565b6000602082840312156118d357600080fd5b81356115aa816118a8565b60005b838110156118f95781810151838201526020016118e1565b50506000910152565b6000815180845261191a8160208601602086016118de565b601f01601f19169290920160200192915050565b6020815260006115aa6020830184611902565b60006020828403121561195357600080fd5b5035919050565b80356001600160a01b038116811461197157600080fd5b919050565b6000806040838503121561198957600080fd5b6119928361195a565b946020939093013593505050565b6000602082840312156119b257600080fd5b6115aa8261195a565b6020808252825182820181905260009190848201906040850190845b818110156119f3578351835292840192918401916001016119d7565b50909695505050505050565b600080600060608486031215611a1457600080fd5b611a1d8461195a565b9250611a2b6020850161195a565b9150604084013590509250925092565b60c081526000611a4e60c0830189611902565b8281036020840152611a608189611902565b9150508560408301528460608301528360808301528260a0830152979650505050505050565b60008060408385031215611a9957600080fd5b611aa28361195a565b915060208301358015158114611ab757600080fd5b809150509250929050565b60008083601f840112611ad457600080fd5b50813567ffffffffffffffff811115611aec57600080fd5b602083019150836020828501011115611b0457600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611b3c57611b3c611b0b565b604051601f8501601f19908116603f01168101908282118183101715611b6457611b64611b0b565b81604052809350858152868686011115611b7d57600080fd5b858560208301376000602087830101525050509392505050565b60008060008060008060008060c0898b031215611bb357600080fd5b883567ffffffffffffffff80821115611bcb57600080fd5b611bd78c838d01611ac2565b909a50985060208b0135915080821115611bf057600080fd5b611bfc8c838d01611ac2565b909850965060408b0135955060608b0135945060808b0135935060a08b0135915080821115611c2a57600080fd5b508901601f81018b13611c3c57600080fd5b611c4b8b823560208401611b21565b9150509295985092959890939650565b60008060008060808587031215611c7157600080fd5b611c7a8561195a565b9350611c886020860161195a565b925060408501359150606085013567ffffffffffffffff811115611cab57600080fd5b8501601f81018713611cbc57600080fd5b611ccb87823560208401611b21565b91505092959194509250565b60008060008060408587031215611ced57600080fd5b843567ffffffffffffffff80821115611d0557600080fd5b611d1188838901611ac2565b90965094506020870135915080821115611d2a57600080fd5b50611d3787828801611ac2565b95989497509550505050565b60008060408385031215611d5657600080fd5b611d5f8361195a565b9150611d6d6020840161195a565b90509250929050565b600181811c90821680611d8a57607f821691505b602082108103611daa57634e487b7160e01b600052602260045260246000fd5b50919050565b600060018201611dd057634e487b7160e01b600052601160045260246000fd5b5060010190565b601f82111561060b57600081815260208120601f850160051c81016020861015611dfe5750805b601f850160051c820191505b81811015611e1d57828155600101611e0a565b505050505050565b815167ffffffffffffffff811115611e3f57611e3f611b0b565b611e5381611e4d8454611d76565b84611dd7565b602080601f831160018114611e885760008415611e705750858301515b600019600386901b1c1916600185901b178555611e1d565b600085815260208120601f198616915b82811015611eb757888601518255948401946001909101908401611e98565b5085821015611ed55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8183823760009101908152919050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611f2890830184611902565b9695505050505050565b600060208284031215611f4457600080fd5b81516115aa816118a8565b60008351611f618184602088016118de565b835190830190611f758183602088016118de565b01949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b606081526000611fbb606083018789611f7e565b8281036020840152611fce818688611f7e565b9150508260408301529695505050505050565b60208152815160208201526000602083015160408084015260018060a01b03815116606084015267ffffffffffffffff60208201511660808401526040810151151560a0840152606081015160c0840152608081015160c060e085015261204c610120850182611902565b905060a0820151610100850152809250505092915050565b60006020828403121561207657600080fd5b505191905056fea26469706673582212204f6e5fbb976cf5f2d01d3e73bd546b071f3d2565e24be8e0b4ec00d50e37890264736f6c63430008150033",
    "sourceMap": "479:8437:54:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8731:183;;;;;;:::i;:::-;;:::i;:::-;;;565:14:56;;558:22;540:41;;528:2;513:18;8731:183:54;;;;;;;;2365:89:33;;;:::i;:::-;;;;;;;:::i;3497:154::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;1697:32:56;;;1679:51;;1667:2;1652:18;3497:154:33;1533:203:56;3323:113:33;;;;;;:::i;:::-;;:::i;:::-;;2771:115:54;;;;;;:::i;:::-;-1:-1:-1;;;;;2857:22:54;2831:7;2857:22;;;:16;:22;;;;;;;2771:115;;;;2515:25:56;;;2503:2;2488:18;2771:115:54;2369:177:56;4453:261:54;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;7756:308::-;;;;;;:::i;:::-;;:::i;4787:132:33:-;;;;;;:::i;:::-;;:::i;2185:118::-;;;;;;:::i;:::-;;:::i;1920:208::-;;;;;;:::i;:::-;;:::i;3447:813:54:-;;;:::i;:::-;;;;;;;;;;;;:::i;2518:93:33:-;;;:::i;3718:144::-;;;;;;:::i;:::-;;:::i;5282:937:54:-;;;;;;:::i;:::-;;:::i;4985:208:33:-;;;;;;:::i;:::-;;:::i;8286:167:54:-;;;;;;:::i;:::-;;:::i;6565:804::-;;;;;;:::i;:::-;;:::i;3928:153:33:-;;;;;;:::i;:::-;;:::i;474:34:53:-;;;;;8731:183:54;8848:4;8871:36;8895:11;8871:23;:36::i;:::-;8864:43;8731:183;-1:-1:-1;;8731:183:54:o;2365:89:33:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;-1:-1:-1;6008:7:33;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:33;3623:21;5938:127;3323:113;3394:35;3403:2;3407:7;735:10:39;3394:8:33;:35::i;:::-;3323:113;;:::o;4453:261:54:-;-1:-1:-1;;;;;4579:22:54;;4558:18;4579:22;;;:16;:22;;;;;;;;;4638:28;;;:16;:28;;;;;;4611:55;;;;;;;;;;4523:23;;4558:18;4611:55;4638:28;4611:55;;4638:28;;4611:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4611:55:54;;;;-1:-1:-1;;;4683:24:54;;;;4453:261;-1:-1:-1;;;;4453:261:54:o;7756:308::-;-1:-1:-1;;;;;7898:18:54;;;;;;:38;;-1:-1:-1;;;;;;7920:16:54;;;;7898:38;7894:117;;;7959:41;;-1:-1:-1;;;7959:41:54;;;;;;;;;;;7894:117;8020:37;8039:4;8045:2;8049:7;8020:18;:37::i;:::-;7756:308;;;:::o;4787:132:33:-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;1920:208::-;1983:7;-1:-1:-1;;;;;2006:19:33;;2002:87;;2048:30;;-1:-1:-1;;;2048:30:33;;2075:1;2048:30;;;1679:51:56;1652:18;;2048:30:33;;;;;;;;2002:87;-1:-1:-1;;;;;;2105:16:33;;;;;:9;:16;;;;;;;1920:208::o;3447:813:54:-;3799:10;3602:19;3782:28;;;:16;:28;;;;;;3530:18;;;;3602:19;;;;;;3824:15;;;3820:85;;3862:32;;-1:-1:-1;;;3862:32:54;;;;;;;;;;;3820:85;3914:24;3941:28;;;:16;:28;;;;;;3914:55;;;;;;;;;;;;3941:28;;3914:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3914:55:54;;;;-1:-1:-1;;3986:13:54;;4024:21;;;;4069:20;;;;4111:18;;;;4162:29;;;;4224;;;;;3986:13;;4024:21;;-1:-1:-1;4069:20:54;;-1:-1:-1;4111:18:54;-1:-1:-1;4162:29:54;;-1:-1:-1;4224:29:54;-1:-1:-1;3447:813:54;;-1:-1:-1;;;;3447:813:54:o;2518:93:33:-;2565:13;2597:7;2590:14;;;;;:::i;3718:144::-;3803:52;735:10:39;3836:8:33;3846;3803:18;:52::i;5282:937:54:-;5555:10;5538:28;;;;:16;:28;;;;;;:33;5534:107;;5594:36;;-1:-1:-1;;;5594:36:54;;;;;;;;;;;5534:107;5650:15;5670:12;;5668:14;;;;;:::i;:::-;;;;;-1:-1:-1;5720:326:54;;;;;;;;;;;;;;;;;;;;;;;;;5668:14;;-1:-1:-1;5720:326:54;;;5749:5;;;;;;5720:326;;5749:5;;;;5720:326;;;;;;;;;-1:-1:-1;;;5720:326:54;;;-1:-1:-1;5720:326:54;;;;;;;;;;;;;;;;;;;;;;;;;;;5782:13;;;;;;5720:326;;5782:13;;;;5720:326;;;;;;;;-1:-1:-1;5720:326:54;;;-1:-1:-1;;;5720:326:54;;;;;;;5859:15;5720:326;;;;;;;;;;;;;;;;;;;;6019:16;;;;;;;;;;5720:326;;;;;;;;5692:25;;;:16;:25;;;:354;;:25;;:354;;:25;:354;:::i;:::-;-1:-1:-1;5692:354:54;;;;;;;;;;;;:::i;:::-;-1:-1:-1;5692:354:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;6073:10:54;6056:28;;;;:16;:28;;;;;:38;;;6104:30;;-1:-1:-1;6087:7:54;6104:9;:30::i;:::-;6144:26;6157:7;6166:3;6144:12;:26::i;:::-;6185:27;;6201:10;1679:51:56;;6185:27:54;;1667:2:56;1652:18;6185:27:54;;;;;;;5524:695;5282:937;;;;;;;;:::o;4985:208:33:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;8286:167:54:-;8391:13;8423:23;8438:7;8423:14;:23::i;6565:804::-;6743:10;6671:22;6726:28;;;:16;:28;;;;;;;;;6791;;;:16;:28;;;;;;6764:55;;;;;;;;;;6671:22;;6764:55;6791:28;6764:55;;6791:28;;6764:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6833:10;6847:1;6833:15;6829:85;;6871:32;;-1:-1:-1;;;6871:32:54;;;;;;;;;;;6829:85;6969:13;;6963:27;6941:49;;;;6940:126;;-1:-1:-1;7050:13:54;;7034:31;;;;;;;7008:22;;;;7024:4;;;;7008:22;:::i;:::-;;;;;;;;:57;;6940:126;6923:216;;;7098:30;;-1:-1:-1;;;7098:30:54;;;;;;;;;;;6923:216;7165:122;7199:10;7223:4;;7241:7;;7262:15;7165:20;:122::i;:::-;7297:28;;;;:16;:28;;;;;;;:44;;:65;;;;;;;;;;;;;;;;;;-1:-1:-1;7148:139:54;6565:804;-1:-1:-1;;;;;6565:804:54:o;3928:153:33:-;-1:-1:-1;;;;;4039:25:33;;;4016:4;4039:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;3928:153::o;937:207:36:-;1039:4;-1:-1:-1;;;;;;1062:35:36;;-1:-1:-1;;;1062:35:36;;:75;;;1101:36;1125:11;1101:23;:36::i;16138:241:33:-;16201:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:33;;16263:88;;16309:31;;-1:-1:-1;;;16309:31:33;;;;;2515:25:56;;;2488:18;;16309:31:33;2369:177:56;14418:120:33;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;4143:578::-;-1:-1:-1;;;;;4237:16:33;;4233:87;;4276:33;;-1:-1:-1;;;4276:33:33;;4306:1;4276:33;;;1679:51:56;1652:18;;4276:33:33;1533:203:56;4233:87:33;4538:21;4562:34;4570:2;4574:7;735:10:39;4562:7:33;:34::i;:::-;4538:58;;4627:4;-1:-1:-1;;;;;4610:21:33;:13;-1:-1:-1;;;;;4610:21:33;;4606:109;;4654:50;;-1:-1:-1;;;4654:50:33;;-1:-1:-1;;;;;12138:15:56;;;4654:50:33;;;12120:34:56;12170:18;;;12163:34;;;12233:15;;12213:18;;;12206:43;12055:18;;4654:50:33;11880:375:56;15591:312:33;-1:-1:-1;;;;;15698:22:33;;15694:91;;15743:31;;-1:-1:-1;;;15743:31:33;;-1:-1:-1;;;;;1697:32:56;;15743:31:33;;;1679:51:56;1652:18;;15743:31:33;1533:203:56;15694:91:33;-1:-1:-1;;;;;15794:25:33;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;15794:46:33;;;;;;;;;;15855:41;;540::56;;;15855::33;;513:18:56;15855:41:33;;;;;;;15591:312;;;:::o;10633:100::-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;1922:167:36:-;2013:19;;;;:10;:19;;;;;:31;2035:9;2013:19;:31;:::i;:::-;-1:-1:-1;2059:23:36;;2515:25:56;;;2059:23:36;;2503:2:56;2488:18;2059:23:36;;;;;;;1922:167;;:::o;16918:782:33:-;-1:-1:-1;;;;;17034:14:33;;;:18;17030:664;;17072:71;;-1:-1:-1;;;17072:71:33;;-1:-1:-1;;;;;17072:36:33;;;;;:71;;735:10:39;;17123:4:33;;17129:7;;17138:4;;17072:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17072:71:33;;;;;;;;-1:-1:-1;;17072:71:33;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17381:6;:13;17398:1;17381:18;17377:293;;17430:25;;-1:-1:-1;;;17430:25:33;;-1:-1:-1;;;;;1697:32:56;;17430:25:33;;;1679:51:56;1652:18;;17430:25:33;1533:203:56;17377:293:33;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;-1:-1:-1;;;;;;17190:51:33;;-1:-1:-1;;;17190:51:33;17186:130;;17272:25;;-1:-1:-1;;;17272:25:33;;-1:-1:-1;;;;;1697:32:56;;17272:25:33;;;1679:51:56;1652:18;;17272:25:33;1533:203:56;17186:130:33;17144:186;16918:782;;;;:::o;1210:593:36:-;1283:13;1308:22;1322:7;1308:13;:22::i;:::-;-1:-1:-1;1341:23:36;1367:19;;;:10;:19;;;;;1341:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1396:18;1417:10;3250:9:33;;;;;;;;;-1:-1:-1;3250:9:33;;;3174:92;1417:10:36;1396:31;;1506:4;1500:18;1522:1;1500:23;1496:70;;-1:-1:-1;1546:9:36;1210:593;-1:-1:-1;;1210:593:36:o;1496:70::-;1665:23;;:27;1661:95;;1729:4;1735:9;1715:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1708:37;;;;1210:593;;;:::o;1661:95::-;1773:23;1788:7;1773:14;:23::i;:::-;1766:30;1210:593;-1:-1:-1;;;;1210:593:36:o;1084:694:53:-;1256:7;1275:22;1300:4;-1:-1:-1;;;;;1300:11:53;;1325:405;;;;;;;;1370:9;1325:405;;;;1403:312;;;;;;;;1459:10;-1:-1:-1;;;;;1403:312:53;;;;;240:1:0;1403:312:53;;;;;;1558:5;1403:312;;;;;;138:1:0;1593:9:53;;1403:312;;;;1641:4;;1647:7;;1656:9;1630:36;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1403:312;;;;1695:1;1403:312;;;1325:405;;;1300:440;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1275:465;1084:694;-1:-1:-1;;;;;;;;1084:694:53:o;1561:300:33:-;1663:4;-1:-1:-1;;;;;;1698:40:33;;-1:-1:-1;;;1698:40:33;;:104;;-1:-1:-1;;;;;;;1754:48:33;;-1:-1:-1;;;1754:48:33;1698:104;:156;;;-1:-1:-1;;;;;;;;;;861:40:47;;;1818:36:33;762:146:47;14720:662:33;14880:9;:31;;;-1:-1:-1;;;;;;14893:18:33;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;-1:-1:-1;;;;;;15093:18:33;;;;;;:35;;;15124:4;-1:-1:-1;;;;;15115:13:33;:5;-1:-1:-1;;;;;15115:13:33;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15189:27;;-1:-1:-1;;;15189:27:33;;-1:-1:-1;;;;;1697:32:56;;15189:27:33;;;1679:51:56;1652:18;;15189:27:33;1533:203:56;15089:142:33;15249:9;15245:81;;;15303:7;15299:2;-1:-1:-1;;;;;15283:28:33;15292:5;-1:-1:-1;;;;;15283:28:33;;;;;;;;;;;15245:81;14913:423;14876:460;-1:-1:-1;;15346:24:33;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15346:29:33;-1:-1:-1;;;;;15346:29:33;;;;;;;;;;14720:662::o;8838:795::-;8924:7;5799:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5799:16:33;;;;9035:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;-1:-1:-1;;;;;9161:18:33;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;-1:-1:-1;;;;;9368:15:33;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;9368:20:33;;;9157:256;-1:-1:-1;;;;;9427:16:33;;;9423:107;;-1:-1:-1;;;;;9487:13:33;;;;;;:9;:13;;;;;:18;;9504:1;9487:18;;;9423:107;9540:16;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9540:21:33;-1:-1:-1;;;;;9540:21:33;;;;;;;;;9577:27;;9540:16;;9577:27;;;;;;;9622:4;8838:795;-1:-1:-1;;;;8838:795:33:o;10954:182::-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;3250:9;;;;;;;;;-1:-1:-1;3250:9:33;;;3174:92;2823:10;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;2677:255;-1:-1:-1;;;2677:255:33:o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;-1:-1:-1;;;;;7252:19:33;;7248:186;;7298:31;;-1:-1:-1;;;7298:31:33;;;;;2515:25:56;;;2488:18;;7298:31:33;2369:177:56;7248:186:33;7375:44;;-1:-1:-1;;;7375:44:33;;-1:-1:-1;;;;;15627:32:56;;7375:44:33;;;15609:51:56;15676:18;;;15669:34;;;15582:18;;7375:44:33;15435:274:56;9955:327:33;-1:-1:-1;;;;;10022:16:33;;10018:87;;10061:33;;-1:-1:-1;;;10061:33:33;;10091:1;10061:33;;;1679:51:56;1652:18;;10061:33:33;1533:203:56;10018:87:33;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;-1:-1:-1;;;;;;10184:27:33;;;10180:96;;10234:31;;-1:-1:-1;;;10234:31:33;;10262:1;10234:31;;;1679:51:56;1652:18;;10234:31:33;1533:203:56;637:698:42;693:13;742:14;759:17;770:5;759:10;:17::i;:::-;779:1;759:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;817:18:42;-1:-1:-1;794:41:42;-1:-1:-1;955:28:42;;;971:2;955:28;1010:282;-1:-1:-1;;1041:5:42;-1:-1:-1;;;1175:2:42;1164:14;;1159:32;1041:5;1146:46;1236:2;1227:11;;;-1:-1:-1;1256:21:42;1010:282;1256:21;-1:-1:-1;1312:6:42;637:698;-1:-1:-1;;;637:698:42:o;6376:272:33:-;6479:4;-1:-1:-1;;;;;6514:21:33;;;;;;:127;;;6561:7;-1:-1:-1;;;;;6552:16:33;:5;-1:-1:-1;;;;;6552:16:33;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:88;;;-1:-1:-1;;6008:7:33;6034:24;;;:15;:24;;;;;;-1:-1:-1;;;;;6034:24:33;;;6608:32;;;;6495:146;-1:-1:-1;6376:272:33:o;12214:916:49:-;12267:7;;-1:-1:-1;;;12342:17:49;;12338:103;;-1:-1:-1;;;12379:17:49;;;-1:-1:-1;12424:2:49;12414:12;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;-1:-1:-1;12540:2:49;12530:12;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;-1:-1:-1;12656:2:49;12646:12;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;-1:-1:-1;12770:1:49;12760:11;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;-1:-1:-1;12883:1:49;12873:11;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;-1:-1:-1;12996:1:49;12986:11;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;13117:6;12214:916;-1:-1:-1;;12214:916:49:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:131:56;-1:-1:-1;;;;;;88:32:56;;78:43;;68:71;;135:1;132;125:12;68:71;14:131;:::o;150:245::-;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:56;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:56;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:56:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1348:180::-;1407:6;1460:2;1448:9;1439:7;1435:23;1431:32;1428:52;;;1476:1;1473;1466:12;1428:52;-1:-1:-1;1499:23:56;;1348:180;-1:-1:-1;1348:180:56:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:56;;1848:42;;1838:70;;1904:1;1901;1894:12;1838:70;1741:173;;;:::o;1919:254::-;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:56:o;2178:186::-;2237:6;2290:2;2278:9;2269:7;2265:23;2261:32;2258:52;;;2306:1;2303;2296:12;2258:52;2329:29;2348:9;2329:29;:::i;2551:632::-;2722:2;2774:21;;;2844:13;;2747:18;;;2866:22;;;2693:4;;2722:2;2945:15;;;;2919:2;2904:18;;;2693:4;2988:169;3002:6;2999:1;2996:13;2988:169;;;3063:13;;3051:26;;3132:15;;;;3097:12;;;;3024:1;3017:9;2988:169;;;-1:-1:-1;3174:3:56;;2551:632;-1:-1:-1;;;;;;2551:632:56:o;3188:328::-;3265:6;3273;3281;3334:2;3322:9;3313:7;3309:23;3305:32;3302:52;;;3350:1;3347;3340:12;3302:52;3373:29;3392:9;3373:29;:::i;:::-;3363:39;;3421:38;3455:2;3444:9;3440:18;3421:38;:::i;:::-;3411:48;;3506:2;3495:9;3491:18;3478:32;3468:42;;3188:328;;;;;:::o;3521:671::-;3830:3;3819:9;3812:22;3793:4;3857:46;3898:3;3887:9;3883:19;3875:6;3857:46;:::i;:::-;3951:9;3943:6;3939:22;3934:2;3923:9;3919:18;3912:50;3979:33;4005:6;3997;3979:33;:::i;:::-;3971:41;;;4048:6;4043:2;4032:9;4028:18;4021:34;4091:6;4086:2;4075:9;4071:18;4064:34;4135:6;4129:3;4118:9;4114:19;4107:35;4179:6;4173:3;4162:9;4158:19;4151:35;3521:671;;;;;;;;;:::o;4197:347::-;4262:6;4270;4323:2;4311:9;4302:7;4298:23;4294:32;4291:52;;;4339:1;4336;4329:12;4291:52;4362:29;4381:9;4362:29;:::i;:::-;4352:39;;4441:2;4430:9;4426:18;4413:32;4488:5;4481:13;4474:21;4467:5;4464:32;4454:60;;4510:1;4507;4500:12;4454:60;4533:5;4523:15;;;4197:347;;;;;:::o;4549:348::-;4601:8;4611:6;4665:3;4658:4;4650:6;4646:17;4642:27;4632:55;;4683:1;4680;4673:12;4632:55;-1:-1:-1;4706:20:56;;4749:18;4738:30;;4735:50;;;4781:1;4778;4771:12;4735:50;4818:4;4810:6;4806:17;4794:29;;4870:3;4863:4;4854:6;4846;4842:19;4838:30;4835:39;4832:59;;;4887:1;4884;4877:12;4832:59;4549:348;;;;;:::o;4902:127::-;4963:10;4958:3;4954:20;4951:1;4944:31;4994:4;4991:1;4984:15;5018:4;5015:1;5008:15;5034:632;5099:5;5129:18;5170:2;5162:6;5159:14;5156:40;;;5176:18;;:::i;:::-;5251:2;5245:9;5219:2;5305:15;;-1:-1:-1;;5301:24:56;;;5327:2;5297:33;5293:42;5281:55;;;5351:18;;;5371:22;;;5348:46;5345:72;;;5397:18;;:::i;:::-;5437:10;5433:2;5426:22;5466:6;5457:15;;5496:6;5488;5481:22;5536:3;5527:6;5522:3;5518:16;5515:25;5512:45;;;5553:1;5550;5543:12;5512:45;5603:6;5598:3;5591:4;5583:6;5579:17;5566:44;5658:1;5651:4;5642:6;5634;5630:19;5626:30;5619:41;;;;5034:632;;;;;:::o;5671:1257::-;5809:6;5817;5825;5833;5841;5849;5857;5865;5918:3;5906:9;5897:7;5893:23;5889:33;5886:53;;;5935:1;5932;5925:12;5886:53;5975:9;5962:23;6004:18;6045:2;6037:6;6034:14;6031:34;;;6061:1;6058;6051:12;6031:34;6100:59;6151:7;6142:6;6131:9;6127:22;6100:59;:::i;:::-;6178:8;;-1:-1:-1;6074:85:56;-1:-1:-1;6266:2:56;6251:18;;6238:32;;-1:-1:-1;6282:16:56;;;6279:36;;;6311:1;6308;6301:12;6279:36;6350:61;6403:7;6392:8;6381:9;6377:24;6350:61;:::i;:::-;6430:8;;-1:-1:-1;6324:87:56;-1:-1:-1;6512:2:56;6497:18;;6484:32;;-1:-1:-1;6563:2:56;6548:18;;6535:32;;-1:-1:-1;6614:3:56;6599:19;;6586:33;;-1:-1:-1;6672:3:56;6657:19;;6644:33;;-1:-1:-1;6689:16:56;;;6686:36;;;6718:1;6715;6708:12;6686:36;-1:-1:-1;6741:24:56;;6796:4;6788:13;;6784:27;-1:-1:-1;6774:55:56;;6825:1;6822;6815:12;6774:55;6848:74;6914:7;6909:2;6896:16;6891:2;6887;6883:11;6848:74;:::i;:::-;6838:84;;;5671:1257;;;;;;;;;;;:::o;6933:667::-;7028:6;7036;7044;7052;7105:3;7093:9;7084:7;7080:23;7076:33;7073:53;;;7122:1;7119;7112:12;7073:53;7145:29;7164:9;7145:29;:::i;:::-;7135:39;;7193:38;7227:2;7216:9;7212:18;7193:38;:::i;:::-;7183:48;;7278:2;7267:9;7263:18;7250:32;7240:42;;7333:2;7322:9;7318:18;7305:32;7360:18;7352:6;7349:30;7346:50;;;7392:1;7389;7382:12;7346:50;7415:22;;7468:4;7460:13;;7456:27;-1:-1:-1;7446:55:56;;7497:1;7494;7487:12;7446:55;7520:74;7586:7;7581:2;7568:16;7563:2;7559;7555:11;7520:74;:::i;:::-;7510:84;;;6933:667;;;;;;;:::o;7605:721::-;7697:6;7705;7713;7721;7774:2;7762:9;7753:7;7749:23;7745:32;7742:52;;;7790:1;7787;7780:12;7742:52;7830:9;7817:23;7859:18;7900:2;7892:6;7889:14;7886:34;;;7916:1;7913;7906:12;7886:34;7955:59;8006:7;7997:6;7986:9;7982:22;7955:59;:::i;:::-;8033:8;;-1:-1:-1;7929:85:56;-1:-1:-1;8121:2:56;8106:18;;8093:32;;-1:-1:-1;8137:16:56;;;8134:36;;;8166:1;8163;8156:12;8134:36;;8205:61;8258:7;8247:8;8236:9;8232:24;8205:61;:::i;:::-;7605:721;;;;-1:-1:-1;8285:8:56;-1:-1:-1;;;;7605:721:56:o;8513:260::-;8581:6;8589;8642:2;8630:9;8621:7;8617:23;8613:32;8610:52;;;8658:1;8655;8648:12;8610:52;8681:29;8700:9;8681:29;:::i;:::-;8671:39;;8729:38;8763:2;8752:9;8748:18;8729:38;:::i;:::-;8719:48;;8513:260;;;;;:::o;8778:380::-;8857:1;8853:12;;;;8900;;;8921:61;;8975:4;8967:6;8963:17;8953:27;;8921:61;9028:2;9020:6;9017:14;8997:18;8994:38;8991:161;;9074:10;9069:3;9065:20;9062:1;9055:31;9109:4;9106:1;9099:15;9137:4;9134:1;9127:15;8991:161;;8778:380;;;:::o;9163:232::-;9202:3;9223:17;;;9220:140;;9282:10;9277:3;9273:20;9270:1;9263:31;9317:4;9314:1;9307:15;9345:4;9342:1;9335:15;9220:140;-1:-1:-1;9387:1:56;9376:13;;9163:232::o;9526:545::-;9628:2;9623:3;9620:11;9617:448;;;9664:1;9689:5;9685:2;9678:17;9734:4;9730:2;9720:19;9804:2;9792:10;9788:19;9785:1;9781:27;9775:4;9771:38;9840:4;9828:10;9825:20;9822:47;;;-1:-1:-1;9863:4:56;9822:47;9918:2;9913:3;9909:12;9906:1;9902:20;9896:4;9892:31;9882:41;;9973:82;9991:2;9984:5;9981:13;9973:82;;;10036:17;;;10017:1;10006:13;9973:82;;;9977:3;;;9526:545;;;:::o;10247:1352::-;10373:3;10367:10;10400:18;10392:6;10389:30;10386:56;;;10422:18;;:::i;:::-;10451:97;10541:6;10501:38;10533:4;10527:11;10501:38;:::i;:::-;10495:4;10451:97;:::i;:::-;10603:4;;10667:2;10656:14;;10684:1;10679:663;;;;11386:1;11403:6;11400:89;;;-1:-1:-1;11455:19:56;;;11449:26;11400:89;-1:-1:-1;;10204:1:56;10200:11;;;10196:24;10192:29;10182:40;10228:1;10224:11;;;10179:57;11502:81;;10649:944;;10679:663;9473:1;9466:14;;;9510:4;9497:18;;-1:-1:-1;;10715:20:56;;;10833:236;10847:7;10844:1;10841:14;10833:236;;;10936:19;;;10930:26;10915:42;;11028:27;;;;10996:1;10984:14;;;;10863:19;;10833:236;;;10837:3;11097:6;11088:7;11085:19;11082:201;;;11158:19;;;11152:26;-1:-1:-1;;11241:1:56;11237:14;;;11253:3;11233:24;11229:37;11225:42;11210:58;11195:74;;11082:201;-1:-1:-1;;;;;11329:1:56;11313:14;;;11309:22;11296:36;;-1:-1:-1;10247:1352:56:o;11604:271::-;11787:6;11779;11774:3;11761:33;11743:3;11813:16;;11838:13;;;11813:16;11604:271;-1:-1:-1;11604:271:56:o;12260:489::-;-1:-1:-1;;;;;12529:15:56;;;12511:34;;12581:15;;12576:2;12561:18;;12554:43;12628:2;12613:18;;12606:34;;;12676:3;12671:2;12656:18;;12649:31;;;12454:4;;12697:46;;12723:19;;12715:6;12697:46;:::i;:::-;12689:54;12260:489;-1:-1:-1;;;;;;12260:489:56:o;12754:249::-;12823:6;12876:2;12864:9;12855:7;12851:23;12847:32;12844:52;;;12892:1;12889;12882:12;12844:52;12924:9;12918:16;12943:30;12967:5;12943:30;:::i;13008:496::-;13187:3;13225:6;13219:13;13241:66;13300:6;13295:3;13288:4;13280:6;13276:17;13241:66;:::i;:::-;13370:13;;13329:16;;;;13392:70;13370:13;13329:16;13439:4;13427:17;;13392:70;:::i;:::-;13478:20;;13008:496;-1:-1:-1;;;;13008:496:56:o;13509:267::-;13598:6;13593:3;13586:19;13650:6;13643:5;13636:4;13631:3;13627:14;13614:43;-1:-1:-1;13702:1:56;13677:16;;;13695:4;13673:27;;;13666:38;;;;13758:2;13737:15;;;-1:-1:-1;;13733:29:56;13724:39;;;13720:50;;13509:267::o;13781:508::-;14026:2;14015:9;14008:21;13989:4;14052:62;14110:2;14099:9;14095:18;14087:6;14079;14052:62;:::i;:::-;14162:9;14154:6;14150:22;14145:2;14134:9;14130:18;14123:50;14190;14233:6;14225;14217;14190:50;:::i;:::-;14182:58;;;14276:6;14271:2;14260:9;14256:18;14249:34;13781:508;;;;;;;;:::o;14294:947::-;14495:2;14484:9;14477:21;14540:6;14534:13;14529:2;14518:9;14514:18;14507:41;14458:4;14595:2;14587:6;14583:15;14577:22;14637:4;14630;14619:9;14615:20;14608:34;14720:1;14716;14711:3;14707:11;14703:19;14688:12;14682:19;14678:45;14673:2;14662:9;14658:18;14651:73;14795:18;14789:2;14775:12;14771:21;14765:28;14761:53;14755:3;14744:9;14740:19;14733:82;14890:4;14876:12;14872:23;14866:30;14859:38;14852:46;14846:3;14835:9;14831:19;14824:75;14961:2;14947:12;14943:21;14937:28;14930:4;14919:9;14915:20;14908:58;15021:3;15007:12;15003:22;14997:29;15063:4;15057:3;15046:9;15042:19;15035:33;15091:54;15140:3;15129:9;15125:19;15109:14;15091:54;:::i;:::-;15077:68;;15206:3;15192:12;15188:22;15182:29;15176:3;15165:9;15161:19;15154:58;15229:6;15221:14;;;;14294:947;;;;:::o;15246:184::-;15316:6;15369:2;15357:9;15348:7;15344:23;15340:32;15337:52;;;15385:1;15382;15375:12;15337:52;-1:-1:-1;15408:16:56;;15246:184;-1:-1:-1;15246:184:56:o",
    "linkReferences": {},
    "immutableReferences": {
      "50934": [
        {
          "start": 735,
          "length": 32
        },
        {
          "start": 4565,
          "length": 32
        }
      ],
      "50937": [
        {
          "start": 4507,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "createPassport(string,string,uint256,uint256,uint256,string)": "b05e5158",
    "createStamp(string,string)": "e201100d",
    "getApproved(uint256)": "081812fc",
    "getPassport()": "8eb20b0b",
    "getPassportId(address)": "10a943cf",
    "getStamps(address)": "1a371932",
    "isApprovedForAll(address,address)": "e985e9c5",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "schemaUID()": "f3de0506",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.21+commit.d9974bed\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"eas\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"schemaUID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PassportNFT__DetailsMismatch\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PassportNFT__PassportAlreadyMinted\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PassportNFT__PassportCannotBeTransfered\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PassportNFT__PassportNotMinted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"PassportCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_placeOfBirth\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_socialSecurityNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_driversLicenceNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"createPassport\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"country\",\"type\":\"string\"}],\"name\":\"createStamp\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"attestationUID\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPassport\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"placeOfBirth\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dateOfBirth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"issueDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"socialSecurityNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"driversLicenceNumber\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getPassportId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getStamps\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"stamps\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"schemaUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Inherits from ERC721, ERC721URIStorage, and AttestStamp.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"PassportNFT__PassportCannotBeTransfered()\":[{\"details\":\"Passports cannot be transferred.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"PassportCreated(address)\":{\"params\":{\"user\":\"@notice This event is emitted when a new Passport is created.\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"createPassport(string,string,uint256,uint256,uint256,string)\":{\"details\":\"Only allows creating a passport if the sender has not created one before.\",\"params\":{\"_dateOfBirth\":\"Date of birth of the passport holder.\",\"_driversLicenceNumber\":\"Driver's License Number of the passport holder.\",\"_name\":\"Name of the passport holder.\",\"_placeOfBirth\":\"Place of birth of the passport holder.\",\"_socialSecurityNumber\":\"Social Security Number of the passport holder.\",\"uri\":\"Token URI for the new passport NFT.\"}},\"createStamp(string,string)\":{\"details\":\"Reverts if the user does not have a passport or if the details do not match.\",\"params\":{\"country\":\"Country where the passport holder is visiting.\",\"name\":\"Name of the passport holder.\"},\"returns\":{\"attestationUID\":\"The UID of the stamp attestation.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getPassport()\":{\"details\":\"Reverts if the user does not have a passport.\",\"returns\":{\"dateOfBirth\":\"The date of birth of the passport holder.\",\"driversLicenceNumber\":\"The Driver's License Number of the passport holder.\",\"issueDate\":\"The issue date of the passport.\",\"name\":\"The name of the passport holder.\",\"placeOfBirth\":\"The place of birth of the passport holder.\",\"socialSecurityNumber\":\"The Social Security Number of the passport holder.\"}},\"getPassportId(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"_0\":\"The passport ID.\"}},\"getStamps(address)\":{\"params\":{\"user\":\"The address of the user.\"},\"returns\":{\"stamps\":\"An array of the attestation stamps.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"Overrides the supportsInterface function in the ERC721 contract.\",\"params\":{\"interfaceId\":\"The ID of the interface.\"},\"returns\":{\"_0\":\"A boolean indicating if the interface is supported.\"}},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"Overrides the tokenURI function in the ERC721 contract.\",\"params\":{\"tokenId\":\"The ID of the token.\"},\"returns\":{\"_0\":\"The token URI.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Overrides the transferFrom function in the ERC721 contract. Reverts if the sender and recipient are not the zero address.\",\"params\":{\"from\":\"The address to transfer the token from.\",\"to\":\"The address to transfer the token to.\",\"tokenId\":\"The ID of the token to transfer.\"}}},\"stateVariables\":{\"_nextTokenId\":{\"details\":\"Stores the ID to be assigned to the next Passport NFT that gets minted.\"},\"passportIdToUser\":{\"details\":\"Mapping from Passport IDs to their corresponding Passport details.\"},\"userToPassportId\":{\"details\":\"Mapping from user addresses to their Passport IDs.\"}},\"title\":\"PassportNFT\",\"version\":1},\"userdoc\":{\"errors\":{\"PassportNFT__DetailsMismatch()\":[{\"notice\":\"This error is emitted when the details of a Passport NFT don't match the expected details.\"}],\"PassportNFT__PassportAlreadyMinted()\":[{\"notice\":\"This error is emitted when a Passport NFT is attempted to be minted by a user who already owns a Passport NFT.\"}],\"PassportNFT__PassportCannotBeTransfered()\":[{\"notice\":\"This error is emitted when a transfer of a Passport NFT is attempted.\"}],\"PassportNFT__PassportNotMinted()\":[{\"notice\":\"This error is emitted when an operation is attempted on a Passport NFT that hasn't been minted yet.\"}]},\"kind\":\"user\",\"methods\":{\"createPassport(string,string,uint256,uint256,uint256,string)\":{\"notice\":\"Creates a new Passport NFT for the sender.\"},\"createStamp(string,string)\":{\"notice\":\"Grants a stamp to the passport holder.\"},\"getPassport()\":{\"notice\":\"Returns the passport details for a user.\"},\"getPassportId(address)\":{\"notice\":\"Returns the passport ID associated with a user.\"},\"getStamps(address)\":{\"notice\":\"Returns the attestation stamps for a user's passport.\"},\"supportsInterface(bytes4)\":{\"notice\":\"Checks if the contract supports an interface.\"},\"tokenURI(uint256)\":{\"notice\":\"Returns the token URI for a given token ID.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers a token from one address to another.\"}},\"notice\":\"This contract creates, manages, and transfers Passport Non-Fungible Tokens (NFTs).\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PassportNFT.sol\":\"PassportNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ethereum-attestation-service/=lib/eas-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eas-contracts/=lib/eas-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/eas-contracts/contracts/Common.sol\":{\"keccak256\":\"0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d\",\"dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc\"]},\"lib/eas-contracts/contracts/IEAS.sol\":{\"keccak256\":\"0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1\",\"dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4\"]},\"lib/eas-contracts/contracts/ISchemaRegistry.sol\":{\"keccak256\":\"0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517\",\"dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp\"]},\"lib/eas-contracts/contracts/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d\",\"dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867\",\"dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/AttestStamp.sol\":{\"keccak256\":\"0x331e9cefa48e4c3dda2d2f981bacba3563c1100b2ebf18acdaeb45fb7d5b7394\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f23439c79c0be3be361d8a4d40f6a2656a887c556e92d55ec78518e430811e7\",\"dweb:/ipfs/QmaPk4Bz1GVaeZivaEd3sZofTQh2mp8e4TuB1mMmvidG3p\"]},\"src/PassportNFT.sol\":{\"keccak256\":\"0x919cc4be091af8a8b43031eccc090ca4415dec08bc580d3d4025247d0e367267\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f5cba63cf098362268d3571f39d0b0bdfb963072b9a983b2d76fa628556d28e\",\"dweb:/ipfs/QmQ5auBUZNjAFg77bozeZXzChpssps34vovP45dxYAh58w\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.21+commit.d9974bed"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "eas",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "schemaUID",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PassportNFT__DetailsMismatch"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PassportNFT__PassportAlreadyMinted"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PassportNFT__PassportCannotBeTransfered"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "PassportNFT__PassportNotMinted"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_fromTokenId",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_toTokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BatchMetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MetadataUpdate",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PassportCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_placeOfBirth",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_dateOfBirth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_socialSecurityNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_driversLicenceNumber",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "uri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createPassport"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "country",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createStamp",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "attestationUID",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getPassport",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "placeOfBirth",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dateOfBirth",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "issueDate",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "socialSecurityNumber",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "driversLicenceNumber",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getPassportId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getStamps",
          "outputs": [
            {
              "internalType": "bytes32[]",
              "name": "stamps",
              "type": "bytes32[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "schemaUID",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "createPassport(string,string,uint256,uint256,uint256,string)": {
            "details": "Only allows creating a passport if the sender has not created one before.",
            "params": {
              "_dateOfBirth": "Date of birth of the passport holder.",
              "_driversLicenceNumber": "Driver's License Number of the passport holder.",
              "_name": "Name of the passport holder.",
              "_placeOfBirth": "Place of birth of the passport holder.",
              "_socialSecurityNumber": "Social Security Number of the passport holder.",
              "uri": "Token URI for the new passport NFT."
            }
          },
          "createStamp(string,string)": {
            "details": "Reverts if the user does not have a passport or if the details do not match.",
            "params": {
              "country": "Country where the passport holder is visiting.",
              "name": "Name of the passport holder."
            },
            "returns": {
              "attestationUID": "The UID of the stamp attestation."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "getPassport()": {
            "details": "Reverts if the user does not have a passport.",
            "returns": {
              "dateOfBirth": "The date of birth of the passport holder.",
              "driversLicenceNumber": "The Driver's License Number of the passport holder.",
              "issueDate": "The issue date of the passport.",
              "name": "The name of the passport holder.",
              "placeOfBirth": "The place of birth of the passport holder.",
              "socialSecurityNumber": "The Social Security Number of the passport holder."
            }
          },
          "getPassportId(address)": {
            "params": {
              "user": "The address of the user."
            },
            "returns": {
              "_0": "The passport ID."
            }
          },
          "getStamps(address)": {
            "params": {
              "user": "The address of the user."
            },
            "returns": {
              "stamps": "An array of the attestation stamps."
            }
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "Overrides the supportsInterface function in the ERC721 contract.",
            "params": {
              "interfaceId": "The ID of the interface."
            },
            "returns": {
              "_0": "A boolean indicating if the interface is supported."
            }
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "Overrides the tokenURI function in the ERC721 contract.",
            "params": {
              "tokenId": "The ID of the token."
            },
            "returns": {
              "_0": "The token URI."
            }
          },
          "transferFrom(address,address,uint256)": {
            "details": "Overrides the transferFrom function in the ERC721 contract. Reverts if the sender and recipient are not the zero address.",
            "params": {
              "from": "The address to transfer the token from.",
              "to": "The address to transfer the token to.",
              "tokenId": "The ID of the token to transfer."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createPassport(string,string,uint256,uint256,uint256,string)": {
            "notice": "Creates a new Passport NFT for the sender."
          },
          "createStamp(string,string)": {
            "notice": "Grants a stamp to the passport holder."
          },
          "getPassport()": {
            "notice": "Returns the passport details for a user."
          },
          "getPassportId(address)": {
            "notice": "Returns the passport ID associated with a user."
          },
          "getStamps(address)": {
            "notice": "Returns the attestation stamps for a user's passport."
          },
          "supportsInterface(bytes4)": {
            "notice": "Checks if the contract supports an interface."
          },
          "tokenURI(uint256)": {
            "notice": "Returns the token URI for a given token ID."
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Transfers a token from one address to another."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ethereum-attestation-service/=lib/eas-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eas-contracts/=lib/eas-contracts/contracts/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PassportNFT.sol": "PassportNFT"
      },
      "libraries": {}
    },
    "sources": {
      "lib/eas-contracts/contracts/Common.sol": {
        "keccak256": "0x957bd2e6d0d6d637f86208b135c29fbaf4412cb08e5e7a61ede16b80561bf685",
        "urls": [
          "bzz-raw://da1dc9aedbb1d4d39c46c2235918d3adfbc5741dd34a46010cf425d134e7936d",
          "dweb:/ipfs/QmWUk6bXnLaghS2riF3GTFEeURCzgYFMA5woa6AsgPwEgc"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/IEAS.sol": {
        "keccak256": "0xd5a192f0bcee5372b69b0bb746c26317a2691dd10bfa52adbd08a9b723a55036",
        "urls": [
          "bzz-raw://ca836dd01016e7198a0b8e9e79d78512eb9db86dde6afd47f727f18d9a9c33a1",
          "dweb:/ipfs/QmXLTzcLUvA52qpVRUtVvj6L73cTmHk62jGsf6JErXFxD4"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/ISchemaRegistry.sol": {
        "keccak256": "0x772b1ebcf3e5c93fecb53762e11bbdae75fcb667deea4ac21134fccfe78326e4",
        "urls": [
          "bzz-raw://734ea6ab1e3bea7d8e0d478731c3b8888347ec01601d66d3072398b8984e8517",
          "dweb:/ipfs/QmQHZM7USiV88SUucWV7wwCpURv98dDngtFcsEaEnFwdtp"
        ],
        "license": "MIT"
      },
      "lib/eas-contracts/contracts/resolver/ISchemaResolver.sol": {
        "keccak256": "0xb74b64e20b90b35004750d2c78ceb114a304975d22d71bd9a2a9de0d483f0395",
        "urls": [
          "bzz-raw://0d0a30499e28e7c4ed62f2d8a88c46623c96830cc23e04ce6e9cd0cd0b11a03d",
          "dweb:/ipfs/QmYWNWu1cn7XDSaFgiMyn2L2coud3DNiGoNrNNo8QYcdyC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724",
        "urls": [
          "bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a",
          "dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC4906.sol": {
        "keccak256": "0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44",
        "urls": [
          "bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd",
          "dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC721.sol": {
        "keccak256": "0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d",
        "urls": [
          "bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b",
          "dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
        "keccak256": "0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670",
        "urls": [
          "bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96",
          "dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x75a4ee64c68dbd5f38bddd06e664a64c8271b4caa554fb6f0607dfd672bb4bf3",
        "urls": [
          "bzz-raw://0c4e6cb30d3601e2f7af5af09e265508147cb275a8dcd99d6f7363645cc56867",
          "dweb:/ipfs/QmNgFkoXNWoUbAyw71rr1sKQ95Rj2GfvYiWg79xEYDn2NY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "src/AttestStamp.sol": {
        "keccak256": "0x331e9cefa48e4c3dda2d2f981bacba3563c1100b2ebf18acdaeb45fb7d5b7394",
        "urls": [
          "bzz-raw://6f23439c79c0be3be361d8a4d40f6a2656a887c556e92d55ec78518e430811e7",
          "dweb:/ipfs/QmaPk4Bz1GVaeZivaEd3sZofTQh2mp8e4TuB1mMmvidG3p"
        ],
        "license": "MIT"
      },
      "src/PassportNFT.sol": {
        "keccak256": "0x919cc4be091af8a8b43031eccc090ca4415dec08bc580d3d4025247d0e367267",
        "urls": [
          "bzz-raw://7f5cba63cf098362268d3571f39d0b0bdfb963072b9a983b2d76fa628556d28e",
          "dweb:/ipfs/QmQ5auBUZNjAFg77bozeZXzChpssps34vovP45dxYAh58w"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PassportNFT.sol",
    "id": 51466,
    "exportedSymbols": {
      "AttestStamp": [
        51041
      ],
      "ERC721": [
        47639
      ],
      "ERC721URIStorage": [
        47900
      ],
      "IERC721": [
        47756
      ],
      "PassportNFT": [
        51465
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8885:54",
    "nodes": [
      {
        "id": 51043,
        "nodeType": "PragmaDirective",
        "src": "32:24:54",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 51046,
        "nodeType": "ImportDirective",
        "src": "58:80:54",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51466,
        "sourceUnit": 47640,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51044,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47639,
              "src": "66:6:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 51045,
              "name": "IERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47756,
              "src": "74:7:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51048,
        "nodeType": "ImportDirective",
        "src": "139:102:54",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51466,
        "sourceUnit": 47901,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51047,
              "name": "ERC721URIStorage",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47900,
              "src": "147:16:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51050,
        "nodeType": "ImportDirective",
        "src": "242:46:54",
        "nodes": [],
        "absolutePath": "src/AttestStamp.sol",
        "file": "./AttestStamp.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51466,
        "sourceUnit": 51042,
        "symbolAliases": [
          {
            "foreign": {
              "id": 51049,
              "name": "AttestStamp",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51041,
              "src": "250:11:54",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 51465,
        "nodeType": "ContractDefinition",
        "src": "479:8437:54",
        "nodes": [
          {
            "id": 51074,
            "nodeType": "StructDefinition",
            "src": "766:512:54",
            "nodes": [],
            "canonicalName": "PassportNFT.Passport",
            "documentation": {
              "id": 51058,
              "nodeType": "StructuredDocumentation",
              "src": "547:214:54",
              "text": " @title Passport\n @notice This struct represents a Passport with all necessary details.\n @dev It includes details like name, place of birth, date of birth, social security number, etc."
            },
            "members": [
              {
                "constant": false,
                "id": 51060,
                "mutability": "mutable",
                "name": "name",
                "nameLocation": "799:4:54",
                "nodeType": "VariableDeclaration",
                "scope": 51074,
                "src": "792:11:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51059,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "792:6:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51062,
                "mutability": "mutable",
                "name": "placeOfBirth",
                "nameLocation": "851:12:54",
                "nodeType": "VariableDeclaration",
                "scope": 51074,
                "src": "844:19:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 51061,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "844:6:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51064,
                "mutability": "mutable",
                "name": "dateOfBirth",
                "nameLocation": "922:11:54",
                "nodeType": "VariableDeclaration",
                "scope": 51074,
                "src": "914:19:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51063,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "914:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51066,
                "mutability": "mutable",
                "name": "issueDate",
                "nameLocation": "991:9:54",
                "nodeType": "VariableDeclaration",
                "scope": 51074,
                "src": "983:17:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51065,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "983:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51068,
                "mutability": "mutable",
                "name": "socialSecurityNumber",
                "nameLocation": "1048:20:54",
                "nodeType": "VariableDeclaration",
                "scope": 51074,
                "src": "1040:28:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51067,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1040:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51070,
                "mutability": "mutable",
                "name": "driversLicenceNumber",
                "nameLocation": "1135:20:54",
                "nodeType": "VariableDeclaration",
                "scope": 51074,
                "src": "1127:28:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 51069,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1127:7:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 51073,
                "mutability": "mutable",
                "name": "stampAttestions",
                "nameLocation": "1225:15:54",
                "nodeType": "VariableDeclaration",
                "scope": 51074,
                "src": "1215:25:54",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                  "typeString": "bytes32[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 51071,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1215:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 51072,
                  "nodeType": "ArrayTypeName",
                  "src": "1215:9:54",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                    "typeString": "bytes32[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Passport",
            "nameLocation": "773:8:54",
            "scope": 51465,
            "visibility": "public"
          },
          {
            "id": 51079,
            "nodeType": "EventDefinition",
            "src": "1366:36:54",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 51075,
              "nodeType": "StructuredDocumentation",
              "src": "1284:77:54",
              "text": "@param user @notice This event is emitted when a new Passport is created."
            },
            "eventSelector": "325b88bc4ac3fed38ad6d226bfb680c4dae1e2be7e3ca7865aff5ebad93ad6cf",
            "name": "PassportCreated",
            "nameLocation": "1372:15:54",
            "parameters": {
              "id": 51078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51077,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1396:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51079,
                  "src": "1388:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1388:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1387:14:54"
            }
          },
          {
            "id": 51082,
            "nodeType": "ErrorDefinition",
            "src": "1554:48:54",
            "nodes": [],
            "documentation": {
              "id": 51080,
              "nodeType": "StructuredDocumentation",
              "src": "1408:141:54",
              "text": " @notice This error is emitted when a transfer of a Passport NFT is attempted.\n @dev Passports cannot be transferred."
            },
            "errorSelector": "528ad998",
            "name": "PassportNFT__PassportCannotBeTransfered",
            "nameLocation": "1560:39:54",
            "parameters": {
              "id": 51081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1599:2:54"
            }
          },
          {
            "id": 51085,
            "nodeType": "ErrorDefinition",
            "src": "1723:39:54",
            "nodes": [],
            "documentation": {
              "id": 51083,
              "nodeType": "StructuredDocumentation",
              "src": "1607:111:54",
              "text": "@notice This error is emitted when an operation is attempted on a Passport NFT that hasn't been minted yet."
            },
            "errorSelector": "2f123f44",
            "name": "PassportNFT__PassportNotMinted",
            "nameLocation": "1729:30:54",
            "parameters": {
              "id": 51084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:2:54"
            }
          },
          {
            "id": 51088,
            "nodeType": "ErrorDefinition",
            "src": "1894:43:54",
            "nodes": [],
            "documentation": {
              "id": 51086,
              "nodeType": "StructuredDocumentation",
              "src": "1767:122:54",
              "text": "@notice This error is emitted when a Passport NFT is attempted to be minted by a user who already owns a Passport NFT."
            },
            "errorSelector": "844e9583",
            "name": "PassportNFT__PassportAlreadyMinted",
            "nameLocation": "1900:34:54",
            "parameters": {
              "id": 51087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1934:2:54"
            }
          },
          {
            "id": 51091,
            "nodeType": "ErrorDefinition",
            "src": "2049:37:54",
            "nodes": [],
            "documentation": {
              "id": 51089,
              "nodeType": "StructuredDocumentation",
              "src": "1942:102:54",
              "text": "@notice This error is emitted when the details of a Passport NFT don't match the expected details."
            },
            "errorSelector": "8eb74154",
            "name": "PassportNFT__DetailsMismatch",
            "nameLocation": "2055:28:54",
            "parameters": {
              "id": 51090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2083:2:54"
            }
          },
          {
            "id": 51096,
            "nodeType": "VariableDeclaration",
            "src": "2156:56:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51092,
              "nodeType": "StructuredDocumentation",
              "src": "2092:59:54",
              "text": "@dev Mapping from user addresses to their Passport IDs."
            },
            "mutability": "mutable",
            "name": "userToPassportId",
            "nameLocation": "2196:16:54",
            "scope": 51465,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 51095,
              "keyName": "user",
              "keyNameLocation": "2172:4:54",
              "keyType": {
                "id": 51093,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2164:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2156:39:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "userId",
              "valueNameLocation": "2188:6:54",
              "valueType": {
                "id": 51094,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2180:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51102,
            "nodeType": "VariableDeclaration",
            "src": "2298:61:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51097,
              "nodeType": "StructuredDocumentation",
              "src": "2218:75:54",
              "text": "@dev Mapping from Passport IDs to their corresponding Passport details."
            },
            "mutability": "mutable",
            "name": "passportIdToUser",
            "nameLocation": "2343:16:54",
            "scope": 51465,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51074_storage_$",
              "typeString": "mapping(uint256 => struct PassportNFT.Passport)"
            },
            "typeName": {
              "id": 51101,
              "keyName": "userId",
              "keyNameLocation": "2314:6:54",
              "keyType": {
                "id": 51098,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2306:7:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "2298:44:54",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51074_storage_$",
                "typeString": "mapping(uint256 => struct PassportNFT.Passport)"
              },
              "valueName": "passport",
              "valueNameLocation": "2333:8:54",
              "valueType": {
                "id": 51100,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 51099,
                  "name": "Passport",
                  "nameLocations": [
                    "2324:8:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51074,
                  "src": "2324:8:54"
                },
                "referencedDeclaration": 51074,
                "src": "2324:8:54",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Passport_$51074_storage_ptr",
                  "typeString": "struct PassportNFT.Passport"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 51105,
            "nodeType": "VariableDeclaration",
            "src": "2450:28:54",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 51103,
              "nodeType": "StructuredDocumentation",
              "src": "2365:80:54",
              "text": "@dev Stores the ID to be assigned to the next Passport NFT that gets minted."
            },
            "mutability": "mutable",
            "name": "_nextTokenId",
            "nameLocation": "2466:12:54",
            "scope": 51465,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51104,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2450:7:54",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 51121,
            "nodeType": "FunctionDefinition",
            "src": "2485:125:54",
            "nodes": [],
            "body": {
              "id": 51120,
              "nodeType": "Block",
              "src": "2608:2:54",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "50617373706f72744e4654",
                    "id": 51112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2558:13:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_2be034a237f4277654fa73956ffc3bd848174197ad28f00e4baf114130d75b92",
                      "typeString": "literal_string \"PassportNFT\""
                    },
                    "value": "PassportNFT"
                  },
                  {
                    "hexValue": "4d544b",
                    "id": 51113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2573:5:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_793539e36336d70961c91bdb898dff4b065dbb5ef5ac709025f5b68be91dd01e",
                      "typeString": "literal_string \"MTK\""
                    },
                    "value": "MTK"
                  }
                ],
                "id": 51114,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51111,
                  "name": "ERC721",
                  "nameLocations": [
                    "2551:6:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "2551:6:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2551:28:54"
              },
              {
                "arguments": [
                  {
                    "id": 51116,
                    "name": "eas",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51107,
                    "src": "2592:3:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 51117,
                    "name": "schemaUID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51109,
                    "src": "2597:9:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                ],
                "id": 51118,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 51115,
                  "name": "AttestStamp",
                  "nameLocations": [
                    "2580:11:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51041,
                  "src": "2580:11:54"
                },
                "nodeType": "ModifierInvocation",
                "src": "2580:27:54"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 51110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51107,
                  "mutability": "mutable",
                  "name": "eas",
                  "nameLocation": "2514:3:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51121,
                  "src": "2506:11:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51106,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2506:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51109,
                  "mutability": "mutable",
                  "name": "schemaUID",
                  "nameLocation": "2535:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51121,
                  "src": "2527:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51108,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2527:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2496:54:54"
            },
            "returnParameters": {
              "id": 51119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2608:0:54"
            },
            "scope": 51465,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51134,
            "nodeType": "FunctionDefinition",
            "src": "2771:115:54",
            "nodes": [],
            "body": {
              "id": 51133,
              "nodeType": "Block",
              "src": "2840:46:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 51129,
                      "name": "userToPassportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51096,
                      "src": "2857:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51131,
                    "indexExpression": {
                      "id": 51130,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51124,
                      "src": "2874:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2857:22:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 51128,
                  "id": 51132,
                  "nodeType": "Return",
                  "src": "2850:29:54"
                }
              ]
            },
            "documentation": {
              "id": 51122,
              "nodeType": "StructuredDocumentation",
              "src": "2616:150:54",
              "text": " @notice Returns the passport ID associated with a user.\n @param user The address of the user.\n @return The passport ID."
            },
            "functionSelector": "10a943cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPassportId",
            "nameLocation": "2780:13:54",
            "parameters": {
              "id": 51125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51124,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2802:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51134,
                  "src": "2794:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2794:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2793:14:54"
            },
            "returnParameters": {
              "id": 51128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51127,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51134,
                  "src": "2831:7:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51126,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2831:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2830:9:54"
            },
            "scope": 51465,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51203,
            "nodeType": "FunctionDefinition",
            "src": "3447:813:54",
            "nodes": [],
            "body": {
              "id": 51202,
              "nodeType": "Block",
              "src": "3751:509:54",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51151
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51151,
                      "mutability": "mutable",
                      "name": "passportId",
                      "nameLocation": "3769:10:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 51202,
                      "src": "3761:18:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51150,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3761:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51156,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51152,
                      "name": "userToPassportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51096,
                      "src": "3782:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51155,
                    "indexExpression": {
                      "expression": {
                        "id": 51153,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3799:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3803:6:54",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3799:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3782:28:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3761:49:54"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51157,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51151,
                      "src": "3824:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3838:1:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3824:15:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51164,
                  "nodeType": "IfStatement",
                  "src": "3820:85:54",
                  "trueBody": {
                    "id": 51163,
                    "nodeType": "Block",
                    "src": "3841:64:54",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51160,
                            "name": "PassportNFT__PassportNotMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51085,
                            "src": "3862:30:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3862:32:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51162,
                        "nodeType": "RevertStatement",
                        "src": "3855:39:54"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    51167
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51167,
                      "mutability": "mutable",
                      "name": "passport",
                      "nameLocation": "3930:8:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 51202,
                      "src": "3914:24:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                        "typeString": "struct PassportNFT.Passport"
                      },
                      "typeName": {
                        "id": 51166,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51165,
                          "name": "Passport",
                          "nameLocations": [
                            "3914:8:54"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51074,
                          "src": "3914:8:54"
                        },
                        "referencedDeclaration": 51074,
                        "src": "3914:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_storage_ptr",
                          "typeString": "struct PassportNFT.Passport"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51171,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51168,
                      "name": "passportIdToUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51102,
                      "src": "3941:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51074_storage_$",
                        "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                      }
                    },
                    "id": 51170,
                    "indexExpression": {
                      "id": 51169,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51151,
                      "src": "3958:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3941:28:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Passport_$51074_storage",
                      "typeString": "struct PassportNFT.Passport storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3914:55:54"
                },
                {
                  "expression": {
                    "id": 51175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51172,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51138,
                      "src": "3979:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51173,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51167,
                        "src": "3986:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51174,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3995:4:54",
                      "memberName": "name",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51060,
                      "src": "3986:13:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3979:20:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 51176,
                  "nodeType": "ExpressionStatement",
                  "src": "3979:20:54"
                },
                {
                  "expression": {
                    "id": 51180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51177,
                      "name": "placeOfBirth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51140,
                      "src": "4009:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51178,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51167,
                        "src": "4024:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51179,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4033:12:54",
                      "memberName": "placeOfBirth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51062,
                      "src": "4024:21:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4009:36:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 51181,
                  "nodeType": "ExpressionStatement",
                  "src": "4009:36:54"
                },
                {
                  "expression": {
                    "id": 51185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51182,
                      "name": "dateOfBirth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51142,
                      "src": "4055:11:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51183,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51167,
                        "src": "4069:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4078:11:54",
                      "memberName": "dateOfBirth",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51064,
                      "src": "4069:20:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4055:34:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51186,
                  "nodeType": "ExpressionStatement",
                  "src": "4055:34:54"
                },
                {
                  "expression": {
                    "id": 51190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51187,
                      "name": "issueDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51144,
                      "src": "4099:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51188,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51167,
                        "src": "4111:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51189,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4120:9:54",
                      "memberName": "issueDate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51066,
                      "src": "4111:18:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4099:30:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51191,
                  "nodeType": "ExpressionStatement",
                  "src": "4099:30:54"
                },
                {
                  "expression": {
                    "id": 51195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51192,
                      "name": "socialSecurityNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51146,
                      "src": "4139:20:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51193,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51167,
                        "src": "4162:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51194,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4171:20:54",
                      "memberName": "socialSecurityNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51068,
                      "src": "4162:29:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4139:52:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51196,
                  "nodeType": "ExpressionStatement",
                  "src": "4139:52:54"
                },
                {
                  "expression": {
                    "id": 51200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51197,
                      "name": "driversLicenceNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51148,
                      "src": "4201:20:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 51198,
                        "name": "passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51167,
                        "src": "4224:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                          "typeString": "struct PassportNFT.Passport memory"
                        }
                      },
                      "id": 51199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4233:20:54",
                      "memberName": "driversLicenceNumber",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 51070,
                      "src": "4224:29:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4201:52:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51201,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:52:54"
                }
              ]
            },
            "documentation": {
              "id": 51135,
              "nodeType": "StructuredDocumentation",
              "src": "2892:550:54",
              "text": " @notice Returns the passport details for a user.\n @dev Reverts if the user does not have a passport.\n @return name The name of the passport holder.\n @return placeOfBirth The place of birth of the passport holder.\n @return dateOfBirth The date of birth of the passport holder.\n @return issueDate The issue date of the passport.\n @return socialSecurityNumber The Social Security Number of the passport holder.\n @return driversLicenceNumber The Driver's License Number of the passport holder."
            },
            "functionSelector": "8eb20b0b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPassport",
            "nameLocation": "3456:11:54",
            "parameters": {
              "id": 51136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3467:2:54"
            },
            "returnParameters": {
              "id": 51149,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51138,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "3544:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51203,
                  "src": "3530:18:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51137,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3530:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51140,
                  "mutability": "mutable",
                  "name": "placeOfBirth",
                  "nameLocation": "3576:12:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51203,
                  "src": "3562:26:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3562:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51142,
                  "mutability": "mutable",
                  "name": "dateOfBirth",
                  "nameLocation": "3610:11:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51203,
                  "src": "3602:19:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51141,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3602:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51144,
                  "mutability": "mutable",
                  "name": "issueDate",
                  "nameLocation": "3643:9:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51203,
                  "src": "3635:17:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3635:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51146,
                  "mutability": "mutable",
                  "name": "socialSecurityNumber",
                  "nameLocation": "3674:20:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51203,
                  "src": "3666:28:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51145,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3666:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51148,
                  "mutability": "mutable",
                  "name": "driversLicenceNumber",
                  "nameLocation": "3716:20:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51203,
                  "src": "3708:28:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51147,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3708:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3516:230:54"
            },
            "scope": 51465,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51229,
            "nodeType": "FunctionDefinition",
            "src": "4453:261:54",
            "nodes": [],
            "body": {
              "id": 51228,
              "nodeType": "Block",
              "src": "4548:166:54",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51213
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51213,
                      "mutability": "mutable",
                      "name": "passportId",
                      "nameLocation": "4566:10:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 51228,
                      "src": "4558:18:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51212,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4558:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51217,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51214,
                      "name": "userToPassportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51096,
                      "src": "4579:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51216,
                    "indexExpression": {
                      "id": 51215,
                      "name": "user",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51206,
                      "src": "4596:4:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4579:22:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4558:43:54"
                },
                {
                  "assignments": [
                    51220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51220,
                      "mutability": "mutable",
                      "name": "passport",
                      "nameLocation": "4627:8:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 51228,
                      "src": "4611:24:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                        "typeString": "struct PassportNFT.Passport"
                      },
                      "typeName": {
                        "id": 51219,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51218,
                          "name": "Passport",
                          "nameLocations": [
                            "4611:8:54"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51074,
                          "src": "4611:8:54"
                        },
                        "referencedDeclaration": 51074,
                        "src": "4611:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_storage_ptr",
                          "typeString": "struct PassportNFT.Passport"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51224,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51221,
                      "name": "passportIdToUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51102,
                      "src": "4638:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51074_storage_$",
                        "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                      }
                    },
                    "id": 51223,
                    "indexExpression": {
                      "id": 51222,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51213,
                      "src": "4655:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4638:28:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Passport_$51074_storage",
                      "typeString": "struct PassportNFT.Passport storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4611:55:54"
                },
                {
                  "expression": {
                    "expression": {
                      "id": 51225,
                      "name": "passport",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51220,
                      "src": "4683:8:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                        "typeString": "struct PassportNFT.Passport memory"
                      }
                    },
                    "id": 51226,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4692:15:54",
                    "memberName": "stampAttestions",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 51073,
                    "src": "4683:24:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                      "typeString": "bytes32[] memory"
                    }
                  },
                  "functionReturnParameters": 51211,
                  "id": 51227,
                  "nodeType": "Return",
                  "src": "4676:31:54"
                }
              ]
            },
            "documentation": {
              "id": 51204,
              "nodeType": "StructuredDocumentation",
              "src": "4266:182:54",
              "text": " @notice Returns the attestation stamps for a user's passport.\n @param user The address of the user.\n @return stamps An array of the attestation stamps."
            },
            "functionSelector": "1a371932",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStamps",
            "nameLocation": "4462:9:54",
            "parameters": {
              "id": 51207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51206,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4489:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51229,
                  "src": "4481:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4481:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4471:28:54"
            },
            "returnParameters": {
              "id": 51211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51210,
                  "mutability": "mutable",
                  "name": "stamps",
                  "nameLocation": "4540:6:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51229,
                  "src": "4523:23:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51208,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4523:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 51209,
                    "nodeType": "ArrayTypeName",
                    "src": "4523:9:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4522:25:54"
            },
            "scope": 51465,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51304,
            "nodeType": "FunctionDefinition",
            "src": "5282:937:54",
            "nodes": [],
            "body": {
              "id": 51303,
              "nodeType": "Block",
              "src": "5524:695:54",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 51245,
                        "name": "userToPassportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51096,
                        "src": "5538:16:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51248,
                      "indexExpression": {
                        "expression": {
                          "id": 51246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5555:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5559:6:54",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5555:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5538:28:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51249,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5570:1:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5538:33:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51255,
                  "nodeType": "IfStatement",
                  "src": "5534:107:54",
                  "trueBody": {
                    "id": 51254,
                    "nodeType": "Block",
                    "src": "5573:68:54",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51251,
                            "name": "PassportNFT__PassportAlreadyMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51088,
                            "src": "5594:34:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5594:36:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51253,
                        "nodeType": "RevertStatement",
                        "src": "5587:43:54"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    51257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51257,
                      "mutability": "mutable",
                      "name": "tokenId",
                      "nameLocation": "5658:7:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 51303,
                      "src": "5650:15:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5650:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51260,
                  "initialValue": {
                    "id": 51259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": true,
                    "src": "5668:14:54",
                    "subExpression": {
                      "id": 51258,
                      "name": "_nextTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51105,
                      "src": "5670:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5650:32:54"
                },
                {
                  "expression": {
                    "id": 51278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51261,
                        "name": "passportIdToUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51102,
                        "src": "5692:16:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51074_storage_$",
                          "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                        }
                      },
                      "id": 51263,
                      "indexExpression": {
                        "id": 51262,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51257,
                        "src": "5709:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5692:25:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51074_storage",
                        "typeString": "struct PassportNFT.Passport storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 51265,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51232,
                          "src": "5749:5:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 51266,
                          "name": "_placeOfBirth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51234,
                          "src": "5782:13:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 51267,
                          "name": "_dateOfBirth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51236,
                          "src": "5822:12:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 51268,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "5859:5:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5865:9:54",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5859:15:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 51270,
                          "name": "_socialSecurityNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51238,
                          "src": "5910:21:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 51271,
                          "name": "_driversLicenceNumber",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51240,
                          "src": "5967:21:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 51275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6033:1:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 51274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "6019:13:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes32[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 51272,
                                "name": "bytes32",
                                "nodeType": "ElementaryTypeName",
                                "src": "6023:7:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "id": 51273,
                              "nodeType": "ArrayTypeName",
                              "src": "6023:9:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                                "typeString": "bytes32[]"
                              }
                            }
                          },
                          "id": 51276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6019:16:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                            "typeString": "bytes32[] memory"
                          }
                        ],
                        "id": 51264,
                        "name": "Passport",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51074,
                        "src": "5720:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Passport_$51074_storage_ptr_$",
                          "typeString": "type(struct PassportNFT.Passport storage pointer)"
                        }
                      },
                      "id": 51277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [
                        "5743:4:54",
                        "5768:12:54",
                        "5809:11:54",
                        "5848:9:54",
                        "5888:20:54",
                        "5945:20:54",
                        "6002:15:54"
                      ],
                      "names": [
                        "name",
                        "placeOfBirth",
                        "dateOfBirth",
                        "issueDate",
                        "socialSecurityNumber",
                        "driversLicenceNumber",
                        "stampAttestions"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "5720:326:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                        "typeString": "struct PassportNFT.Passport memory"
                      }
                    },
                    "src": "5692:354:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Passport_$51074_storage",
                      "typeString": "struct PassportNFT.Passport storage ref"
                    }
                  },
                  "id": 51279,
                  "nodeType": "ExpressionStatement",
                  "src": "5692:354:54"
                },
                {
                  "expression": {
                    "id": 51285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 51280,
                        "name": "userToPassportId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51096,
                        "src": "6056:16:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 51283,
                      "indexExpression": {
                        "expression": {
                          "id": 51281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6073:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6077:6:54",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6073:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6056:28:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 51284,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51257,
                      "src": "6087:7:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6056:38:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 51286,
                  "nodeType": "ExpressionStatement",
                  "src": "6056:38:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51288,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6114:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6118:6:54",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6114:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51290,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51257,
                        "src": "6126:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 51287,
                      "name": "_safeMint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47261,
                        47287
                      ],
                      "referencedDeclaration": 47261,
                      "src": "6104:9:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 51291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6104:30:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51292,
                  "nodeType": "ExpressionStatement",
                  "src": "6104:30:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51294,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51257,
                        "src": "6157:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 51295,
                        "name": "uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51242,
                        "src": "6166:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 51293,
                      "name": "_setTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47899,
                      "src": "6144:12:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 51296,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6144:26:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51297,
                  "nodeType": "ExpressionStatement",
                  "src": "6144:26:54"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 51299,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6201:3:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 51300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6205:6:54",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6201:10:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 51298,
                      "name": "PassportCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51079,
                      "src": "6185:15:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 51301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6185:27:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51302,
                  "nodeType": "EmitStatement",
                  "src": "6180:32:54"
                }
              ]
            },
            "documentation": {
              "id": 51230,
              "nodeType": "StructuredDocumentation",
              "src": "4720:557:54",
              "text": " @notice Creates a new Passport NFT for the sender.\n @dev Only allows creating a passport if the sender has not created one before.\n @param _name Name of the passport holder.\n @param _placeOfBirth Place of birth of the passport holder.\n @param _dateOfBirth Date of birth of the passport holder.\n @param _socialSecurityNumber Social Security Number of the passport holder.\n @param _driversLicenceNumber Driver's License Number of the passport holder.\n @param uri Token URI for the new passport NFT."
            },
            "functionSelector": "b05e5158",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPassport",
            "nameLocation": "5291:14:54",
            "parameters": {
              "id": 51243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51232,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5331:5:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51304,
                  "src": "5315:21:54",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51231,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5315:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51234,
                  "mutability": "mutable",
                  "name": "_placeOfBirth",
                  "nameLocation": "5362:13:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51304,
                  "src": "5346:29:54",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5346:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51236,
                  "mutability": "mutable",
                  "name": "_dateOfBirth",
                  "nameLocation": "5393:12:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51304,
                  "src": "5385:20:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5385:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51238,
                  "mutability": "mutable",
                  "name": "_socialSecurityNumber",
                  "nameLocation": "5423:21:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51304,
                  "src": "5415:29:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51237,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5415:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51240,
                  "mutability": "mutable",
                  "name": "_driversLicenceNumber",
                  "nameLocation": "5462:21:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51304,
                  "src": "5454:29:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51239,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5454:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51242,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "5507:3:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51304,
                  "src": "5493:17:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51241,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5493:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5305:211:54"
            },
            "returnParameters": {
              "id": 51244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5524:0:54"
            },
            "scope": 51465,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51390,
            "nodeType": "FunctionDefinition",
            "src": "6565:804:54",
            "nodes": [],
            "body": {
              "id": 51389,
              "nodeType": "Block",
              "src": "6695:674:54",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    51315
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51315,
                      "mutability": "mutable",
                      "name": "passportId",
                      "nameLocation": "6713:10:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 51389,
                      "src": "6705:18:54",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 51314,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6705:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51320,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51316,
                      "name": "userToPassportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51096,
                      "src": "6726:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 51319,
                    "indexExpression": {
                      "expression": {
                        "id": 51317,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6743:3:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 51318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6747:6:54",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "6743:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6726:28:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6705:49:54"
                },
                {
                  "assignments": [
                    51323
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 51323,
                      "mutability": "mutable",
                      "name": "passport",
                      "nameLocation": "6780:8:54",
                      "nodeType": "VariableDeclaration",
                      "scope": 51389,
                      "src": "6764:24:54",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                        "typeString": "struct PassportNFT.Passport"
                      },
                      "typeName": {
                        "id": 51322,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 51321,
                          "name": "Passport",
                          "nameLocations": [
                            "6764:8:54"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 51074,
                          "src": "6764:8:54"
                        },
                        "referencedDeclaration": 51074,
                        "src": "6764:8:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Passport_$51074_storage_ptr",
                          "typeString": "struct PassportNFT.Passport"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 51327,
                  "initialValue": {
                    "baseExpression": {
                      "id": 51324,
                      "name": "passportIdToUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51102,
                      "src": "6791:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51074_storage_$",
                        "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                      }
                    },
                    "id": 51326,
                    "indexExpression": {
                      "id": 51325,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51315,
                      "src": "6808:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "6791:28:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Passport_$51074_storage",
                      "typeString": "struct PassportNFT.Passport storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6764:55:54"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 51330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 51328,
                      "name": "passportId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51315,
                      "src": "6833:10:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 51329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6847:1:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6833:15:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51335,
                  "nodeType": "IfStatement",
                  "src": "6829:85:54",
                  "trueBody": {
                    "id": 51334,
                    "nodeType": "Block",
                    "src": "6850:64:54",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51331,
                            "name": "PassportNFT__PassportNotMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51085,
                            "src": "6871:30:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6871:32:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51333,
                        "nodeType": "RevertStatement",
                        "src": "6864:39:54"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 51364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 51347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 51338,
                                  "name": "name",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 51307,
                                  "src": "6947:4:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_calldata_ptr",
                                    "typeString": "string calldata"
                                  }
                                ],
                                "id": 51337,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6941:5:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 51336,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6941:5:54",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51339,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6941:11:54",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            "id": 51340,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6953:6:54",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6941:18:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 51343,
                                    "name": "passport",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51323,
                                    "src": "6969:8:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                                      "typeString": "struct PassportNFT.Passport memory"
                                    }
                                  },
                                  "id": 51344,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6978:4:54",
                                  "memberName": "name",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 51060,
                                  "src": "6969:13:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 51342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6963:5:54",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 51341,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6963:5:54",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 51345,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6963:20:54",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 51346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6984:6:54",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "6963:27:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6941:49:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 51348,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "6940:51:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 51362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 51352,
                                    "name": "name",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 51307,
                                    "src": "7024:4:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_calldata_ptr",
                                      "typeString": "string calldata"
                                    }
                                  ],
                                  "id": 51351,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7018:5:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 51350,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7018:5:54",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 51353,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7018:11:54",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_calldata_ptr",
                                  "typeString": "bytes calldata"
                                }
                              ],
                              "id": 51349,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7008:9:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 51354,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7008:22:54",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 51358,
                                      "name": "passport",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 51323,
                                      "src": "7050:8:54",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Passport_$51074_memory_ptr",
                                        "typeString": "struct PassportNFT.Passport memory"
                                      }
                                    },
                                    "id": 51359,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "7059:4:54",
                                    "memberName": "name",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 51060,
                                    "src": "7050:13:54",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 51357,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7044:5:54",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                    "typeString": "type(bytes storage pointer)"
                                  },
                                  "typeName": {
                                    "id": 51356,
                                    "name": "bytes",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7044:5:54",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 51360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7044:20:54",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 51355,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "7034:9:54",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 51361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7034:31:54",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "7008:57:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 51363,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7007:59:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6940:126:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51369,
                  "nodeType": "IfStatement",
                  "src": "6923:216:54",
                  "trueBody": {
                    "id": 51368,
                    "nodeType": "Block",
                    "src": "7077:62:54",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51365,
                            "name": "PassportNFT__DetailsMismatch",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51091,
                            "src": "7098:28:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7098:30:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51367,
                        "nodeType": "RevertStatement",
                        "src": "7091:37:54"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 51379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51370,
                      "name": "attestationUID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51312,
                      "src": "7148:14:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 51372,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7199:3:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 51373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7203:6:54",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7199:10:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 51374,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51307,
                          "src": "7223:4:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "id": 51375,
                          "name": "country",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51309,
                          "src": "7241:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        {
                          "expression": {
                            "id": 51376,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "7262:5:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 51377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7268:9:54",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "7262:15:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 51371,
                        "name": "makeStampAttestation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50994,
                        "src": "7165:20:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$_t_uint256_$returns$_t_bytes32_$",
                          "typeString": "function (address,string calldata,string calldata,uint256) returns (bytes32)"
                        }
                      },
                      "id": 51378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7165:122:54",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "7148:139:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 51380,
                  "nodeType": "ExpressionStatement",
                  "src": "7148:139:54"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51386,
                        "name": "attestationUID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51312,
                        "src": "7347:14:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 51381,
                            "name": "passportIdToUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51102,
                            "src": "7297:16:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Passport_$51074_storage_$",
                              "typeString": "mapping(uint256 => struct PassportNFT.Passport storage ref)"
                            }
                          },
                          "id": 51383,
                          "indexExpression": {
                            "id": 51382,
                            "name": "passportId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51315,
                            "src": "7314:10:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7297:28:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Passport_$51074_storage",
                            "typeString": "struct PassportNFT.Passport storage ref"
                          }
                        },
                        "id": 51384,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7326:15:54",
                        "memberName": "stampAttestions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 51073,
                        "src": "7297:44:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
                          "typeString": "bytes32[] storage ref"
                        }
                      },
                      "id": 51385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7342:4:54",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7297:49:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$attached_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
                        "typeString": "function (bytes32[] storage pointer,bytes32)"
                      }
                    },
                    "id": 51387,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7297:65:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51388,
                  "nodeType": "ExpressionStatement",
                  "src": "7297:65:54"
                }
              ]
            },
            "documentation": {
              "id": 51305,
              "nodeType": "StructuredDocumentation",
              "src": "6225:335:54",
              "text": " @notice Grants a stamp to the passport holder.\n @dev Reverts if the user does not have a passport or if the details do not match.\n @param name Name of the passport holder.\n @param country Country where the passport holder is visiting.\n @return attestationUID The UID of the stamp attestation."
            },
            "functionSelector": "e201100d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createStamp",
            "nameLocation": "6574:11:54",
            "parameters": {
              "id": 51310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51307,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "6611:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51390,
                  "src": "6595:20:54",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51306,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6595:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51309,
                  "mutability": "mutable",
                  "name": "country",
                  "nameLocation": "6641:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51390,
                  "src": "6625:23:54",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51308,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6625:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6585:69:54"
            },
            "returnParameters": {
              "id": 51313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51312,
                  "mutability": "mutable",
                  "name": "attestationUID",
                  "nameLocation": "6679:14:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51390,
                  "src": "6671:22:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 51311,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6671:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6670:24:54"
            },
            "scope": 51465,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51430,
            "nodeType": "FunctionDefinition",
            "src": "7756:308:54",
            "nodes": [],
            "body": {
              "id": 51429,
              "nodeType": "Block",
              "src": "7884:180:54",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 51415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 51408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 51403,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51393,
                        "src": "7898:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 51406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7914:1:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7906:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51404,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7906:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7906:10:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7898:18:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 51414,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 51409,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51395,
                        "src": "7920:2:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 51412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7934:1:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 51411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7926:7:54",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 51410,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7926:7:54",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 51413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7926:10:54",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7920:16:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7898:38:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 51420,
                  "nodeType": "IfStatement",
                  "src": "7894:117:54",
                  "trueBody": {
                    "id": 51419,
                    "nodeType": "Block",
                    "src": "7938:73:54",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 51416,
                            "name": "PassportNFT__PassportCannotBeTransfered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51082,
                            "src": "7959:39:54",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 51417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7959:41:54",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 51418,
                        "nodeType": "RevertStatement",
                        "src": "7952:48:54"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51424,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51393,
                        "src": "8039:4:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51425,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51395,
                        "src": "8045:2:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 51426,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51397,
                        "src": "8049:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 51421,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8020:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PassportNFT_$51465_$",
                          "typeString": "type(contract super PassportNFT)"
                        }
                      },
                      "id": 51423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8026:12:54",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 46947,
                      "src": "8020:18:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 51427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8020:37:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 51428,
                  "nodeType": "ExpressionStatement",
                  "src": "8020:37:54"
                }
              ]
            },
            "baseFunctions": [
              46947,
              47721
            ],
            "documentation": {
              "id": 51391,
              "nodeType": "StructuredDocumentation",
              "src": "7375:376:54",
              "text": " @notice Transfers a token from one address to another.\n @dev Overrides the transferFrom function in the ERC721 contract. Reverts if the sender and recipient are not the zero address.\n @param from The address to transfer the token from.\n @param to The address to transfer the token to.\n @param tokenId The ID of the token to transfer."
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "transferFrom",
            "nameLocation": "7765:12:54",
            "overrides": {
              "id": 51401,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 51399,
                  "name": "ERC721",
                  "nameLocations": [
                    "7867:6:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "7867:6:54"
                },
                {
                  "id": 51400,
                  "name": "IERC721",
                  "nameLocations": [
                    "7875:7:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47756,
                  "src": "7875:7:54"
                }
              ],
              "src": "7858:25:54"
            },
            "parameters": {
              "id": 51398,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51393,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7795:4:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51430,
                  "src": "7787:12:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51392,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7787:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51395,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7817:2:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51430,
                  "src": "7809:10:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51394,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7809:7:54",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51397,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "7837:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51430,
                  "src": "7829:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51396,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7829:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7777:73:54"
            },
            "returnParameters": {
              "id": 51402,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7884:0:54"
            },
            "scope": 51465,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51447,
            "nodeType": "FunctionDefinition",
            "src": "8286:167:54",
            "nodes": [],
            "body": {
              "id": 51446,
              "nodeType": "Block",
              "src": "8406:47:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51443,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51433,
                        "src": "8438:7:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 51441,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8423:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PassportNFT_$51465_$",
                          "typeString": "type(contract super PassportNFT)"
                        }
                      },
                      "id": 51442,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8429:8:54",
                      "memberName": "tokenURI",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47880,
                      "src": "8423:14:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 51444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8423:23:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 51440,
                  "id": 51445,
                  "nodeType": "Return",
                  "src": "8416:30:54"
                }
              ]
            },
            "baseFunctions": [
              46826,
              47880
            ],
            "documentation": {
              "id": 51431,
              "nodeType": "StructuredDocumentation",
              "src": "8070:211:54",
              "text": " @notice Returns the token URI for a given token ID.\n @dev Overrides the tokenURI function in the ERC721 contract.\n @param tokenId The ID of the token.\n @return The token URI."
            },
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "8295:8:54",
            "overrides": {
              "id": 51437,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 51435,
                  "name": "ERC721",
                  "nameLocations": [
                    "8356:6:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "8356:6:54"
                },
                {
                  "id": 51436,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "8364:16:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47900,
                  "src": "8364:16:54"
                }
              ],
              "src": "8347:34:54"
            },
            "parameters": {
              "id": 51434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51433,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8321:7:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51447,
                  "src": "8313:15:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51432,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8313:7:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8303:31:54"
            },
            "returnParameters": {
              "id": 51440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51439,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51447,
                  "src": "8391:13:54",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51438,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8391:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8390:15:54"
            },
            "scope": 51465,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 51464,
            "nodeType": "FunctionDefinition",
            "src": "8731:183:54",
            "nodes": [],
            "body": {
              "id": 51463,
              "nodeType": "Block",
              "src": "8854:60:54",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 51460,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51450,
                        "src": "8895:11:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 51458,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8871:5:54",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PassportNFT_$51465_$",
                          "typeString": "type(contract super PassportNFT)"
                        }
                      },
                      "id": 51459,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8877:17:54",
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 47823,
                      "src": "8871:23:54",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (bytes4) view returns (bool)"
                      }
                    },
                    "id": 51461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8871:36:54",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 51457,
                  "id": 51462,
                  "nodeType": "Return",
                  "src": "8864:43:54"
                }
              ]
            },
            "baseFunctions": [
              46731,
              47823
            ],
            "documentation": {
              "id": 51448,
              "nodeType": "StructuredDocumentation",
              "src": "8459:267:54",
              "text": " @notice Checks if the contract supports an interface.\n @dev Overrides the supportsInterface function in the ERC721 contract.\n @param interfaceId The ID of the interface.\n @return A boolean indicating if the interface is supported."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "8740:17:54",
            "overrides": {
              "id": 51454,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 51452,
                  "name": "ERC721",
                  "nameLocations": [
                    "8813:6:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47639,
                  "src": "8813:6:54"
                },
                {
                  "id": 51453,
                  "name": "ERC721URIStorage",
                  "nameLocations": [
                    "8821:16:54"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47900,
                  "src": "8821:16:54"
                }
              ],
              "src": "8804:34:54"
            },
            "parameters": {
              "id": 51451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51450,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "8774:11:54",
                  "nodeType": "VariableDeclaration",
                  "scope": 51464,
                  "src": "8767:18:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 51449,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "8767:6:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8757:34:54"
            },
            "returnParameters": {
              "id": 51457,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51456,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 51464,
                  "src": "8848:4:54",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51455,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8848:4:54",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8847:6:54"
            },
            "scope": 51465,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51052,
              "name": "ERC721",
              "nameLocations": [
                "503:6:54"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47639,
              "src": "503:6:54"
            },
            "id": 51053,
            "nodeType": "InheritanceSpecifier",
            "src": "503:6:54"
          },
          {
            "baseName": {
              "id": 51054,
              "name": "ERC721URIStorage",
              "nameLocations": [
                "511:16:54"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 47900,
              "src": "511:16:54"
            },
            "id": 51055,
            "nodeType": "InheritanceSpecifier",
            "src": "511:16:54"
          },
          {
            "baseName": {
              "id": 51056,
              "name": "AttestStamp",
              "nameLocations": [
                "529:11:54"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51041,
              "src": "529:11:54"
            },
            "id": 51057,
            "nodeType": "InheritanceSpecifier",
            "src": "529:11:54"
          }
        ],
        "canonicalName": "PassportNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 51051,
          "nodeType": "StructuredDocumentation",
          "src": "290:188:54",
          "text": " @title PassportNFT\n @notice This contract creates, manages, and transfers Passport Non-Fungible Tokens (NFTs).\n @dev Inherits from ERC721, ERC721URIStorage, and AttestStamp."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          51465,
          51041,
          47900,
          47639,
          46583,
          47928,
          46464,
          47756,
          49559,
          49571,
          48203
        ],
        "name": "PassportNFT",
        "nameLocation": "488:11:54",
        "scope": 51466,
        "usedErrors": [
          46541,
          46546,
          46555,
          46560,
          46565,
          46572,
          46577,
          46582,
          51082,
          51085,
          51088,
          51091
        ],
        "usedEvents": [
          46456,
          46463,
          47655,
          47664,
          47673,
          51079
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 54
}